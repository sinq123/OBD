/* soapDeviceSwapIfaceImplServiceSoapBindingProxy.cpp
   Generated by gSOAP 2.8.21 from deviceSwap.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapDeviceSwapIfaceImplServiceSoapBindingProxy.h"

DeviceSwapIfaceImplServiceSoapBindingProxy::DeviceSwapIfaceImplServiceSoapBindingProxy()
{	DeviceSwapIfaceImplServiceSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

DeviceSwapIfaceImplServiceSoapBindingProxy::DeviceSwapIfaceImplServiceSoapBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

DeviceSwapIfaceImplServiceSoapBindingProxy::DeviceSwapIfaceImplServiceSoapBindingProxy(const char *url)
{	DeviceSwapIfaceImplServiceSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

DeviceSwapIfaceImplServiceSoapBindingProxy::DeviceSwapIfaceImplServiceSoapBindingProxy(soap_mode iomode)
{	DeviceSwapIfaceImplServiceSoapBindingProxy_init(iomode, iomode);
}

DeviceSwapIfaceImplServiceSoapBindingProxy::DeviceSwapIfaceImplServiceSoapBindingProxy(const char *url, soap_mode iomode)
{	DeviceSwapIfaceImplServiceSoapBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

DeviceSwapIfaceImplServiceSoapBindingProxy::DeviceSwapIfaceImplServiceSoapBindingProxy(soap_mode imode, soap_mode omode)
{	DeviceSwapIfaceImplServiceSoapBindingProxy_init(imode, omode);
}

DeviceSwapIfaceImplServiceSoapBindingProxy::~DeviceSwapIfaceImplServiceSoapBindingProxy()
{ }

void DeviceSwapIfaceImplServiceSoapBindingProxy::DeviceSwapIfaceImplServiceSoapBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://iface.server.webservice.zkyt.com/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void DeviceSwapIfaceImplServiceSoapBindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void DeviceSwapIfaceImplServiceSoapBindingProxy::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	DeviceSwapIfaceImplServiceSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void DeviceSwapIfaceImplServiceSoapBindingProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *DeviceSwapIfaceImplServiceSoapBindingProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *DeviceSwapIfaceImplServiceSoapBindingProxy::soap_fault()
{	return this->fault;
}

const char *DeviceSwapIfaceImplServiceSoapBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *DeviceSwapIfaceImplServiceSoapBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void DeviceSwapIfaceImplServiceSoapBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void DeviceSwapIfaceImplServiceSoapBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *DeviceSwapIfaceImplServiceSoapBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int DeviceSwapIfaceImplServiceSoapBindingProxy::argChang(const char *endpoint, const char *soap_action, ns1__argChang *ns1__argChang_, ns1__argChangResponse &ns1__argChangResponse_)
{	struct soap *soap = this;
	struct __ns1__argChang soap_tmp___ns1__argChang;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/argChang";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__argChang.ns1__argChang_ = ns1__argChang_;
	soap_serializeheader(soap);
	soap_serialize___ns1__argChang(soap, &soap_tmp___ns1__argChang);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__argChang(soap, &soap_tmp___ns1__argChang, "-ns1:argChang", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__argChang(soap, &soap_tmp___ns1__argChang, "-ns1:argChang", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__argChangResponse_)
		return soap_closesock(soap);
	ns1__argChangResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__argChangResponse_.soap_get(soap, "ns1:argChangResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::lightproofSmokeLog(const char *endpoint, const char *soap_action, ns1__lightproofSmokeLog *ns1__lightproofSmokeLog_, ns1__lightproofSmokeLogResponse &ns1__lightproofSmokeLogResponse_)
{	struct soap *soap = this;
	struct __ns1__lightproofSmokeLog soap_tmp___ns1__lightproofSmokeLog;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/LightproofSmokeLog";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__lightproofSmokeLog.ns1__lightproofSmokeLog_ = ns1__lightproofSmokeLog_;
	soap_serializeheader(soap);
	soap_serialize___ns1__lightproofSmokeLog(soap, &soap_tmp___ns1__lightproofSmokeLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__lightproofSmokeLog(soap, &soap_tmp___ns1__lightproofSmokeLog, "-ns1:lightproofSmokeLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__lightproofSmokeLog(soap, &soap_tmp___ns1__lightproofSmokeLog, "-ns1:lightproofSmokeLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__lightproofSmokeLogResponse_)
		return soap_closesock(soap);
	ns1__lightproofSmokeLogResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__lightproofSmokeLogResponse_.soap_get(soap, "ns1:lightproofSmokeLogResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::getCarInfo(const char *endpoint, const char *soap_action, ns1__getCarInfo *ns1__getCarInfo_, ns1__getCarInfoResponse &ns1__getCarInfoResponse_)
{	struct soap *soap = this;
	struct __ns1__getCarInfo soap_tmp___ns1__getCarInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/getCarInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getCarInfo.ns1__getCarInfo_ = ns1__getCarInfo_;
	soap_serializeheader(soap);
	soap_serialize___ns1__getCarInfo(soap, &soap_tmp___ns1__getCarInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getCarInfo(soap, &soap_tmp___ns1__getCarInfo, "-ns1:getCarInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getCarInfo(soap, &soap_tmp___ns1__getCarInfo, "-ns1:getCarInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__getCarInfoResponse_)
		return soap_closesock(soap);
	ns1__getCarInfoResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getCarInfoResponse_.soap_get(soap, "ns1:getCarInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::sendMessage(const char *endpoint, const char *soap_action, ns1__sendMessage *ns1__sendMessage_, ns1__sendMessageResponse &ns1__sendMessageResponse_)
{	struct soap *soap = this;
	struct __ns1__sendMessage soap_tmp___ns1__sendMessage;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/sendMessage";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__sendMessage.ns1__sendMessage_ = ns1__sendMessage_;
	soap_serializeheader(soap);
	soap_serialize___ns1__sendMessage(soap, &soap_tmp___ns1__sendMessage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__sendMessage(soap, &soap_tmp___ns1__sendMessage, "-ns1:sendMessage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__sendMessage(soap, &soap_tmp___ns1__sendMessage, "-ns1:sendMessage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__sendMessageResponse_)
		return soap_closesock(soap);
	ns1__sendMessageResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__sendMessageResponse_.soap_get(soap, "ns1:sendMessageResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::bgAirHC(const char *endpoint, const char *soap_action, ns1__bgAirHC *ns1__bgAirHC_, ns1__bgAirHCResponse &ns1__bgAirHCResponse_)
{	struct soap *soap = this;
	struct __ns1__bgAirHC soap_tmp___ns1__bgAirHC;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/bgAirHC";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__bgAirHC.ns1__bgAirHC_ = ns1__bgAirHC_;
	soap_serializeheader(soap);
	soap_serialize___ns1__bgAirHC(soap, &soap_tmp___ns1__bgAirHC);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__bgAirHC(soap, &soap_tmp___ns1__bgAirHC, "-ns1:bgAirHC", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__bgAirHC(soap, &soap_tmp___ns1__bgAirHC, "-ns1:bgAirHC", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__bgAirHCResponse_)
		return soap_closesock(soap);
	ns1__bgAirHCResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__bgAirHCResponse_.soap_get(soap, "ns1:bgAirHCResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::doubleIdleData_USCOREFC(const char *endpoint, const char *soap_action, ns1__doubleIdleData_USCOREFC *ns1__doubleIdleData_USCOREFC_, ns1__doubleIdleDataResponse &ns1__doubleIdleData_USCOREFCResponse)
{	struct soap *soap = this;
	struct __ns1__doubleIdleData_USCOREFC soap_tmp___ns1__doubleIdleData_USCOREFC;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/doubleIdleData_FC";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__doubleIdleData_USCOREFC.ns1__doubleIdleData_USCOREFC_ = ns1__doubleIdleData_USCOREFC_;
	soap_serializeheader(soap);
	soap_serialize___ns1__doubleIdleData_USCOREFC(soap, &soap_tmp___ns1__doubleIdleData_USCOREFC);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__doubleIdleData_USCOREFC(soap, &soap_tmp___ns1__doubleIdleData_USCOREFC, "-ns1:doubleIdleData_FC", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__doubleIdleData_USCOREFC(soap, &soap_tmp___ns1__doubleIdleData_USCOREFC, "-ns1:doubleIdleData_FC", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__doubleIdleData_USCOREFCResponse)
		return soap_closesock(soap);
	ns1__doubleIdleData_USCOREFCResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__doubleIdleData_USCOREFCResponse.soap_get(soap, "ns1:doubleIdleData_FCResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::cgjLASelfcheck(const char *endpoint, const char *soap_action, ns1__cgjLASelfcheck *ns1__cgjLASelfcheck_, ns1__cgjLASelfcheckResponse &ns1__cgjLASelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__cgjLASelfcheck soap_tmp___ns1__cgjLASelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/cgjLASelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__cgjLASelfcheck.ns1__cgjLASelfcheck_ = ns1__cgjLASelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__cgjLASelfcheck(soap, &soap_tmp___ns1__cgjLASelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__cgjLASelfcheck(soap, &soap_tmp___ns1__cgjLASelfcheck, "-ns1:cgjLASelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__cgjLASelfcheck(soap, &soap_tmp___ns1__cgjLASelfcheck, "-ns1:cgjLASelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__cgjLASelfcheckResponse_)
		return soap_closesock(soap);
	ns1__cgjLASelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__cgjLASelfcheckResponse_.soap_get(soap, "ns1:cgjLASelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::cgjSelfcheck(const char *endpoint, const char *soap_action, ns1__cgjSelfcheck *ns1__cgjSelfcheck_, ns1__cgjSelfcheckResponse &ns1__cgjSelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__cgjSelfcheck soap_tmp___ns1__cgjSelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/cgjSelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__cgjSelfcheck.ns1__cgjSelfcheck_ = ns1__cgjSelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__cgjSelfcheck(soap, &soap_tmp___ns1__cgjSelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__cgjSelfcheck(soap, &soap_tmp___ns1__cgjSelfcheck, "-ns1:cgjSelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__cgjSelfcheck(soap, &soap_tmp___ns1__cgjSelfcheck, "-ns1:cgjSelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__cgjSelfcheckResponse_)
		return soap_closesock(soap);
	ns1__cgjSelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__cgjSelfcheckResponse_.soap_get(soap, "ns1:cgjSelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::obdResult(const char *endpoint, const char *soap_action, ns1__obdResult *ns1__obdResult_, ns1__obdResultResponse &ns1__obdResultResponse_)
{	struct soap *soap = this;
	struct __ns1__obdResult soap_tmp___ns1__obdResult;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/obdResult";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__obdResult.ns1__obdResult_ = ns1__obdResult_;
	soap_serializeheader(soap);
	soap_serialize___ns1__obdResult(soap, &soap_tmp___ns1__obdResult);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__obdResult(soap, &soap_tmp___ns1__obdResult, "-ns1:obdResult", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__obdResult(soap, &soap_tmp___ns1__obdResult, "-ns1:obdResult", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__obdResultResponse_)
		return soap_closesock(soap);
	ns1__obdResultResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__obdResultResponse_.soap_get(soap, "ns1:obdResultResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::doubleIdleLog_USCOREFC(const char *endpoint, const char *soap_action, ns1__doubleIdleLog_USCOREFC *ns1__doubleIdleLog_USCOREFC_, ns1__doubleIdleLogResponse &ns1__doubleIdleLog_USCOREFCResponse)
{	struct soap *soap = this;
	struct __ns1__doubleIdleLog_USCOREFC soap_tmp___ns1__doubleIdleLog_USCOREFC;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/doubleIdleLog_FC";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__doubleIdleLog_USCOREFC.ns1__doubleIdleLog_USCOREFC_ = ns1__doubleIdleLog_USCOREFC_;
	soap_serializeheader(soap);
	soap_serialize___ns1__doubleIdleLog_USCOREFC(soap, &soap_tmp___ns1__doubleIdleLog_USCOREFC);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__doubleIdleLog_USCOREFC(soap, &soap_tmp___ns1__doubleIdleLog_USCOREFC, "-ns1:doubleIdleLog_FC", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__doubleIdleLog_USCOREFC(soap, &soap_tmp___ns1__doubleIdleLog_USCOREFC, "-ns1:doubleIdleLog_FC", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__doubleIdleLog_USCOREFCResponse)
		return soap_closesock(soap);
	ns1__doubleIdleLog_USCOREFCResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__doubleIdleLog_USCOREFCResponse.soap_get(soap, "ns1:doubleIdleLog_FCResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::vmasLog(const char *endpoint, const char *soap_action, ns1__vmasLog *ns1__vmasLog_, ns1__vmasLogResponse &ns1__vmasLogResponse_)
{	struct soap *soap = this;
	struct __ns1__vmasLog soap_tmp___ns1__vmasLog;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/vmasLog";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__vmasLog.ns1__vmasLog_ = ns1__vmasLog_;
	soap_serializeheader(soap);
	soap_serialize___ns1__vmasLog(soap, &soap_tmp___ns1__vmasLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__vmasLog(soap, &soap_tmp___ns1__vmasLog, "-ns1:vmasLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__vmasLog(soap, &soap_tmp___ns1__vmasLog, "-ns1:vmasLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__vmasLogResponse_)
		return soap_closesock(soap);
	ns1__vmasLogResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__vmasLogResponse_.soap_get(soap, "ns1:vmasLogResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::ydjSelfcheck(const char *endpoint, const char *soap_action, ns1__ydjSelfcheck *ns1__ydjSelfcheck_, ns1__ydjSelfcheckResponse &ns1__ydjSelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__ydjSelfcheck soap_tmp___ns1__ydjSelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/ydjSelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ydjSelfcheck.ns1__ydjSelfcheck_ = ns1__ydjSelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__ydjSelfcheck(soap, &soap_tmp___ns1__ydjSelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ydjSelfcheck(soap, &soap_tmp___ns1__ydjSelfcheck, "-ns1:ydjSelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ydjSelfcheck(soap, &soap_tmp___ns1__ydjSelfcheck, "-ns1:ydjSelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ydjSelfcheckResponse_)
		return soap_closesock(soap);
	ns1__ydjSelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ydjSelfcheckResponse_.soap_get(soap, "ns1:ydjSelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::dyhwSelfcheck(const char *endpoint, const char *soap_action, ns1__dyhwSelfcheck *ns1__dyhwSelfcheck_, ns1__dyhwSelfcheckResponse &ns1__dyhwSelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__dyhwSelfcheck soap_tmp___ns1__dyhwSelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/dyhwSelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__dyhwSelfcheck.ns1__dyhwSelfcheck_ = ns1__dyhwSelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__dyhwSelfcheck(soap, &soap_tmp___ns1__dyhwSelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__dyhwSelfcheck(soap, &soap_tmp___ns1__dyhwSelfcheck, "-ns1:dyhwSelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__dyhwSelfcheck(soap, &soap_tmp___ns1__dyhwSelfcheck, "-ns1:dyhwSelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__dyhwSelfcheckResponse_)
		return soap_closesock(soap);
	ns1__dyhwSelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__dyhwSelfcheckResponse_.soap_get(soap, "ns1:dyhwSelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::loadDownLog(const char *endpoint, const char *soap_action, ns1__loadDownLog *ns1__loadDownLog_, ns1__loadDownLogResponse &ns1__loadDownLogResponse_)
{	struct soap *soap = this;
	struct __ns1__loadDownLog soap_tmp___ns1__loadDownLog;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/loadDownLog";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__loadDownLog.ns1__loadDownLog_ = ns1__loadDownLog_;
	soap_serializeheader(soap);
	soap_serialize___ns1__loadDownLog(soap, &soap_tmp___ns1__loadDownLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__loadDownLog(soap, &soap_tmp___ns1__loadDownLog, "-ns1:loadDownLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__loadDownLog(soap, &soap_tmp___ns1__loadDownLog, "-ns1:loadDownLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__loadDownLogResponse_)
		return soap_closesock(soap);
	ns1__loadDownLogResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__loadDownLogResponse_.soap_get(soap, "ns1:loadDownLogResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::dyhwAdjust(const char *endpoint, const char *soap_action, ns1__dyhwAdjust *ns1__dyhwAdjust_, ns1__dyhwAdjustResponse &ns1__dyhwAdjustResponse_)
{	struct soap *soap = this;
	struct __ns1__dyhwAdjust soap_tmp___ns1__dyhwAdjust;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/dyhwAdjust";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__dyhwAdjust.ns1__dyhwAdjust_ = ns1__dyhwAdjust_;
	soap_serializeheader(soap);
	soap_serialize___ns1__dyhwAdjust(soap, &soap_tmp___ns1__dyhwAdjust);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__dyhwAdjust(soap, &soap_tmp___ns1__dyhwAdjust, "-ns1:dyhwAdjust", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__dyhwAdjust(soap, &soap_tmp___ns1__dyhwAdjust, "-ns1:dyhwAdjust", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__dyhwAdjustResponse_)
		return soap_closesock(soap);
	ns1__dyhwAdjustResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__dyhwAdjustResponse_.soap_get(soap, "ns1:dyhwAdjustResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::obdResultLog(const char *endpoint, const char *soap_action, ns1__obdResultLog *ns1__obdResultLog_, ns1__obdResultLogResponse &ns1__obdResultLogResponse_)
{	struct soap *soap = this;
	struct __ns1__obdResultLog soap_tmp___ns1__obdResultLog;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/obdResultLog";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__obdResultLog.ns1__obdResultLog_ = ns1__obdResultLog_;
	soap_serializeheader(soap);
	soap_serialize___ns1__obdResultLog(soap, &soap_tmp___ns1__obdResultLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__obdResultLog(soap, &soap_tmp___ns1__obdResultLog, "-ns1:obdResultLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__obdResultLog(soap, &soap_tmp___ns1__obdResultLog, "-ns1:obdResultLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__obdResultLogResponse_)
		return soap_closesock(soap);
	ns1__obdResultLogResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__obdResultLogResponse_.soap_get(soap, "ns1:obdResultLogResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::getCarInfo_USCOREFC(const char *endpoint, const char *soap_action, ns1__getCarInfo_USCOREFC *ns1__getCarInfo_USCOREFC_, ns1__getCarInfoResponse &ns1__getCarInfo_USCOREFCResponse)
{	struct soap *soap = this;
	struct __ns1__getCarInfo_USCOREFC soap_tmp___ns1__getCarInfo_USCOREFC;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/getCarInfo_FC";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getCarInfo_USCOREFC.ns1__getCarInfo_USCOREFC_ = ns1__getCarInfo_USCOREFC_;
	soap_serializeheader(soap);
	soap_serialize___ns1__getCarInfo_USCOREFC(soap, &soap_tmp___ns1__getCarInfo_USCOREFC);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getCarInfo_USCOREFC(soap, &soap_tmp___ns1__getCarInfo_USCOREFC, "-ns1:getCarInfo_FC", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getCarInfo_USCOREFC(soap, &soap_tmp___ns1__getCarInfo_USCOREFC, "-ns1:getCarInfo_FC", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__getCarInfo_USCOREFCResponse)
		return soap_closesock(soap);
	ns1__getCarInfo_USCOREFCResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getCarInfo_USCOREFCResponse.soap_get(soap, "ns1:getCarInfo_FCResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::cycdyhwAdjust(const char *endpoint, const char *soap_action, ns1__cycdyhwAdjust *ns1__cycdyhwAdjust_, ns1__cycdyhwAdjustResponse &ns1__cycdyhwAdjustResponse_)
{	struct soap *soap = this;
	struct __ns1__cycdyhwAdjust soap_tmp___ns1__cycdyhwAdjust;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/cycdyhwAdjust";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__cycdyhwAdjust.ns1__cycdyhwAdjust_ = ns1__cycdyhwAdjust_;
	soap_serializeheader(soap);
	soap_serialize___ns1__cycdyhwAdjust(soap, &soap_tmp___ns1__cycdyhwAdjust);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__cycdyhwAdjust(soap, &soap_tmp___ns1__cycdyhwAdjust, "-ns1:cycdyhwAdjust", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__cycdyhwAdjust(soap, &soap_tmp___ns1__cycdyhwAdjust, "-ns1:cycdyhwAdjust", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__cycdyhwAdjustResponse_)
		return soap_closesock(soap);
	ns1__cycdyhwAdjustResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__cycdyhwAdjustResponse_.soap_get(soap, "ns1:cycdyhwAdjustResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::hjcsgyqSelfcheck(const char *endpoint, const char *soap_action, ns1__hjcsgyqSelfcheck *ns1__hjcsgyqSelfcheck_, ns1__hjcsgyqSelfcheckResponse &ns1__hjcsgyqSelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__hjcsgyqSelfcheck soap_tmp___ns1__hjcsgyqSelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/hjcsgyqSelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__hjcsgyqSelfcheck.ns1__hjcsgyqSelfcheck_ = ns1__hjcsgyqSelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__hjcsgyqSelfcheck(soap, &soap_tmp___ns1__hjcsgyqSelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__hjcsgyqSelfcheck(soap, &soap_tmp___ns1__hjcsgyqSelfcheck, "-ns1:hjcsgyqSelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__hjcsgyqSelfcheck(soap, &soap_tmp___ns1__hjcsgyqSelfcheck, "-ns1:hjcsgyqSelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__hjcsgyqSelfcheckResponse_)
		return soap_closesock(soap);
	ns1__hjcsgyqSelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__hjcsgyqSelfcheckResponse_.soap_get(soap, "ns1:hjcsgyqSelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::pqfxySelfcheck(const char *endpoint, const char *soap_action, ns1__pqfxySelfcheck *ns1__pqfxySelfcheck_, ns1__pqfxySelfcheckResponse &ns1__pqfxySelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__pqfxySelfcheck soap_tmp___ns1__pqfxySelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/pqfxySelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__pqfxySelfcheck.ns1__pqfxySelfcheck_ = ns1__pqfxySelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__pqfxySelfcheck(soap, &soap_tmp___ns1__pqfxySelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__pqfxySelfcheck(soap, &soap_tmp___ns1__pqfxySelfcheck, "-ns1:pqfxySelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__pqfxySelfcheck(soap, &soap_tmp___ns1__pqfxySelfcheck, "-ns1:pqfxySelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__pqfxySelfcheckResponse_)
		return soap_closesock(soap);
	ns1__pqfxySelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__pqfxySelfcheckResponse_.soap_get(soap, "ns1:pqfxySelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::lightproofSmokeDataLog_USCOREFC(const char *endpoint, const char *soap_action, ns1__lightproofSmokeDataLog_USCOREFC *ns1__lightproofSmokeDataLog_USCOREFC_, ns1__lightproofSmokeDataLog_USCOREFCResponse &ns1__lightproofSmokeDataLog_USCOREFCResponse_)
{	struct soap *soap = this;
	struct __ns1__lightproofSmokeDataLog_USCOREFC soap_tmp___ns1__lightproofSmokeDataLog_USCOREFC;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/lightproofSmokeDataLog_FC";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__lightproofSmokeDataLog_USCOREFC.ns1__lightproofSmokeDataLog_USCOREFC_ = ns1__lightproofSmokeDataLog_USCOREFC_;
	soap_serializeheader(soap);
	soap_serialize___ns1__lightproofSmokeDataLog_USCOREFC(soap, &soap_tmp___ns1__lightproofSmokeDataLog_USCOREFC);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__lightproofSmokeDataLog_USCOREFC(soap, &soap_tmp___ns1__lightproofSmokeDataLog_USCOREFC, "-ns1:lightproofSmokeDataLog_FC", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__lightproofSmokeDataLog_USCOREFC(soap, &soap_tmp___ns1__lightproofSmokeDataLog_USCOREFC, "-ns1:lightproofSmokeDataLog_FC", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__lightproofSmokeDataLog_USCOREFCResponse_)
		return soap_closesock(soap);
	ns1__lightproofSmokeDataLog_USCOREFCResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__lightproofSmokeDataLog_USCOREFCResponse_.soap_get(soap, "ns1:lightproofSmokeDataLog_FCResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::loadDownData(const char *endpoint, const char *soap_action, ns1__loadDownData *ns1__loadDownData_, ns1__loadDownDataResponse &ns1__loadDownDataResponse_)
{	struct soap *soap = this;
	struct __ns1__loadDownData soap_tmp___ns1__loadDownData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/loadDownData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__loadDownData.ns1__loadDownData_ = ns1__loadDownData_;
	soap_serializeheader(soap);
	soap_serialize___ns1__loadDownData(soap, &soap_tmp___ns1__loadDownData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__loadDownData(soap, &soap_tmp___ns1__loadDownData, "-ns1:loadDownData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__loadDownData(soap, &soap_tmp___ns1__loadDownData, "-ns1:loadDownData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__loadDownDataResponse_)
		return soap_closesock(soap);
	ns1__loadDownDataResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__loadDownDataResponse_.soap_get(soap, "ns1:loadDownDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::vmasData(const char *endpoint, const char *soap_action, ns1__vmasData *ns1__vmasData_, ns1__vmasDataResponse &ns1__vmasDataResponse_)
{	struct soap *soap = this;
	struct __ns1__vmasData soap_tmp___ns1__vmasData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/vmasData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__vmasData.ns1__vmasData_ = ns1__vmasData_;
	soap_serializeheader(soap);
	soap_serialize___ns1__vmasData(soap, &soap_tmp___ns1__vmasData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__vmasData(soap, &soap_tmp___ns1__vmasData, "-ns1:vmasData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__vmasData(soap, &soap_tmp___ns1__vmasData, "-ns1:vmasData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__vmasDataResponse_)
		return soap_closesock(soap);
	ns1__vmasDataResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__vmasDataResponse_.soap_get(soap, "ns1:vmasDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::motoDbIdleData(const char *endpoint, const char *soap_action, ns1__motoDbIdleData *ns1__motoDbIdleData_, ns1__motoDbIdleDataResponse &ns1__motoDbIdleDataResponse_)
{	struct soap *soap = this;
	struct __ns1__motoDbIdleData soap_tmp___ns1__motoDbIdleData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/motoDbIdleData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__motoDbIdleData.ns1__motoDbIdleData_ = ns1__motoDbIdleData_;
	soap_serializeheader(soap);
	soap_serialize___ns1__motoDbIdleData(soap, &soap_tmp___ns1__motoDbIdleData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__motoDbIdleData(soap, &soap_tmp___ns1__motoDbIdleData, "-ns1:motoDbIdleData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__motoDbIdleData(soap, &soap_tmp___ns1__motoDbIdleData, "-ns1:motoDbIdleData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__motoDbIdleDataResponse_)
		return soap_closesock(soap);
	ns1__motoDbIdleDataResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__motoDbIdleDataResponse_.soap_get(soap, "ns1:motoDbIdleDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::getSatate(const char *endpoint, const char *soap_action, ns1__getSatate *ns1__getSatate_, ns1__getSatateResponse &ns1__getSatateResponse_)
{	struct soap *soap = this;
	struct __ns1__getSatate soap_tmp___ns1__getSatate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/getSatate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getSatate.ns1__getSatate_ = ns1__getSatate_;
	soap_serializeheader(soap);
	soap_serialize___ns1__getSatate(soap, &soap_tmp___ns1__getSatate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getSatate(soap, &soap_tmp___ns1__getSatate, "-ns1:getSatate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getSatate(soap, &soap_tmp___ns1__getSatate, "-ns1:getSatate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__getSatateResponse_)
		return soap_closesock(soap);
	ns1__getSatateResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getSatateResponse_.soap_get(soap, "ns1:getSatateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::doubleIdleData(const char *endpoint, const char *soap_action, ns1__doubleIdleData *ns1__doubleIdleData_, ns1__doubleIdleDataResponse &ns1__doubleIdleDataResponse_)
{	struct soap *soap = this;
	struct __ns1__doubleIdleData soap_tmp___ns1__doubleIdleData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/doubleIdleData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__doubleIdleData.ns1__doubleIdleData_ = ns1__doubleIdleData_;
	soap_serializeheader(soap);
	soap_serialize___ns1__doubleIdleData(soap, &soap_tmp___ns1__doubleIdleData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__doubleIdleData(soap, &soap_tmp___ns1__doubleIdleData, "-ns1:doubleIdleData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__doubleIdleData(soap, &soap_tmp___ns1__doubleIdleData, "-ns1:doubleIdleData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__doubleIdleDataResponse_)
		return soap_closesock(soap);
	ns1__doubleIdleDataResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__doubleIdleDataResponse_.soap_get(soap, "ns1:doubleIdleDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::doubleIdleLog(const char *endpoint, const char *soap_action, ns1__doubleIdleLog *ns1__doubleIdleLog_, ns1__doubleIdleLogResponse &ns1__doubleIdleLogResponse_)
{	struct soap *soap = this;
	struct __ns1__doubleIdleLog soap_tmp___ns1__doubleIdleLog;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/doubleIdleLog";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__doubleIdleLog.ns1__doubleIdleLog_ = ns1__doubleIdleLog_;
	soap_serializeheader(soap);
	soap_serialize___ns1__doubleIdleLog(soap, &soap_tmp___ns1__doubleIdleLog);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__doubleIdleLog(soap, &soap_tmp___ns1__doubleIdleLog, "-ns1:doubleIdleLog", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__doubleIdleLog(soap, &soap_tmp___ns1__doubleIdleLog, "-ns1:doubleIdleLog", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__doubleIdleLogResponse_)
		return soap_closesock(soap);
	ns1__doubleIdleLogResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__doubleIdleLogResponse_.soap_get(soap, "ns1:doubleIdleLogResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::cgjPLHPSelfcheck(const char *endpoint, const char *soap_action, ns1__cgjPLHPSelfcheck *ns1__cgjPLHPSelfcheck_, ns1__cgjPLHPSelfcheckResponse &ns1__cgjPLHPSelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__cgjPLHPSelfcheck soap_tmp___ns1__cgjPLHPSelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/cgjPLHPSelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__cgjPLHPSelfcheck.ns1__cgjPLHPSelfcheck_ = ns1__cgjPLHPSelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__cgjPLHPSelfcheck(soap, &soap_tmp___ns1__cgjPLHPSelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__cgjPLHPSelfcheck(soap, &soap_tmp___ns1__cgjPLHPSelfcheck, "-ns1:cgjPLHPSelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__cgjPLHPSelfcheck(soap, &soap_tmp___ns1__cgjPLHPSelfcheck, "-ns1:cgjPLHPSelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__cgjPLHPSelfcheckResponse_)
		return soap_closesock(soap);
	ns1__cgjPLHPSelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__cgjPLHPSelfcheckResponse_.soap_get(soap, "ns1:cgjPLHPSelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::wqfxyAdjust(const char *endpoint, const char *soap_action, ns1__wqfxyAdjust *ns1__wqfxyAdjust_, ns1__wqfxyAdjustResponse &ns1__wqfxyAdjustResponse_)
{	struct soap *soap = this;
	struct __ns1__wqfxyAdjust soap_tmp___ns1__wqfxyAdjust;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/wqfxyAdjust";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__wqfxyAdjust.ns1__wqfxyAdjust_ = ns1__wqfxyAdjust_;
	soap_serializeheader(soap);
	soap_serialize___ns1__wqfxyAdjust(soap, &soap_tmp___ns1__wqfxyAdjust);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__wqfxyAdjust(soap, &soap_tmp___ns1__wqfxyAdjust, "-ns1:wqfxyAdjust", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__wqfxyAdjust(soap, &soap_tmp___ns1__wqfxyAdjust, "-ns1:wqfxyAdjust", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__wqfxyAdjustResponse_)
		return soap_closesock(soap);
	ns1__wqfxyAdjustResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__wqfxyAdjustResponse_.soap_get(soap, "ns1:wqfxyAdjustResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::lightproofSmokeData_USCOREFC(const char *endpoint, const char *soap_action, ns1__lightproofSmokeData_USCOREFC *ns1__lightproofSmokeData_USCOREFC_, ns1__lightproofSmokeDataResponse &ns1__lightproofSmokeData_USCOREFCResponse)
{	struct soap *soap = this;
	struct __ns1__lightproofSmokeData_USCOREFC soap_tmp___ns1__lightproofSmokeData_USCOREFC;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/lightproofSmokeData_FC";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__lightproofSmokeData_USCOREFC.ns1__lightproofSmokeData_USCOREFC_ = ns1__lightproofSmokeData_USCOREFC_;
	soap_serializeheader(soap);
	soap_serialize___ns1__lightproofSmokeData_USCOREFC(soap, &soap_tmp___ns1__lightproofSmokeData_USCOREFC);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__lightproofSmokeData_USCOREFC(soap, &soap_tmp___ns1__lightproofSmokeData_USCOREFC, "-ns1:lightproofSmokeData_FC", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__lightproofSmokeData_USCOREFC(soap, &soap_tmp___ns1__lightproofSmokeData_USCOREFC, "-ns1:lightproofSmokeData_FC", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__lightproofSmokeData_USCOREFCResponse)
		return soap_closesock(soap);
	ns1__lightproofSmokeData_USCOREFCResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__lightproofSmokeData_USCOREFCResponse.soap_get(soap, "ns1:lightproofSmokeData_FCResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::lightproofSmokeData(const char *endpoint, const char *soap_action, ns1__lightproofSmokeData *ns1__lightproofSmokeData_, ns1__lightproofSmokeDataResponse &ns1__lightproofSmokeDataResponse_)
{	struct soap *soap = this;
	struct __ns1__lightproofSmokeData soap_tmp___ns1__lightproofSmokeData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/lightproofSmokeData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__lightproofSmokeData.ns1__lightproofSmokeData_ = ns1__lightproofSmokeData_;
	soap_serializeheader(soap);
	soap_serialize___ns1__lightproofSmokeData(soap, &soap_tmp___ns1__lightproofSmokeData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__lightproofSmokeData(soap, &soap_tmp___ns1__lightproofSmokeData, "-ns1:lightproofSmokeData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__lightproofSmokeData(soap, &soap_tmp___ns1__lightproofSmokeData, "-ns1:lightproofSmokeData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__lightproofSmokeDataResponse_)
		return soap_closesock(soap);
	ns1__lightproofSmokeDataResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__lightproofSmokeDataResponse_.soap_get(soap, "ns1:lightproofSmokeDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::qyfxSelfcheck(const char *endpoint, const char *soap_action, ns1__qyfxSelfcheck *ns1__qyfxSelfcheck_, ns1__qyfxSelfcheckResponse &ns1__qyfxSelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__qyfxSelfcheck soap_tmp___ns1__qyfxSelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/qyfxSelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__qyfxSelfcheck.ns1__qyfxSelfcheck_ = ns1__qyfxSelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__qyfxSelfcheck(soap, &soap_tmp___ns1__qyfxSelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__qyfxSelfcheck(soap, &soap_tmp___ns1__qyfxSelfcheck, "-ns1:qyfxSelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__qyfxSelfcheck(soap, &soap_tmp___ns1__qyfxSelfcheck, "-ns1:qyfxSelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__qyfxSelfcheckResponse_)
		return soap_closesock(soap);
	ns1__qyfxSelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__qyfxSelfcheckResponse_.soap_get(soap, "ns1:qyfxSelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::sdsqtfxySelfcheck(const char *endpoint, const char *soap_action, ns1__sdsqtfxySelfcheck *ns1__sdsqtfxySelfcheck_, ns1__sdsqtfxySelfcheckResponse &ns1__sdsqtfxySelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__sdsqtfxySelfcheck soap_tmp___ns1__sdsqtfxySelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/sdsqtfxySelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__sdsqtfxySelfcheck.ns1__sdsqtfxySelfcheck_ = ns1__sdsqtfxySelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__sdsqtfxySelfcheck(soap, &soap_tmp___ns1__sdsqtfxySelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__sdsqtfxySelfcheck(soap, &soap_tmp___ns1__sdsqtfxySelfcheck, "-ns1:sdsqtfxySelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__sdsqtfxySelfcheck(soap, &soap_tmp___ns1__sdsqtfxySelfcheck, "-ns1:sdsqtfxySelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__sdsqtfxySelfcheckResponse_)
		return soap_closesock(soap);
	ns1__sdsqtfxySelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__sdsqtfxySelfcheckResponse_.soap_get(soap, "ns1:sdsqtfxySelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::sendMessage_USCOREFC(const char *endpoint, const char *soap_action, ns1__sendMessage_USCOREFC *ns1__sendMessage_USCOREFC_, ns1__sendMessageResponse &ns1__sendMessage_USCOREFCResponse)
{	struct soap *soap = this;
	struct __ns1__sendMessage_USCOREFC soap_tmp___ns1__sendMessage_USCOREFC;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/sendMessage_FC";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__sendMessage_USCOREFC.ns1__sendMessage_USCOREFC_ = ns1__sendMessage_USCOREFC_;
	soap_serializeheader(soap);
	soap_serialize___ns1__sendMessage_USCOREFC(soap, &soap_tmp___ns1__sendMessage_USCOREFC);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__sendMessage_USCOREFC(soap, &soap_tmp___ns1__sendMessage_USCOREFC, "-ns1:sendMessage_FC", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__sendMessage_USCOREFC(soap, &soap_tmp___ns1__sendMessage_USCOREFC, "-ns1:sendMessage_FC", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__sendMessage_USCOREFCResponse)
		return soap_closesock(soap);
	ns1__sendMessage_USCOREFCResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__sendMessage_USCOREFCResponse.soap_get(soap, "ns1:sendMessage_FCResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::wqfxySelfcheck(const char *endpoint, const char *soap_action, ns1__wqfxySelfcheck *ns1__wqfxySelfcheck_, ns1__wqfxySelfcheckResponse &ns1__wqfxySelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__wqfxySelfcheck soap_tmp___ns1__wqfxySelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/wqfxySelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__wqfxySelfcheck.ns1__wqfxySelfcheck_ = ns1__wqfxySelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__wqfxySelfcheck(soap, &soap_tmp___ns1__wqfxySelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__wqfxySelfcheck(soap, &soap_tmp___ns1__wqfxySelfcheck, "-ns1:wqfxySelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__wqfxySelfcheck(soap, &soap_tmp___ns1__wqfxySelfcheck, "-ns1:wqfxySelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__wqfxySelfcheckResponse_)
		return soap_closesock(soap);
	ns1__wqfxySelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__wqfxySelfcheckResponse_.soap_get(soap, "ns1:wqfxySelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::cgjALPSelfcheck(const char *endpoint, const char *soap_action, ns1__cgjALPSelfcheck *ns1__cgjALPSelfcheck_, ns1__cgjALPSelfcheckResponse &ns1__cgjALPSelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__cgjALPSelfcheck soap_tmp___ns1__cgjALPSelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/cgjALPSelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__cgjALPSelfcheck.ns1__cgjALPSelfcheck_ = ns1__cgjALPSelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__cgjALPSelfcheck(soap, &soap_tmp___ns1__cgjALPSelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__cgjALPSelfcheck(soap, &soap_tmp___ns1__cgjALPSelfcheck, "-ns1:cgjALPSelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__cgjALPSelfcheck(soap, &soap_tmp___ns1__cgjALPSelfcheck, "-ns1:cgjALPSelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__cgjALPSelfcheckResponse_)
		return soap_closesock(soap);
	ns1__cgjALPSelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__cgjALPSelfcheckResponse_.soap_get(soap, "ns1:cgjALPSelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::lljSelfcheck(const char *endpoint, const char *soap_action, ns1__lljSelfcheck *ns1__lljSelfcheck_, ns1__lljSelfcheckResponse &ns1__lljSelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__lljSelfcheck soap_tmp___ns1__lljSelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/lljSelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__lljSelfcheck.ns1__lljSelfcheck_ = ns1__lljSelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__lljSelfcheck(soap, &soap_tmp___ns1__lljSelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__lljSelfcheck(soap, &soap_tmp___ns1__lljSelfcheck, "-ns1:lljSelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__lljSelfcheck(soap, &soap_tmp___ns1__lljSelfcheck, "-ns1:lljSelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__lljSelfcheckResponse_)
		return soap_closesock(soap);
	ns1__lljSelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__lljSelfcheckResponse_.soap_get(soap, "ns1:lljSelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceSwapIfaceImplServiceSoapBindingProxy::cgjLSPSelfcheck(const char *endpoint, const char *soap_action, ns1__cgjLSPSelfcheck *ns1__cgjLSPSelfcheck_, ns1__cgjLSPSelfcheckResponse &ns1__cgjLSPSelfcheckResponse_)
{	struct soap *soap = this;
	struct __ns1__cgjLSPSelfcheck soap_tmp___ns1__cgjLSPSelfcheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.111.102.91:8130/interface/services/deviceSwap";
	if (soap_action == NULL)
		soap_action = "http://iface.server.webservice.zkyt.com/cgjLSPSelfcheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__cgjLSPSelfcheck.ns1__cgjLSPSelfcheck_ = ns1__cgjLSPSelfcheck_;
	soap_serializeheader(soap);
	soap_serialize___ns1__cgjLSPSelfcheck(soap, &soap_tmp___ns1__cgjLSPSelfcheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__cgjLSPSelfcheck(soap, &soap_tmp___ns1__cgjLSPSelfcheck, "-ns1:cgjLSPSelfcheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__cgjLSPSelfcheck(soap, &soap_tmp___ns1__cgjLSPSelfcheck, "-ns1:cgjLSPSelfcheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__cgjLSPSelfcheckResponse_)
		return soap_closesock(soap);
	ns1__cgjLSPSelfcheckResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__cgjLSPSelfcheckResponse_.soap_get(soap, "ns1:cgjLSPSelfcheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
