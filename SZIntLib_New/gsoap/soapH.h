/* soapH.h
   Generated by gSOAP 2.8.21 from SynTocity.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__wstring
#define SOAP_TYPE_std__wstring (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__wstring(struct soap*, std::wstring *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__wstring(struct soap*, const std::wstring *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__wstring(struct soap*, const char*, int, const std::wstring*, const char*);
SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_in_std__wstring(struct soap*, const char*, std::wstring*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__wstring(struct soap*, const std::wstring *, const char*, const char*);

#ifndef soap_write_std__wstring
#define soap_write_std__wstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_std__wstring(soap, data),0) || soap_put_std__wstring(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_get_std__wstring(struct soap*, std::wstring *, const char*, const char*);

#ifndef soap_read_std__wstring
#define soap_read_std__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_std__wstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::wstring * SOAP_FMAC2 soap_instantiate_std__wstring(struct soap*, int, const char*, const char*, size_t*);

inline std::wstring * soap_new_std__wstring(struct soap *soap, int n = -1) { return soap_instantiate_std__wstring(soap, n, NULL, NULL, NULL); }

inline std::wstring * soap_new_req_std__wstring(struct soap *soap) { std::wstring *_p = soap_instantiate_std__wstring(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__wstring(soap, _p); } return _p; }

inline std::wstring * soap_new_set_std__wstring(struct soap *soap) { std::wstring *_p = soap_instantiate_std__wstring(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__wstring(soap, _p); } return _p; }

inline void soap_delete_std__wstring(struct soap *soap, std::wstring *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__wstring(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetBaseTypeInfoResponse
#define SOAP_TYPE_ns1__GetBaseTypeInfoResponse (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetBaseTypeInfoResponse(struct soap*, const char*, int, const ns1__GetBaseTypeInfoResponse *, const char*);
SOAP_FMAC3 ns1__GetBaseTypeInfoResponse * SOAP_FMAC4 soap_in_ns1__GetBaseTypeInfoResponse(struct soap*, const char*, ns1__GetBaseTypeInfoResponse *, const char*);

#ifndef soap_write_ns1__GetBaseTypeInfoResponse
#define soap_write_ns1__GetBaseTypeInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetBaseTypeInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__GetBaseTypeInfoResponse * SOAP_FMAC4 soap_get_ns1__GetBaseTypeInfoResponse(struct soap*, ns1__GetBaseTypeInfoResponse *, const char*, const char*);

#ifndef soap_read_ns1__GetBaseTypeInfoResponse
#define soap_read_ns1__GetBaseTypeInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetBaseTypeInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__GetBaseTypeInfoResponse * SOAP_FMAC2 soap_instantiate_ns1__GetBaseTypeInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__GetBaseTypeInfoResponse * soap_new_ns1__GetBaseTypeInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__GetBaseTypeInfoResponse(soap, n, NULL, NULL, NULL); }

inline ns1__GetBaseTypeInfoResponse * soap_new_req_ns1__GetBaseTypeInfoResponse(struct soap *soap) { ns1__GetBaseTypeInfoResponse *_p = soap_instantiate_ns1__GetBaseTypeInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__GetBaseTypeInfoResponse * soap_new_set_ns1__GetBaseTypeInfoResponse(struct soap *soap, std::wstring *return_) { ns1__GetBaseTypeInfoResponse *_p = soap_instantiate_ns1__GetBaseTypeInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__GetBaseTypeInfoResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__GetBaseTypeInfoResponse(struct soap *soap, ns1__GetBaseTypeInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetBaseTypeInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetBaseTypeInfo
#define SOAP_TYPE_ns1__GetBaseTypeInfo (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetBaseTypeInfo(struct soap*, const char*, int, const ns1__GetBaseTypeInfo *, const char*);
SOAP_FMAC3 ns1__GetBaseTypeInfo * SOAP_FMAC4 soap_in_ns1__GetBaseTypeInfo(struct soap*, const char*, ns1__GetBaseTypeInfo *, const char*);

#ifndef soap_write_ns1__GetBaseTypeInfo
#define soap_write_ns1__GetBaseTypeInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetBaseTypeInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__GetBaseTypeInfo * SOAP_FMAC4 soap_get_ns1__GetBaseTypeInfo(struct soap*, ns1__GetBaseTypeInfo *, const char*, const char*);

#ifndef soap_read_ns1__GetBaseTypeInfo
#define soap_read_ns1__GetBaseTypeInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetBaseTypeInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__GetBaseTypeInfo * SOAP_FMAC2 soap_instantiate_ns1__GetBaseTypeInfo(struct soap*, int, const char*, const char*, size_t*);

inline ns1__GetBaseTypeInfo * soap_new_ns1__GetBaseTypeInfo(struct soap *soap, int n = -1) { return soap_instantiate_ns1__GetBaseTypeInfo(soap, n, NULL, NULL, NULL); }

inline ns1__GetBaseTypeInfo * soap_new_req_ns1__GetBaseTypeInfo(struct soap *soap) { ns1__GetBaseTypeInfo *_p = soap_instantiate_ns1__GetBaseTypeInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__GetBaseTypeInfo * soap_new_set_ns1__GetBaseTypeInfo(struct soap *soap) { ns1__GetBaseTypeInfo *_p = soap_instantiate_ns1__GetBaseTypeInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_ns1__GetBaseTypeInfo(struct soap *soap, ns1__GetBaseTypeInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetBaseTypeInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__LoginServerResponse
#define SOAP_TYPE_ns1__LoginServerResponse (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__LoginServerResponse(struct soap*, const char*, int, const ns1__LoginServerResponse *, const char*);
SOAP_FMAC3 ns1__LoginServerResponse * SOAP_FMAC4 soap_in_ns1__LoginServerResponse(struct soap*, const char*, ns1__LoginServerResponse *, const char*);

#ifndef soap_write_ns1__LoginServerResponse
#define soap_write_ns1__LoginServerResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:LoginServerResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__LoginServerResponse * SOAP_FMAC4 soap_get_ns1__LoginServerResponse(struct soap*, ns1__LoginServerResponse *, const char*, const char*);

#ifndef soap_read_ns1__LoginServerResponse
#define soap_read_ns1__LoginServerResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__LoginServerResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__LoginServerResponse * SOAP_FMAC2 soap_instantiate_ns1__LoginServerResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__LoginServerResponse * soap_new_ns1__LoginServerResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__LoginServerResponse(soap, n, NULL, NULL, NULL); }

inline ns1__LoginServerResponse * soap_new_req_ns1__LoginServerResponse(struct soap *soap) { ns1__LoginServerResponse *_p = soap_instantiate_ns1__LoginServerResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__LoginServerResponse * soap_new_set_ns1__LoginServerResponse(struct soap *soap, std::wstring *return_) { ns1__LoginServerResponse *_p = soap_instantiate_ns1__LoginServerResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__LoginServerResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__LoginServerResponse(struct soap *soap, ns1__LoginServerResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__LoginServerResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__LoginServer
#define SOAP_TYPE_ns1__LoginServer (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__LoginServer(struct soap*, const char*, int, const ns1__LoginServer *, const char*);
SOAP_FMAC3 ns1__LoginServer * SOAP_FMAC4 soap_in_ns1__LoginServer(struct soap*, const char*, ns1__LoginServer *, const char*);

#ifndef soap_write_ns1__LoginServer
#define soap_write_ns1__LoginServer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:LoginServer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__LoginServer * SOAP_FMAC4 soap_get_ns1__LoginServer(struct soap*, ns1__LoginServer *, const char*, const char*);

#ifndef soap_read_ns1__LoginServer
#define soap_read_ns1__LoginServer(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__LoginServer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__LoginServer * SOAP_FMAC2 soap_instantiate_ns1__LoginServer(struct soap*, int, const char*, const char*, size_t*);

inline ns1__LoginServer * soap_new_ns1__LoginServer(struct soap *soap, int n = -1) { return soap_instantiate_ns1__LoginServer(soap, n, NULL, NULL, NULL); }

inline ns1__LoginServer * soap_new_req_ns1__LoginServer(struct soap *soap) { ns1__LoginServer *_p = soap_instantiate_ns1__LoginServer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__LoginServer * soap_new_set_ns1__LoginServer(struct soap *soap, std::wstring *unitid, std::wstring *lineid, std::wstring *username, std::wstring *pwd) { ns1__LoginServer *_p = soap_instantiate_ns1__LoginServer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__LoginServer::unitid = unitid; _p->ns1__LoginServer::lineid = lineid; _p->ns1__LoginServer::username = username; _p->ns1__LoginServer::pwd = pwd; } return _p; }

inline void soap_delete_ns1__LoginServer(struct soap *soap, ns1__LoginServer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__LoginServer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__validateJCResponse
#define SOAP_TYPE_ns1__validateJCResponse (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__validateJCResponse(struct soap*, const char*, int, const ns1__validateJCResponse *, const char*);
SOAP_FMAC3 ns1__validateJCResponse * SOAP_FMAC4 soap_in_ns1__validateJCResponse(struct soap*, const char*, ns1__validateJCResponse *, const char*);

#ifndef soap_write_ns1__validateJCResponse
#define soap_write_ns1__validateJCResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:validateJCResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__validateJCResponse * SOAP_FMAC4 soap_get_ns1__validateJCResponse(struct soap*, ns1__validateJCResponse *, const char*, const char*);

#ifndef soap_read_ns1__validateJCResponse
#define soap_read_ns1__validateJCResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__validateJCResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__validateJCResponse * SOAP_FMAC2 soap_instantiate_ns1__validateJCResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__validateJCResponse * soap_new_ns1__validateJCResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__validateJCResponse(soap, n, NULL, NULL, NULL); }

inline ns1__validateJCResponse * soap_new_req_ns1__validateJCResponse(struct soap *soap) { ns1__validateJCResponse *_p = soap_instantiate_ns1__validateJCResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__validateJCResponse * soap_new_set_ns1__validateJCResponse(struct soap *soap, std::wstring *return_) { ns1__validateJCResponse *_p = soap_instantiate_ns1__validateJCResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__validateJCResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__validateJCResponse(struct soap *soap, ns1__validateJCResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__validateJCResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__validateJC
#define SOAP_TYPE_ns1__validateJC (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__validateJC(struct soap*, const char*, int, const ns1__validateJC *, const char*);
SOAP_FMAC3 ns1__validateJC * SOAP_FMAC4 soap_in_ns1__validateJC(struct soap*, const char*, ns1__validateJC *, const char*);

#ifndef soap_write_ns1__validateJC
#define soap_write_ns1__validateJC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:validateJC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__validateJC * SOAP_FMAC4 soap_get_ns1__validateJC(struct soap*, ns1__validateJC *, const char*, const char*);

#ifndef soap_read_ns1__validateJC
#define soap_read_ns1__validateJC(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__validateJC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__validateJC * SOAP_FMAC2 soap_instantiate_ns1__validateJC(struct soap*, int, const char*, const char*, size_t*);

inline ns1__validateJC * soap_new_ns1__validateJC(struct soap *soap, int n = -1) { return soap_instantiate_ns1__validateJC(soap, n, NULL, NULL, NULL); }

inline ns1__validateJC * soap_new_req_ns1__validateJC(struct soap *soap) { ns1__validateJC *_p = soap_instantiate_ns1__validateJC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__validateJC * soap_new_set_ns1__validateJC(struct soap *soap, std::wstring *res) { ns1__validateJC *_p = soap_instantiate_ns1__validateJC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__validateJC::res = res; } return _p; }

inline void soap_delete_ns1__validateJC(struct soap *soap, ns1__validateJC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__validateJC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetCheckListResponse
#define SOAP_TYPE_ns1__GetCheckListResponse (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetCheckListResponse(struct soap*, const char*, int, const ns1__GetCheckListResponse *, const char*);
SOAP_FMAC3 ns1__GetCheckListResponse * SOAP_FMAC4 soap_in_ns1__GetCheckListResponse(struct soap*, const char*, ns1__GetCheckListResponse *, const char*);

#ifndef soap_write_ns1__GetCheckListResponse
#define soap_write_ns1__GetCheckListResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetCheckListResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__GetCheckListResponse * SOAP_FMAC4 soap_get_ns1__GetCheckListResponse(struct soap*, ns1__GetCheckListResponse *, const char*, const char*);

#ifndef soap_read_ns1__GetCheckListResponse
#define soap_read_ns1__GetCheckListResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetCheckListResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__GetCheckListResponse * SOAP_FMAC2 soap_instantiate_ns1__GetCheckListResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__GetCheckListResponse * soap_new_ns1__GetCheckListResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__GetCheckListResponse(soap, n, NULL, NULL, NULL); }

inline ns1__GetCheckListResponse * soap_new_req_ns1__GetCheckListResponse(struct soap *soap) { ns1__GetCheckListResponse *_p = soap_instantiate_ns1__GetCheckListResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__GetCheckListResponse * soap_new_set_ns1__GetCheckListResponse(struct soap *soap, std::wstring *return_) { ns1__GetCheckListResponse *_p = soap_instantiate_ns1__GetCheckListResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__GetCheckListResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__GetCheckListResponse(struct soap *soap, ns1__GetCheckListResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetCheckListResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetCheckList
#define SOAP_TYPE_ns1__GetCheckList (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetCheckList(struct soap*, const char*, int, const ns1__GetCheckList *, const char*);
SOAP_FMAC3 ns1__GetCheckList * SOAP_FMAC4 soap_in_ns1__GetCheckList(struct soap*, const char*, ns1__GetCheckList *, const char*);

#ifndef soap_write_ns1__GetCheckList
#define soap_write_ns1__GetCheckList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetCheckList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__GetCheckList * SOAP_FMAC4 soap_get_ns1__GetCheckList(struct soap*, ns1__GetCheckList *, const char*, const char*);

#ifndef soap_read_ns1__GetCheckList
#define soap_read_ns1__GetCheckList(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetCheckList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__GetCheckList * SOAP_FMAC2 soap_instantiate_ns1__GetCheckList(struct soap*, int, const char*, const char*, size_t*);

inline ns1__GetCheckList * soap_new_ns1__GetCheckList(struct soap *soap, int n = -1) { return soap_instantiate_ns1__GetCheckList(soap, n, NULL, NULL, NULL); }

inline ns1__GetCheckList * soap_new_req_ns1__GetCheckList(struct soap *soap) { ns1__GetCheckList *_p = soap_instantiate_ns1__GetCheckList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__GetCheckList * soap_new_set_ns1__GetCheckList(struct soap *soap, std::wstring *token, std::wstring *unitid) { ns1__GetCheckList *_p = soap_instantiate_ns1__GetCheckList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__GetCheckList::token = token; _p->ns1__GetCheckList::unitid = unitid; } return _p; }

inline void soap_delete_ns1__GetCheckList(struct soap *soap, ns1__GetCheckList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetCheckList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__vehicleloginResponse
#define SOAP_TYPE_ns1__vehicleloginResponse (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__vehicleloginResponse(struct soap*, const char*, int, const ns1__vehicleloginResponse *, const char*);
SOAP_FMAC3 ns1__vehicleloginResponse * SOAP_FMAC4 soap_in_ns1__vehicleloginResponse(struct soap*, const char*, ns1__vehicleloginResponse *, const char*);

#ifndef soap_write_ns1__vehicleloginResponse
#define soap_write_ns1__vehicleloginResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:vehicleloginResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__vehicleloginResponse * SOAP_FMAC4 soap_get_ns1__vehicleloginResponse(struct soap*, ns1__vehicleloginResponse *, const char*, const char*);

#ifndef soap_read_ns1__vehicleloginResponse
#define soap_read_ns1__vehicleloginResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__vehicleloginResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__vehicleloginResponse * SOAP_FMAC2 soap_instantiate_ns1__vehicleloginResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__vehicleloginResponse * soap_new_ns1__vehicleloginResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__vehicleloginResponse(soap, n, NULL, NULL, NULL); }

inline ns1__vehicleloginResponse * soap_new_req_ns1__vehicleloginResponse(struct soap *soap) { ns1__vehicleloginResponse *_p = soap_instantiate_ns1__vehicleloginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__vehicleloginResponse * soap_new_set_ns1__vehicleloginResponse(struct soap *soap, std::wstring *return_) { ns1__vehicleloginResponse *_p = soap_instantiate_ns1__vehicleloginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__vehicleloginResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__vehicleloginResponse(struct soap *soap, ns1__vehicleloginResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__vehicleloginResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__vehiclelogin
#define SOAP_TYPE_ns1__vehiclelogin (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__vehiclelogin(struct soap*, const char*, int, const ns1__vehiclelogin *, const char*);
SOAP_FMAC3 ns1__vehiclelogin * SOAP_FMAC4 soap_in_ns1__vehiclelogin(struct soap*, const char*, ns1__vehiclelogin *, const char*);

#ifndef soap_write_ns1__vehiclelogin
#define soap_write_ns1__vehiclelogin(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:vehiclelogin", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__vehiclelogin * SOAP_FMAC4 soap_get_ns1__vehiclelogin(struct soap*, ns1__vehiclelogin *, const char*, const char*);

#ifndef soap_read_ns1__vehiclelogin
#define soap_read_ns1__vehiclelogin(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__vehiclelogin(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__vehiclelogin * SOAP_FMAC2 soap_instantiate_ns1__vehiclelogin(struct soap*, int, const char*, const char*, size_t*);

inline ns1__vehiclelogin * soap_new_ns1__vehiclelogin(struct soap *soap, int n = -1) { return soap_instantiate_ns1__vehiclelogin(soap, n, NULL, NULL, NULL); }

inline ns1__vehiclelogin * soap_new_req_ns1__vehiclelogin(struct soap *soap) { ns1__vehiclelogin *_p = soap_instantiate_ns1__vehiclelogin(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__vehiclelogin * soap_new_set_ns1__vehiclelogin(struct soap *soap, std::wstring *vehiclexml) { ns1__vehiclelogin *_p = soap_instantiate_ns1__vehiclelogin(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__vehiclelogin::vehiclexml = vehiclexml; } return _p; }

inline void soap_delete_ns1__vehiclelogin(struct soap *soap, ns1__vehiclelogin *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__vehiclelogin(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetVehicleResponse
#define SOAP_TYPE_ns1__GetVehicleResponse (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetVehicleResponse(struct soap*, const char*, int, const ns1__GetVehicleResponse *, const char*);
SOAP_FMAC3 ns1__GetVehicleResponse * SOAP_FMAC4 soap_in_ns1__GetVehicleResponse(struct soap*, const char*, ns1__GetVehicleResponse *, const char*);

#ifndef soap_write_ns1__GetVehicleResponse
#define soap_write_ns1__GetVehicleResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetVehicleResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__GetVehicleResponse * SOAP_FMAC4 soap_get_ns1__GetVehicleResponse(struct soap*, ns1__GetVehicleResponse *, const char*, const char*);

#ifndef soap_read_ns1__GetVehicleResponse
#define soap_read_ns1__GetVehicleResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetVehicleResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__GetVehicleResponse * SOAP_FMAC2 soap_instantiate_ns1__GetVehicleResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__GetVehicleResponse * soap_new_ns1__GetVehicleResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__GetVehicleResponse(soap, n, NULL, NULL, NULL); }

inline ns1__GetVehicleResponse * soap_new_req_ns1__GetVehicleResponse(struct soap *soap) { ns1__GetVehicleResponse *_p = soap_instantiate_ns1__GetVehicleResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__GetVehicleResponse * soap_new_set_ns1__GetVehicleResponse(struct soap *soap, std::wstring *return_) { ns1__GetVehicleResponse *_p = soap_instantiate_ns1__GetVehicleResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__GetVehicleResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__GetVehicleResponse(struct soap *soap, ns1__GetVehicleResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetVehicleResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetVehicle
#define SOAP_TYPE_ns1__GetVehicle (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetVehicle(struct soap*, const char*, int, const ns1__GetVehicle *, const char*);
SOAP_FMAC3 ns1__GetVehicle * SOAP_FMAC4 soap_in_ns1__GetVehicle(struct soap*, const char*, ns1__GetVehicle *, const char*);

#ifndef soap_write_ns1__GetVehicle
#define soap_write_ns1__GetVehicle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetVehicle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__GetVehicle * SOAP_FMAC4 soap_get_ns1__GetVehicle(struct soap*, ns1__GetVehicle *, const char*, const char*);

#ifndef soap_read_ns1__GetVehicle
#define soap_read_ns1__GetVehicle(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetVehicle(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__GetVehicle * SOAP_FMAC2 soap_instantiate_ns1__GetVehicle(struct soap*, int, const char*, const char*, size_t*);

inline ns1__GetVehicle * soap_new_ns1__GetVehicle(struct soap *soap, int n = -1) { return soap_instantiate_ns1__GetVehicle(soap, n, NULL, NULL, NULL); }

inline ns1__GetVehicle * soap_new_req_ns1__GetVehicle(struct soap *soap) { ns1__GetVehicle *_p = soap_instantiate_ns1__GetVehicle(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__GetVehicle * soap_new_set_ns1__GetVehicle(struct soap *soap, std::wstring *token, std::wstring *unitid, std::wstring *vin) { ns1__GetVehicle *_p = soap_instantiate_ns1__GetVehicle(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__GetVehicle::token = token; _p->ns1__GetVehicle::unitid = unitid; _p->ns1__GetVehicle::vin = vin; } return _p; }

inline void soap_delete_ns1__GetVehicle(struct soap *soap, ns1__GetVehicle *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetVehicle(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__UploadInspectionResultResponse
#define SOAP_TYPE_ns1__UploadInspectionResultResponse (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__UploadInspectionResultResponse(struct soap*, const char*, int, const ns1__UploadInspectionResultResponse *, const char*);
SOAP_FMAC3 ns1__UploadInspectionResultResponse * SOAP_FMAC4 soap_in_ns1__UploadInspectionResultResponse(struct soap*, const char*, ns1__UploadInspectionResultResponse *, const char*);

#ifndef soap_write_ns1__UploadInspectionResultResponse
#define soap_write_ns1__UploadInspectionResultResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:UploadInspectionResultResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__UploadInspectionResultResponse * SOAP_FMAC4 soap_get_ns1__UploadInspectionResultResponse(struct soap*, ns1__UploadInspectionResultResponse *, const char*, const char*);

#ifndef soap_read_ns1__UploadInspectionResultResponse
#define soap_read_ns1__UploadInspectionResultResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__UploadInspectionResultResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__UploadInspectionResultResponse * SOAP_FMAC2 soap_instantiate_ns1__UploadInspectionResultResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__UploadInspectionResultResponse * soap_new_ns1__UploadInspectionResultResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__UploadInspectionResultResponse(soap, n, NULL, NULL, NULL); }

inline ns1__UploadInspectionResultResponse * soap_new_req_ns1__UploadInspectionResultResponse(struct soap *soap) { ns1__UploadInspectionResultResponse *_p = soap_instantiate_ns1__UploadInspectionResultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__UploadInspectionResultResponse * soap_new_set_ns1__UploadInspectionResultResponse(struct soap *soap, std::wstring *return_) { ns1__UploadInspectionResultResponse *_p = soap_instantiate_ns1__UploadInspectionResultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__UploadInspectionResultResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__UploadInspectionResultResponse(struct soap *soap, ns1__UploadInspectionResultResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__UploadInspectionResultResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__UploadInspectionResult
#define SOAP_TYPE_ns1__UploadInspectionResult (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__UploadInspectionResult(struct soap*, const char*, int, const ns1__UploadInspectionResult *, const char*);
SOAP_FMAC3 ns1__UploadInspectionResult * SOAP_FMAC4 soap_in_ns1__UploadInspectionResult(struct soap*, const char*, ns1__UploadInspectionResult *, const char*);

#ifndef soap_write_ns1__UploadInspectionResult
#define soap_write_ns1__UploadInspectionResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:UploadInspectionResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__UploadInspectionResult * SOAP_FMAC4 soap_get_ns1__UploadInspectionResult(struct soap*, ns1__UploadInspectionResult *, const char*, const char*);

#ifndef soap_read_ns1__UploadInspectionResult
#define soap_read_ns1__UploadInspectionResult(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__UploadInspectionResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__UploadInspectionResult * SOAP_FMAC2 soap_instantiate_ns1__UploadInspectionResult(struct soap*, int, const char*, const char*, size_t*);

inline ns1__UploadInspectionResult * soap_new_ns1__UploadInspectionResult(struct soap *soap, int n = -1) { return soap_instantiate_ns1__UploadInspectionResult(soap, n, NULL, NULL, NULL); }

inline ns1__UploadInspectionResult * soap_new_req_ns1__UploadInspectionResult(struct soap *soap, int checkmethod) { ns1__UploadInspectionResult *_p = soap_instantiate_ns1__UploadInspectionResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__UploadInspectionResult::checkmethod = checkmethod; } return _p; }

inline ns1__UploadInspectionResult * soap_new_set_ns1__UploadInspectionResult(struct soap *soap, std::wstring *token, std::wstring *unitid, std::wstring *checkresult, int checkmethod) { ns1__UploadInspectionResult *_p = soap_instantiate_ns1__UploadInspectionResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__UploadInspectionResult::token = token; _p->ns1__UploadInspectionResult::unitid = unitid; _p->ns1__UploadInspectionResult::checkresult = checkresult; _p->ns1__UploadInspectionResult::checkmethod = checkmethod; } return _p; }

inline void soap_delete_ns1__UploadInspectionResult(struct soap *soap, ns1__UploadInspectionResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__UploadInspectionResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__BeginCheckResponse
#define SOAP_TYPE_ns1__BeginCheckResponse (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__BeginCheckResponse(struct soap*, const char*, int, const ns1__BeginCheckResponse *, const char*);
SOAP_FMAC3 ns1__BeginCheckResponse * SOAP_FMAC4 soap_in_ns1__BeginCheckResponse(struct soap*, const char*, ns1__BeginCheckResponse *, const char*);

#ifndef soap_write_ns1__BeginCheckResponse
#define soap_write_ns1__BeginCheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:BeginCheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__BeginCheckResponse * SOAP_FMAC4 soap_get_ns1__BeginCheckResponse(struct soap*, ns1__BeginCheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__BeginCheckResponse
#define soap_read_ns1__BeginCheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__BeginCheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__BeginCheckResponse * SOAP_FMAC2 soap_instantiate_ns1__BeginCheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__BeginCheckResponse * soap_new_ns1__BeginCheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__BeginCheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__BeginCheckResponse * soap_new_req_ns1__BeginCheckResponse(struct soap *soap) { ns1__BeginCheckResponse *_p = soap_instantiate_ns1__BeginCheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__BeginCheckResponse * soap_new_set_ns1__BeginCheckResponse(struct soap *soap, std::wstring *return_) { ns1__BeginCheckResponse *_p = soap_instantiate_ns1__BeginCheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__BeginCheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__BeginCheckResponse(struct soap *soap, ns1__BeginCheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__BeginCheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__BeginCheck
#define SOAP_TYPE_ns1__BeginCheck (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__BeginCheck(struct soap*, const char*, int, const ns1__BeginCheck *, const char*);
SOAP_FMAC3 ns1__BeginCheck * SOAP_FMAC4 soap_in_ns1__BeginCheck(struct soap*, const char*, ns1__BeginCheck *, const char*);

#ifndef soap_write_ns1__BeginCheck
#define soap_write_ns1__BeginCheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:BeginCheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__BeginCheck * SOAP_FMAC4 soap_get_ns1__BeginCheck(struct soap*, ns1__BeginCheck *, const char*, const char*);

#ifndef soap_read_ns1__BeginCheck
#define soap_read_ns1__BeginCheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__BeginCheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__BeginCheck * SOAP_FMAC2 soap_instantiate_ns1__BeginCheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__BeginCheck * soap_new_ns1__BeginCheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__BeginCheck(soap, n, NULL, NULL, NULL); }

inline ns1__BeginCheck * soap_new_req_ns1__BeginCheck(struct soap *soap) { ns1__BeginCheck *_p = soap_instantiate_ns1__BeginCheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__BeginCheck * soap_new_set_ns1__BeginCheck(struct soap *soap, std::wstring *unitid, std::wstring *lineid, std::wstring *plate, std::wstring *vin, std::wstring *qwg, std::wstring *hwg, std::wstring *hcl) { ns1__BeginCheck *_p = soap_instantiate_ns1__BeginCheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__BeginCheck::unitid = unitid; _p->ns1__BeginCheck::lineid = lineid; _p->ns1__BeginCheck::plate = plate; _p->ns1__BeginCheck::vin = vin; _p->ns1__BeginCheck::qwg = qwg; _p->ns1__BeginCheck::hwg = hwg; _p->ns1__BeginCheck::hcl = hcl; } return _p; }

inline void soap_delete_ns1__BeginCheck(struct soap *soap, ns1__BeginCheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__BeginCheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getresResponse
#define SOAP_TYPE_ns1__getresResponse (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getresResponse(struct soap*, const char*, int, const ns1__getresResponse *, const char*);
SOAP_FMAC3 ns1__getresResponse * SOAP_FMAC4 soap_in_ns1__getresResponse(struct soap*, const char*, ns1__getresResponse *, const char*);

#ifndef soap_write_ns1__getresResponse
#define soap_write_ns1__getresResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:getresResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__getresResponse * SOAP_FMAC4 soap_get_ns1__getresResponse(struct soap*, ns1__getresResponse *, const char*, const char*);

#ifndef soap_read_ns1__getresResponse
#define soap_read_ns1__getresResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getresResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__getresResponse * SOAP_FMAC2 soap_instantiate_ns1__getresResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__getresResponse * soap_new_ns1__getresResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getresResponse(soap, n, NULL, NULL, NULL); }

inline ns1__getresResponse * soap_new_req_ns1__getresResponse(struct soap *soap) { ns1__getresResponse *_p = soap_instantiate_ns1__getresResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__getresResponse * soap_new_set_ns1__getresResponse(struct soap *soap, std::wstring *return_) { ns1__getresResponse *_p = soap_instantiate_ns1__getresResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__getresResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__getresResponse(struct soap *soap, ns1__getresResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getresResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getres
#define SOAP_TYPE_ns1__getres (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getres(struct soap*, const char*, int, const ns1__getres *, const char*);
SOAP_FMAC3 ns1__getres * SOAP_FMAC4 soap_in_ns1__getres(struct soap*, const char*, ns1__getres *, const char*);

#ifndef soap_write_ns1__getres
#define soap_write_ns1__getres(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:getres", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__getres * SOAP_FMAC4 soap_get_ns1__getres(struct soap*, ns1__getres *, const char*, const char*);

#ifndef soap_read_ns1__getres
#define soap_read_ns1__getres(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getres(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__getres * SOAP_FMAC2 soap_instantiate_ns1__getres(struct soap*, int, const char*, const char*, size_t*);

inline ns1__getres * soap_new_ns1__getres(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getres(soap, n, NULL, NULL, NULL); }

inline ns1__getres * soap_new_req_ns1__getres(struct soap *soap, int checkmethod, int hasover) { ns1__getres *_p = soap_instantiate_ns1__getres(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__getres::checkmethod = checkmethod; _p->ns1__getres::hasover = hasover; } return _p; }

inline ns1__getres * soap_new_set_ns1__getres(struct soap *soap, std::wstring *token, std::wstring *unitid, int checkmethod, int hasover) { ns1__getres *_p = soap_instantiate_ns1__getres(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__getres::token = token; _p->ns1__getres::unitid = unitid; _p->ns1__getres::checkmethod = checkmethod; _p->ns1__getres::hasover = hasover; } return _p; }

inline void soap_delete_ns1__getres(struct soap *soap, ns1__getres *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getres(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetYCVehicleResponse
#define SOAP_TYPE_ns1__GetYCVehicleResponse (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetYCVehicleResponse(struct soap*, const char*, int, const ns1__GetYCVehicleResponse *, const char*);
SOAP_FMAC3 ns1__GetYCVehicleResponse * SOAP_FMAC4 soap_in_ns1__GetYCVehicleResponse(struct soap*, const char*, ns1__GetYCVehicleResponse *, const char*);

#ifndef soap_write_ns1__GetYCVehicleResponse
#define soap_write_ns1__GetYCVehicleResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetYCVehicleResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__GetYCVehicleResponse * SOAP_FMAC4 soap_get_ns1__GetYCVehicleResponse(struct soap*, ns1__GetYCVehicleResponse *, const char*, const char*);

#ifndef soap_read_ns1__GetYCVehicleResponse
#define soap_read_ns1__GetYCVehicleResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetYCVehicleResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__GetYCVehicleResponse * SOAP_FMAC2 soap_instantiate_ns1__GetYCVehicleResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__GetYCVehicleResponse * soap_new_ns1__GetYCVehicleResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__GetYCVehicleResponse(soap, n, NULL, NULL, NULL); }

inline ns1__GetYCVehicleResponse * soap_new_req_ns1__GetYCVehicleResponse(struct soap *soap) { ns1__GetYCVehicleResponse *_p = soap_instantiate_ns1__GetYCVehicleResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__GetYCVehicleResponse * soap_new_set_ns1__GetYCVehicleResponse(struct soap *soap, std::wstring *return_) { ns1__GetYCVehicleResponse *_p = soap_instantiate_ns1__GetYCVehicleResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__GetYCVehicleResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__GetYCVehicleResponse(struct soap *soap, ns1__GetYCVehicleResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetYCVehicleResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetYCVehicle
#define SOAP_TYPE_ns1__GetYCVehicle (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetYCVehicle(struct soap*, const char*, int, const ns1__GetYCVehicle *, const char*);
SOAP_FMAC3 ns1__GetYCVehicle * SOAP_FMAC4 soap_in_ns1__GetYCVehicle(struct soap*, const char*, ns1__GetYCVehicle *, const char*);

#ifndef soap_write_ns1__GetYCVehicle
#define soap_write_ns1__GetYCVehicle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetYCVehicle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__GetYCVehicle * SOAP_FMAC4 soap_get_ns1__GetYCVehicle(struct soap*, ns1__GetYCVehicle *, const char*, const char*);

#ifndef soap_read_ns1__GetYCVehicle
#define soap_read_ns1__GetYCVehicle(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetYCVehicle(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__GetYCVehicle * SOAP_FMAC2 soap_instantiate_ns1__GetYCVehicle(struct soap*, int, const char*, const char*, size_t*);

inline ns1__GetYCVehicle * soap_new_ns1__GetYCVehicle(struct soap *soap, int n = -1) { return soap_instantiate_ns1__GetYCVehicle(soap, n, NULL, NULL, NULL); }

inline ns1__GetYCVehicle * soap_new_req_ns1__GetYCVehicle(struct soap *soap) { ns1__GetYCVehicle *_p = soap_instantiate_ns1__GetYCVehicle(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__GetYCVehicle * soap_new_set_ns1__GetYCVehicle(struct soap *soap, std::wstring *token, std::wstring *plate, std::wstring *color) { ns1__GetYCVehicle *_p = soap_instantiate_ns1__GetYCVehicle(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__GetYCVehicle::token = token; _p->ns1__GetYCVehicle::plate = plate; _p->ns1__GetYCVehicle::color = color; } return _p; }

inline void soap_delete_ns1__GetYCVehicle(struct soap *soap, ns1__GetYCVehicle *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetYCVehicle(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__GetBaseTypeInfo
#define SOAP_TYPE___ns1__GetBaseTypeInfo (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetBaseTypeInfo(struct soap*, struct __ns1__GetBaseTypeInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetBaseTypeInfo(struct soap*, const struct __ns1__GetBaseTypeInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetBaseTypeInfo(struct soap*, const char*, int, const struct __ns1__GetBaseTypeInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetBaseTypeInfo * SOAP_FMAC4 soap_in___ns1__GetBaseTypeInfo(struct soap*, const char*, struct __ns1__GetBaseTypeInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetBaseTypeInfo(struct soap*, const struct __ns1__GetBaseTypeInfo *, const char*, const char*);

#ifndef soap_write___ns1__GetBaseTypeInfo
#define soap_write___ns1__GetBaseTypeInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetBaseTypeInfo(soap, data),0) || soap_put___ns1__GetBaseTypeInfo(soap, data, "-ns1:GetBaseTypeInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetBaseTypeInfo * SOAP_FMAC4 soap_get___ns1__GetBaseTypeInfo(struct soap*, struct __ns1__GetBaseTypeInfo *, const char*, const char*);

#ifndef soap_read___ns1__GetBaseTypeInfo
#define soap_read___ns1__GetBaseTypeInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetBaseTypeInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetBaseTypeInfo * SOAP_FMAC2 soap_instantiate___ns1__GetBaseTypeInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetBaseTypeInfo * soap_new___ns1__GetBaseTypeInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetBaseTypeInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetBaseTypeInfo * soap_new_req___ns1__GetBaseTypeInfo(struct soap *soap) { struct __ns1__GetBaseTypeInfo *_p = soap_instantiate___ns1__GetBaseTypeInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetBaseTypeInfo(soap, _p); } return _p; }

inline struct __ns1__GetBaseTypeInfo * soap_new_set___ns1__GetBaseTypeInfo(struct soap *soap, ns1__GetBaseTypeInfo *ns1__GetBaseTypeInfo_) { struct __ns1__GetBaseTypeInfo *_p = soap_instantiate___ns1__GetBaseTypeInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetBaseTypeInfo(soap, _p); _p->ns1__GetBaseTypeInfo_ = ns1__GetBaseTypeInfo_; } return _p; }

inline void soap_delete___ns1__GetBaseTypeInfo(struct soap *soap, struct __ns1__GetBaseTypeInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetBaseTypeInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__LoginServer
#define SOAP_TYPE___ns1__LoginServer (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__LoginServer(struct soap*, struct __ns1__LoginServer *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__LoginServer(struct soap*, const struct __ns1__LoginServer *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__LoginServer(struct soap*, const char*, int, const struct __ns1__LoginServer *, const char*);
SOAP_FMAC3 struct __ns1__LoginServer * SOAP_FMAC4 soap_in___ns1__LoginServer(struct soap*, const char*, struct __ns1__LoginServer *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__LoginServer(struct soap*, const struct __ns1__LoginServer *, const char*, const char*);

#ifndef soap_write___ns1__LoginServer
#define soap_write___ns1__LoginServer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__LoginServer(soap, data),0) || soap_put___ns1__LoginServer(soap, data, "-ns1:LoginServer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__LoginServer * SOAP_FMAC4 soap_get___ns1__LoginServer(struct soap*, struct __ns1__LoginServer *, const char*, const char*);

#ifndef soap_read___ns1__LoginServer
#define soap_read___ns1__LoginServer(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__LoginServer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__LoginServer * SOAP_FMAC2 soap_instantiate___ns1__LoginServer(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__LoginServer * soap_new___ns1__LoginServer(struct soap *soap, int n = -1) { return soap_instantiate___ns1__LoginServer(soap, n, NULL, NULL, NULL); }

inline struct __ns1__LoginServer * soap_new_req___ns1__LoginServer(struct soap *soap) { struct __ns1__LoginServer *_p = soap_instantiate___ns1__LoginServer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__LoginServer(soap, _p); } return _p; }

inline struct __ns1__LoginServer * soap_new_set___ns1__LoginServer(struct soap *soap, ns1__LoginServer *ns1__LoginServer_) { struct __ns1__LoginServer *_p = soap_instantiate___ns1__LoginServer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__LoginServer(soap, _p); _p->ns1__LoginServer_ = ns1__LoginServer_; } return _p; }

inline void soap_delete___ns1__LoginServer(struct soap *soap, struct __ns1__LoginServer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__LoginServer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__validateJC
#define SOAP_TYPE___ns1__validateJC (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__validateJC(struct soap*, struct __ns1__validateJC *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__validateJC(struct soap*, const struct __ns1__validateJC *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__validateJC(struct soap*, const char*, int, const struct __ns1__validateJC *, const char*);
SOAP_FMAC3 struct __ns1__validateJC * SOAP_FMAC4 soap_in___ns1__validateJC(struct soap*, const char*, struct __ns1__validateJC *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__validateJC(struct soap*, const struct __ns1__validateJC *, const char*, const char*);

#ifndef soap_write___ns1__validateJC
#define soap_write___ns1__validateJC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__validateJC(soap, data),0) || soap_put___ns1__validateJC(soap, data, "-ns1:validateJC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__validateJC * SOAP_FMAC4 soap_get___ns1__validateJC(struct soap*, struct __ns1__validateJC *, const char*, const char*);

#ifndef soap_read___ns1__validateJC
#define soap_read___ns1__validateJC(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__validateJC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__validateJC * SOAP_FMAC2 soap_instantiate___ns1__validateJC(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__validateJC * soap_new___ns1__validateJC(struct soap *soap, int n = -1) { return soap_instantiate___ns1__validateJC(soap, n, NULL, NULL, NULL); }

inline struct __ns1__validateJC * soap_new_req___ns1__validateJC(struct soap *soap) { struct __ns1__validateJC *_p = soap_instantiate___ns1__validateJC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__validateJC(soap, _p); } return _p; }

inline struct __ns1__validateJC * soap_new_set___ns1__validateJC(struct soap *soap, ns1__validateJC *ns1__validateJC_) { struct __ns1__validateJC *_p = soap_instantiate___ns1__validateJC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__validateJC(soap, _p); _p->ns1__validateJC_ = ns1__validateJC_; } return _p; }

inline void soap_delete___ns1__validateJC(struct soap *soap, struct __ns1__validateJC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__validateJC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetCheckList
#define SOAP_TYPE___ns1__GetCheckList (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetCheckList(struct soap*, struct __ns1__GetCheckList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetCheckList(struct soap*, const struct __ns1__GetCheckList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetCheckList(struct soap*, const char*, int, const struct __ns1__GetCheckList *, const char*);
SOAP_FMAC3 struct __ns1__GetCheckList * SOAP_FMAC4 soap_in___ns1__GetCheckList(struct soap*, const char*, struct __ns1__GetCheckList *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetCheckList(struct soap*, const struct __ns1__GetCheckList *, const char*, const char*);

#ifndef soap_write___ns1__GetCheckList
#define soap_write___ns1__GetCheckList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetCheckList(soap, data),0) || soap_put___ns1__GetCheckList(soap, data, "-ns1:GetCheckList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetCheckList * SOAP_FMAC4 soap_get___ns1__GetCheckList(struct soap*, struct __ns1__GetCheckList *, const char*, const char*);

#ifndef soap_read___ns1__GetCheckList
#define soap_read___ns1__GetCheckList(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetCheckList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetCheckList * SOAP_FMAC2 soap_instantiate___ns1__GetCheckList(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetCheckList * soap_new___ns1__GetCheckList(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetCheckList(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetCheckList * soap_new_req___ns1__GetCheckList(struct soap *soap) { struct __ns1__GetCheckList *_p = soap_instantiate___ns1__GetCheckList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetCheckList(soap, _p); } return _p; }

inline struct __ns1__GetCheckList * soap_new_set___ns1__GetCheckList(struct soap *soap, ns1__GetCheckList *ns1__GetCheckList_) { struct __ns1__GetCheckList *_p = soap_instantiate___ns1__GetCheckList(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetCheckList(soap, _p); _p->ns1__GetCheckList_ = ns1__GetCheckList_; } return _p; }

inline void soap_delete___ns1__GetCheckList(struct soap *soap, struct __ns1__GetCheckList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetCheckList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__vehiclelogin
#define SOAP_TYPE___ns1__vehiclelogin (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__vehiclelogin(struct soap*, struct __ns1__vehiclelogin *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__vehiclelogin(struct soap*, const struct __ns1__vehiclelogin *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__vehiclelogin(struct soap*, const char*, int, const struct __ns1__vehiclelogin *, const char*);
SOAP_FMAC3 struct __ns1__vehiclelogin * SOAP_FMAC4 soap_in___ns1__vehiclelogin(struct soap*, const char*, struct __ns1__vehiclelogin *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__vehiclelogin(struct soap*, const struct __ns1__vehiclelogin *, const char*, const char*);

#ifndef soap_write___ns1__vehiclelogin
#define soap_write___ns1__vehiclelogin(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__vehiclelogin(soap, data),0) || soap_put___ns1__vehiclelogin(soap, data, "-ns1:vehiclelogin", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__vehiclelogin * SOAP_FMAC4 soap_get___ns1__vehiclelogin(struct soap*, struct __ns1__vehiclelogin *, const char*, const char*);

#ifndef soap_read___ns1__vehiclelogin
#define soap_read___ns1__vehiclelogin(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__vehiclelogin(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__vehiclelogin * SOAP_FMAC2 soap_instantiate___ns1__vehiclelogin(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__vehiclelogin * soap_new___ns1__vehiclelogin(struct soap *soap, int n = -1) { return soap_instantiate___ns1__vehiclelogin(soap, n, NULL, NULL, NULL); }

inline struct __ns1__vehiclelogin * soap_new_req___ns1__vehiclelogin(struct soap *soap) { struct __ns1__vehiclelogin *_p = soap_instantiate___ns1__vehiclelogin(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__vehiclelogin(soap, _p); } return _p; }

inline struct __ns1__vehiclelogin * soap_new_set___ns1__vehiclelogin(struct soap *soap, ns1__vehiclelogin *ns1__vehiclelogin_) { struct __ns1__vehiclelogin *_p = soap_instantiate___ns1__vehiclelogin(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__vehiclelogin(soap, _p); _p->ns1__vehiclelogin_ = ns1__vehiclelogin_; } return _p; }

inline void soap_delete___ns1__vehiclelogin(struct soap *soap, struct __ns1__vehiclelogin *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__vehiclelogin(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetVehicle
#define SOAP_TYPE___ns1__GetVehicle (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetVehicle(struct soap*, struct __ns1__GetVehicle *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetVehicle(struct soap*, const struct __ns1__GetVehicle *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetVehicle(struct soap*, const char*, int, const struct __ns1__GetVehicle *, const char*);
SOAP_FMAC3 struct __ns1__GetVehicle * SOAP_FMAC4 soap_in___ns1__GetVehicle(struct soap*, const char*, struct __ns1__GetVehicle *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetVehicle(struct soap*, const struct __ns1__GetVehicle *, const char*, const char*);

#ifndef soap_write___ns1__GetVehicle
#define soap_write___ns1__GetVehicle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetVehicle(soap, data),0) || soap_put___ns1__GetVehicle(soap, data, "-ns1:GetVehicle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetVehicle * SOAP_FMAC4 soap_get___ns1__GetVehicle(struct soap*, struct __ns1__GetVehicle *, const char*, const char*);

#ifndef soap_read___ns1__GetVehicle
#define soap_read___ns1__GetVehicle(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetVehicle(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetVehicle * SOAP_FMAC2 soap_instantiate___ns1__GetVehicle(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetVehicle * soap_new___ns1__GetVehicle(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetVehicle(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetVehicle * soap_new_req___ns1__GetVehicle(struct soap *soap) { struct __ns1__GetVehicle *_p = soap_instantiate___ns1__GetVehicle(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetVehicle(soap, _p); } return _p; }

inline struct __ns1__GetVehicle * soap_new_set___ns1__GetVehicle(struct soap *soap, ns1__GetVehicle *ns1__GetVehicle_) { struct __ns1__GetVehicle *_p = soap_instantiate___ns1__GetVehicle(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetVehicle(soap, _p); _p->ns1__GetVehicle_ = ns1__GetVehicle_; } return _p; }

inline void soap_delete___ns1__GetVehicle(struct soap *soap, struct __ns1__GetVehicle *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetVehicle(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UploadInspectionResult
#define SOAP_TYPE___ns1__UploadInspectionResult (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UploadInspectionResult(struct soap*, struct __ns1__UploadInspectionResult *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UploadInspectionResult(struct soap*, const struct __ns1__UploadInspectionResult *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UploadInspectionResult(struct soap*, const char*, int, const struct __ns1__UploadInspectionResult *, const char*);
SOAP_FMAC3 struct __ns1__UploadInspectionResult * SOAP_FMAC4 soap_in___ns1__UploadInspectionResult(struct soap*, const char*, struct __ns1__UploadInspectionResult *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UploadInspectionResult(struct soap*, const struct __ns1__UploadInspectionResult *, const char*, const char*);

#ifndef soap_write___ns1__UploadInspectionResult
#define soap_write___ns1__UploadInspectionResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UploadInspectionResult(soap, data),0) || soap_put___ns1__UploadInspectionResult(soap, data, "-ns1:UploadInspectionResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UploadInspectionResult * SOAP_FMAC4 soap_get___ns1__UploadInspectionResult(struct soap*, struct __ns1__UploadInspectionResult *, const char*, const char*);

#ifndef soap_read___ns1__UploadInspectionResult
#define soap_read___ns1__UploadInspectionResult(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UploadInspectionResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UploadInspectionResult * SOAP_FMAC2 soap_instantiate___ns1__UploadInspectionResult(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UploadInspectionResult * soap_new___ns1__UploadInspectionResult(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UploadInspectionResult(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UploadInspectionResult * soap_new_req___ns1__UploadInspectionResult(struct soap *soap) { struct __ns1__UploadInspectionResult *_p = soap_instantiate___ns1__UploadInspectionResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UploadInspectionResult(soap, _p); } return _p; }

inline struct __ns1__UploadInspectionResult * soap_new_set___ns1__UploadInspectionResult(struct soap *soap, ns1__UploadInspectionResult *ns1__UploadInspectionResult_) { struct __ns1__UploadInspectionResult *_p = soap_instantiate___ns1__UploadInspectionResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UploadInspectionResult(soap, _p); _p->ns1__UploadInspectionResult_ = ns1__UploadInspectionResult_; } return _p; }

inline void soap_delete___ns1__UploadInspectionResult(struct soap *soap, struct __ns1__UploadInspectionResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UploadInspectionResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__BeginCheck
#define SOAP_TYPE___ns1__BeginCheck (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__BeginCheck(struct soap*, struct __ns1__BeginCheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__BeginCheck(struct soap*, const struct __ns1__BeginCheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__BeginCheck(struct soap*, const char*, int, const struct __ns1__BeginCheck *, const char*);
SOAP_FMAC3 struct __ns1__BeginCheck * SOAP_FMAC4 soap_in___ns1__BeginCheck(struct soap*, const char*, struct __ns1__BeginCheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__BeginCheck(struct soap*, const struct __ns1__BeginCheck *, const char*, const char*);

#ifndef soap_write___ns1__BeginCheck
#define soap_write___ns1__BeginCheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__BeginCheck(soap, data),0) || soap_put___ns1__BeginCheck(soap, data, "-ns1:BeginCheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__BeginCheck * SOAP_FMAC4 soap_get___ns1__BeginCheck(struct soap*, struct __ns1__BeginCheck *, const char*, const char*);

#ifndef soap_read___ns1__BeginCheck
#define soap_read___ns1__BeginCheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__BeginCheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__BeginCheck * SOAP_FMAC2 soap_instantiate___ns1__BeginCheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__BeginCheck * soap_new___ns1__BeginCheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__BeginCheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__BeginCheck * soap_new_req___ns1__BeginCheck(struct soap *soap) { struct __ns1__BeginCheck *_p = soap_instantiate___ns1__BeginCheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__BeginCheck(soap, _p); } return _p; }

inline struct __ns1__BeginCheck * soap_new_set___ns1__BeginCheck(struct soap *soap, ns1__BeginCheck *ns1__BeginCheck_) { struct __ns1__BeginCheck *_p = soap_instantiate___ns1__BeginCheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__BeginCheck(soap, _p); _p->ns1__BeginCheck_ = ns1__BeginCheck_; } return _p; }

inline void soap_delete___ns1__BeginCheck(struct soap *soap, struct __ns1__BeginCheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__BeginCheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getres
#define SOAP_TYPE___ns1__getres (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getres(struct soap*, struct __ns1__getres *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getres(struct soap*, const struct __ns1__getres *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getres(struct soap*, const char*, int, const struct __ns1__getres *, const char*);
SOAP_FMAC3 struct __ns1__getres * SOAP_FMAC4 soap_in___ns1__getres(struct soap*, const char*, struct __ns1__getres *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getres(struct soap*, const struct __ns1__getres *, const char*, const char*);

#ifndef soap_write___ns1__getres
#define soap_write___ns1__getres(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__getres(soap, data),0) || soap_put___ns1__getres(soap, data, "-ns1:getres", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__getres * SOAP_FMAC4 soap_get___ns1__getres(struct soap*, struct __ns1__getres *, const char*, const char*);

#ifndef soap_read___ns1__getres
#define soap_read___ns1__getres(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getres(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__getres * SOAP_FMAC2 soap_instantiate___ns1__getres(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__getres * soap_new___ns1__getres(struct soap *soap, int n = -1) { return soap_instantiate___ns1__getres(soap, n, NULL, NULL, NULL); }

inline struct __ns1__getres * soap_new_req___ns1__getres(struct soap *soap) { struct __ns1__getres *_p = soap_instantiate___ns1__getres(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getres(soap, _p); } return _p; }

inline struct __ns1__getres * soap_new_set___ns1__getres(struct soap *soap, ns1__getres *ns1__getres_) { struct __ns1__getres *_p = soap_instantiate___ns1__getres(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getres(soap, _p); _p->ns1__getres_ = ns1__getres_; } return _p; }

inline void soap_delete___ns1__getres(struct soap *soap, struct __ns1__getres *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getres(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetYCVehicle
#define SOAP_TYPE___ns1__GetYCVehicle (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetYCVehicle(struct soap*, struct __ns1__GetYCVehicle *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetYCVehicle(struct soap*, const struct __ns1__GetYCVehicle *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetYCVehicle(struct soap*, const char*, int, const struct __ns1__GetYCVehicle *, const char*);
SOAP_FMAC3 struct __ns1__GetYCVehicle * SOAP_FMAC4 soap_in___ns1__GetYCVehicle(struct soap*, const char*, struct __ns1__GetYCVehicle *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetYCVehicle(struct soap*, const struct __ns1__GetYCVehicle *, const char*, const char*);

#ifndef soap_write___ns1__GetYCVehicle
#define soap_write___ns1__GetYCVehicle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetYCVehicle(soap, data),0) || soap_put___ns1__GetYCVehicle(soap, data, "-ns1:GetYCVehicle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetYCVehicle * SOAP_FMAC4 soap_get___ns1__GetYCVehicle(struct soap*, struct __ns1__GetYCVehicle *, const char*, const char*);

#ifndef soap_read___ns1__GetYCVehicle
#define soap_read___ns1__GetYCVehicle(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetYCVehicle(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetYCVehicle * SOAP_FMAC2 soap_instantiate___ns1__GetYCVehicle(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetYCVehicle * soap_new___ns1__GetYCVehicle(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetYCVehicle(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetYCVehicle * soap_new_req___ns1__GetYCVehicle(struct soap *soap) { struct __ns1__GetYCVehicle *_p = soap_instantiate___ns1__GetYCVehicle(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetYCVehicle(soap, _p); } return _p; }

inline struct __ns1__GetYCVehicle * soap_new_set___ns1__GetYCVehicle(struct soap *soap, ns1__GetYCVehicle *ns1__GetYCVehicle_) { struct __ns1__GetYCVehicle *_p = soap_instantiate___ns1__GetYCVehicle(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetYCVehicle(soap, _p); _p->ns1__GetYCVehicle_ = ns1__GetYCVehicle_; } return _p; }

inline void soap_delete___ns1__GetYCVehicle(struct soap *soap, struct __ns1__GetYCVehicle *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetYCVehicle(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTons1__GetBaseTypeInfo
#define SOAP_TYPE_PointerTons1__GetBaseTypeInfo (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__GetBaseTypeInfo(struct soap*, ns1__GetBaseTypeInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__GetBaseTypeInfo(struct soap*, const char *, int, ns1__GetBaseTypeInfo *const*, const char *);
SOAP_FMAC3 ns1__GetBaseTypeInfo ** SOAP_FMAC4 soap_in_PointerTons1__GetBaseTypeInfo(struct soap*, const char*, ns1__GetBaseTypeInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__GetBaseTypeInfo(struct soap*, ns1__GetBaseTypeInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__GetBaseTypeInfo
#define soap_write_PointerTons1__GetBaseTypeInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__GetBaseTypeInfo(soap, data),0) || soap_put_PointerTons1__GetBaseTypeInfo(soap, data, "ns1:GetBaseTypeInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__GetBaseTypeInfo ** SOAP_FMAC4 soap_get_PointerTons1__GetBaseTypeInfo(struct soap*, ns1__GetBaseTypeInfo **, const char*, const char*);

#ifndef soap_read_PointerTons1__GetBaseTypeInfo
#define soap_read_PointerTons1__GetBaseTypeInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__GetBaseTypeInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__LoginServer
#define SOAP_TYPE_PointerTons1__LoginServer (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__LoginServer(struct soap*, ns1__LoginServer *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__LoginServer(struct soap*, const char *, int, ns1__LoginServer *const*, const char *);
SOAP_FMAC3 ns1__LoginServer ** SOAP_FMAC4 soap_in_PointerTons1__LoginServer(struct soap*, const char*, ns1__LoginServer **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__LoginServer(struct soap*, ns1__LoginServer *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__LoginServer
#define soap_write_PointerTons1__LoginServer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__LoginServer(soap, data),0) || soap_put_PointerTons1__LoginServer(soap, data, "ns1:LoginServer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__LoginServer ** SOAP_FMAC4 soap_get_PointerTons1__LoginServer(struct soap*, ns1__LoginServer **, const char*, const char*);

#ifndef soap_read_PointerTons1__LoginServer
#define soap_read_PointerTons1__LoginServer(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__LoginServer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__validateJC
#define SOAP_TYPE_PointerTons1__validateJC (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__validateJC(struct soap*, ns1__validateJC *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__validateJC(struct soap*, const char *, int, ns1__validateJC *const*, const char *);
SOAP_FMAC3 ns1__validateJC ** SOAP_FMAC4 soap_in_PointerTons1__validateJC(struct soap*, const char*, ns1__validateJC **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__validateJC(struct soap*, ns1__validateJC *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__validateJC
#define soap_write_PointerTons1__validateJC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__validateJC(soap, data),0) || soap_put_PointerTons1__validateJC(soap, data, "ns1:validateJC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__validateJC ** SOAP_FMAC4 soap_get_PointerTons1__validateJC(struct soap*, ns1__validateJC **, const char*, const char*);

#ifndef soap_read_PointerTons1__validateJC
#define soap_read_PointerTons1__validateJC(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__validateJC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__GetCheckList
#define SOAP_TYPE_PointerTons1__GetCheckList (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__GetCheckList(struct soap*, ns1__GetCheckList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__GetCheckList(struct soap*, const char *, int, ns1__GetCheckList *const*, const char *);
SOAP_FMAC3 ns1__GetCheckList ** SOAP_FMAC4 soap_in_PointerTons1__GetCheckList(struct soap*, const char*, ns1__GetCheckList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__GetCheckList(struct soap*, ns1__GetCheckList *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__GetCheckList
#define soap_write_PointerTons1__GetCheckList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__GetCheckList(soap, data),0) || soap_put_PointerTons1__GetCheckList(soap, data, "ns1:GetCheckList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__GetCheckList ** SOAP_FMAC4 soap_get_PointerTons1__GetCheckList(struct soap*, ns1__GetCheckList **, const char*, const char*);

#ifndef soap_read_PointerTons1__GetCheckList
#define soap_read_PointerTons1__GetCheckList(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__GetCheckList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__vehiclelogin
#define SOAP_TYPE_PointerTons1__vehiclelogin (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__vehiclelogin(struct soap*, ns1__vehiclelogin *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__vehiclelogin(struct soap*, const char *, int, ns1__vehiclelogin *const*, const char *);
SOAP_FMAC3 ns1__vehiclelogin ** SOAP_FMAC4 soap_in_PointerTons1__vehiclelogin(struct soap*, const char*, ns1__vehiclelogin **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__vehiclelogin(struct soap*, ns1__vehiclelogin *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__vehiclelogin
#define soap_write_PointerTons1__vehiclelogin(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__vehiclelogin(soap, data),0) || soap_put_PointerTons1__vehiclelogin(soap, data, "ns1:vehiclelogin", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__vehiclelogin ** SOAP_FMAC4 soap_get_PointerTons1__vehiclelogin(struct soap*, ns1__vehiclelogin **, const char*, const char*);

#ifndef soap_read_PointerTons1__vehiclelogin
#define soap_read_PointerTons1__vehiclelogin(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__vehiclelogin(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__GetVehicle
#define SOAP_TYPE_PointerTons1__GetVehicle (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__GetVehicle(struct soap*, ns1__GetVehicle *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__GetVehicle(struct soap*, const char *, int, ns1__GetVehicle *const*, const char *);
SOAP_FMAC3 ns1__GetVehicle ** SOAP_FMAC4 soap_in_PointerTons1__GetVehicle(struct soap*, const char*, ns1__GetVehicle **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__GetVehicle(struct soap*, ns1__GetVehicle *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__GetVehicle
#define soap_write_PointerTons1__GetVehicle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__GetVehicle(soap, data),0) || soap_put_PointerTons1__GetVehicle(soap, data, "ns1:GetVehicle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__GetVehicle ** SOAP_FMAC4 soap_get_PointerTons1__GetVehicle(struct soap*, ns1__GetVehicle **, const char*, const char*);

#ifndef soap_read_PointerTons1__GetVehicle
#define soap_read_PointerTons1__GetVehicle(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__GetVehicle(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__UploadInspectionResult
#define SOAP_TYPE_PointerTons1__UploadInspectionResult (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__UploadInspectionResult(struct soap*, ns1__UploadInspectionResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__UploadInspectionResult(struct soap*, const char *, int, ns1__UploadInspectionResult *const*, const char *);
SOAP_FMAC3 ns1__UploadInspectionResult ** SOAP_FMAC4 soap_in_PointerTons1__UploadInspectionResult(struct soap*, const char*, ns1__UploadInspectionResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__UploadInspectionResult(struct soap*, ns1__UploadInspectionResult *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__UploadInspectionResult
#define soap_write_PointerTons1__UploadInspectionResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__UploadInspectionResult(soap, data),0) || soap_put_PointerTons1__UploadInspectionResult(soap, data, "ns1:UploadInspectionResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__UploadInspectionResult ** SOAP_FMAC4 soap_get_PointerTons1__UploadInspectionResult(struct soap*, ns1__UploadInspectionResult **, const char*, const char*);

#ifndef soap_read_PointerTons1__UploadInspectionResult
#define soap_read_PointerTons1__UploadInspectionResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__UploadInspectionResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__BeginCheck
#define SOAP_TYPE_PointerTons1__BeginCheck (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__BeginCheck(struct soap*, ns1__BeginCheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__BeginCheck(struct soap*, const char *, int, ns1__BeginCheck *const*, const char *);
SOAP_FMAC3 ns1__BeginCheck ** SOAP_FMAC4 soap_in_PointerTons1__BeginCheck(struct soap*, const char*, ns1__BeginCheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__BeginCheck(struct soap*, ns1__BeginCheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__BeginCheck
#define soap_write_PointerTons1__BeginCheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__BeginCheck(soap, data),0) || soap_put_PointerTons1__BeginCheck(soap, data, "ns1:BeginCheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__BeginCheck ** SOAP_FMAC4 soap_get_PointerTons1__BeginCheck(struct soap*, ns1__BeginCheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__BeginCheck
#define soap_read_PointerTons1__BeginCheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__BeginCheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__getres
#define SOAP_TYPE_PointerTons1__getres (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getres(struct soap*, ns1__getres *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getres(struct soap*, const char *, int, ns1__getres *const*, const char *);
SOAP_FMAC3 ns1__getres ** SOAP_FMAC4 soap_in_PointerTons1__getres(struct soap*, const char*, ns1__getres **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getres(struct soap*, ns1__getres *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__getres
#define soap_write_PointerTons1__getres(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__getres(soap, data),0) || soap_put_PointerTons1__getres(soap, data, "ns1:getres", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__getres ** SOAP_FMAC4 soap_get_PointerTons1__getres(struct soap*, ns1__getres **, const char*, const char*);

#ifndef soap_read_PointerTons1__getres
#define soap_read_PointerTons1__getres(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__getres(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__GetYCVehicle
#define SOAP_TYPE_PointerTons1__GetYCVehicle (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__GetYCVehicle(struct soap*, ns1__GetYCVehicle *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__GetYCVehicle(struct soap*, const char *, int, ns1__GetYCVehicle *const*, const char *);
SOAP_FMAC3 ns1__GetYCVehicle ** SOAP_FMAC4 soap_in_PointerTons1__GetYCVehicle(struct soap*, const char*, ns1__GetYCVehicle **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__GetYCVehicle(struct soap*, ns1__GetYCVehicle *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__GetYCVehicle
#define soap_write_PointerTons1__GetYCVehicle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__GetYCVehicle(soap, data),0) || soap_put_PointerTons1__GetYCVehicle(soap, data, "ns1:GetYCVehicle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__GetYCVehicle ** SOAP_FMAC4 soap_get_PointerTons1__GetYCVehicle(struct soap*, ns1__GetYCVehicle **, const char*, const char*);

#ifndef soap_read_PointerTons1__GetYCVehicle
#define soap_read_PointerTons1__GetYCVehicle(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__GetYCVehicle(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__wstring
#define SOAP_TYPE_PointerTostd__wstring (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__wstring(struct soap*, std::wstring *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__wstring(struct soap*, const char *, int, std::wstring *const*, const char *);
SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_in_PointerTostd__wstring(struct soap*, const char*, std::wstring **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__wstring(struct soap*, std::wstring *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__wstring
#define soap_write_PointerTostd__wstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__wstring(soap, data),0) || soap_put_PointerTostd__wstring(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_get_PointerTostd__wstring(struct soap*, std::wstring **, const char*, const char*);

#ifndef soap_read_PointerTostd__wstring
#define soap_read_PointerTostd__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__wstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
