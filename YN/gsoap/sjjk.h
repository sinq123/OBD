/* sjjk.h
   Generated by wsdl2h 2.8.21 from sjjk.wsdl and typemap.dat
   2019-12-18 06:52:02 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2014 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on sjjk.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.wdkj.com/                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://www.wdkj.com/"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://www.wdkj.com/"
//gsoap ns1   schema namespace:	http://www.wdkj.com/
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


//  Forward declaration of class ns1__xxtz.
class ns1__xxtz;

//  Forward declaration of class ns1__xxtzResponse.
class ns1__xxtzResponse;

//  Forward declaration of class ns1__ryzfJysj.
class ns1__ryzfJysj;

//  Forward declaration of class ns1__ryzfJysjResponse.
class ns1__ryzfJysjResponse;

//  Forward declaration of class ns1__jzjsJgsj.
class ns1__jzjsJgsj;

//  Forward declaration of class ns1__jzjsJgsjResponse.
class ns1__jzjsJgsjResponse;

//  Forward declaration of class ns1__wqfxyzj.
class ns1__wqfxyzj;

//  Forward declaration of class ns1__wqfxyzjResponse.
class ns1__wqfxyzjResponse;

//  Forward declaration of class ns1__hjcsyzj.
class ns1__hjcsyzj;

//  Forward declaration of class ns1__hjcsyzjResponse.
class ns1__hjcsyzjResponse;

//  Forward declaration of class ns1__sdsJgsj.
class ns1__sdsJgsj;

//  Forward declaration of class ns1__sdsJgsjResponse.
class ns1__sdsJgsjResponse;

//  Forward declaration of class ns1__lljzj.
class ns1__lljzj;

//  Forward declaration of class ns1__lljzjResponse.
class ns1__lljzjResponse;

//  Forward declaration of class ns1__sdsGcsj.
class ns1__sdsGcsj;

//  Forward declaration of class ns1__sdsGcsjResponse.
class ns1__sdsGcsjResponse;

//  Forward declaration of class ns1__jystJgsj.
class ns1__jystJgsj;

//  Forward declaration of class ns1__jystJgsjResponse.
class ns1__jystJgsjResponse;

//  Forward declaration of class ns1__cycObdIupr.
class ns1__cycObdIupr;

//  Forward declaration of class ns1__cycObdIuprResponse.
class ns1__cycObdIuprResponse;

//  Forward declaration of class ns1__jystGcsj.
class ns1__jystGcsj;

//  Forward declaration of class ns1__jystGcsjResponse.
class ns1__jystGcsjResponse;

//  Forward declaration of class ns1__wqfxybd.
class ns1__wqfxybd;

//  Forward declaration of class ns1__wqfxybdResponse.
class ns1__wqfxybdResponse;

//  Forward declaration of class ns1__btgJgsj.
class ns1__btgJgsj;

//  Forward declaration of class ns1__btgJgsjResponse.
class ns1__btgJgsjResponse;

//  Forward declaration of class ns1__wgjcJgsj.
class ns1__wgjcJgsj;

//  Forward declaration of class ns1__wgjcJgsjResponse.
class ns1__wgjcJgsjResponse;

//  Forward declaration of class ns1__btgGcsj.
class ns1__btgGcsj;

//  Forward declaration of class ns1__btgGcsjResponse.
class ns1__btgGcsjResponse;

//  Forward declaration of class ns1__jzjsGcsj.
class ns1__jzjsGcsj;

//  Forward declaration of class ns1__jzjsGcsjResponse.
class ns1__jzjsGcsjResponse;

//  Forward declaration of class ns1__obdGcsj.
class ns1__obdGcsj;

//  Forward declaration of class ns1__obdGcsjResponse.
class ns1__obdGcsjResponse;

//  Forward declaration of class ns1__gkrjbbh.
class ns1__gkrjbbh;

//  Forward declaration of class ns1__gkrjbbhResponse.
class ns1__gkrjbbhResponse;

//  Forward declaration of class ns1__cgjzj.
class ns1__cgjzj;

//  Forward declaration of class ns1__cgjzjResponse.
class ns1__cgjzjResponse;

//  Forward declaration of class ns1__fwqsjtb.
class ns1__fwqsjtb;

//  Forward declaration of class ns1__fwqsjtbResponse.
class ns1__fwqsjtbResponse;

//  Forward declaration of class ns1__wtGcsj.
class ns1__wtGcsj;

//  Forward declaration of class ns1__wtGcsjResponse.
class ns1__wtGcsjResponse;

//  Forward declaration of class ns1__getDjclxx.
class ns1__getDjclxx;

//  Forward declaration of class ns1__getDjclxxResponse.
class ns1__getDjclxxResponse;

//  Forward declaration of class ns1__obdJgsj.
class ns1__obdJgsj;

//  Forward declaration of class ns1__obdJgsjResponse.
class ns1__obdJgsjResponse;

//  Forward declaration of class ns1__getAccessToken.
class ns1__getAccessToken;

//  Forward declaration of class ns1__getAccessTokenResponse.
class ns1__getAccessTokenResponse;

//  Forward declaration of class ns1__getDjlb.
class ns1__getDjlb;

//  Forward declaration of class ns1__getDjlbResponse.
class ns1__getDjlbResponse;

//  Forward declaration of class ns1__wtJgsj.
class ns1__wtJgsj;

//  Forward declaration of class ns1__wtJgsjResponse.
class ns1__wtJgsjResponse;

//  Forward declaration of class ns1__lgmhdGcsj.
class ns1__lgmhdGcsj;

//  Forward declaration of class ns1__lgmhdGcsjResponse.
class ns1__lgmhdGcsjResponse;

//  Forward declaration of class ns1__getDjzt.
class ns1__getDjzt;

//  Forward declaration of class ns1__getDjztResponse.
class ns1__getDjztResponse;

//  Forward declaration of class ns1__qycObdIupr.
class ns1__qycObdIupr;

//  Forward declaration of class ns1__qycObdIuprResponse.
class ns1__qycObdIuprResponse;

//  Forward declaration of class ns1__ydjzj.
class ns1__ydjzj;

//  Forward declaration of class ns1__ydjzjResponse.
class ns1__ydjzjResponse;

//  Forward declaration of class ns1__lgmhdJgsj.
class ns1__lgmhdJgsj;

//  Forward declaration of class ns1__lgmhdJgsjResponse.
class ns1__lgmhdJgsjResponse;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.wdkj.com/                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.wdkj.com/                                                     *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.wdkj.com/":xxtz is a complexType.
///
/// class ns1__xxtz operations:
/// - soap_new_ns1__xxtz(soap*) allocate
/// - soap_new_ns1__xxtz(soap*, int num) allocate array
/// - soap_new_req_ns1__xxtz(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__xxtz(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__xxtz(soap*, ns1__xxtz*) deserialize from a stream
/// - int soap_write_ns1__xxtz(soap, ns1__xxtz*) serialize to a stream
class ns1__xxtz
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "code" of XSD type xs:string.
    std::wstring*                        code                           0;	///< Optional element.
/// Element "message" of XSD type xs:string.
    std::wstring*                        message                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":xxtzResponse is a complexType.
///
/// class ns1__xxtzResponse operations:
/// - soap_new_ns1__xxtzResponse(soap*) allocate
/// - soap_new_ns1__xxtzResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__xxtzResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__xxtzResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__xxtzResponse(soap*, ns1__xxtzResponse*) deserialize from a stream
/// - int soap_write_ns1__xxtzResponse(soap, ns1__xxtzResponse*) serialize to a stream
class ns1__xxtzResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":ryzfJysj is a complexType.
///
/// class ns1__ryzfJysj operations:
/// - soap_new_ns1__ryzfJysj(soap*) allocate
/// - soap_new_ns1__ryzfJysj(soap*, int num) allocate array
/// - soap_new_req_ns1__ryzfJysj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ryzfJysj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ryzfJysj(soap*, ns1__ryzfJysj*) deserialize from a stream
/// - int soap_write_ns1__ryzfJysj(soap, ns1__ryzfJysj*) serialize to a stream
class ns1__ryzfJysj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "jykcsyl" of XSD type xs:double.
    double                               jykcsyl                        1;	///< Required element.
/// Element "jykssyl" of XSD type xs:double.
    double                               jykssyl                        1;	///< Required element.
/// Element "jykcsjg" of XSD type xs:string.
    std::wstring*                        jykcsjg                        0;	///< Optional element.
/// Element "yxgxlll" of XSD type xs:double.
    double                               yxgxlll                        1;	///< Required element.
/// Element "yxgcsyl" of XSD type xs:double.
    double                               yxgcsyl                        1;	///< Required element.
/// Element "yxgssyl" of XSD type xs:double.
    double                               yxgssyl                        1;	///< Required element.
/// Element "yxgcsjg" of XSD type xs:string.
    std::wstring*                        yxgcsjg                        0;	///< Optional element.
/// Element "jcjg" of XSD type xs:string.
    std::wstring*                        jcjg                           0;	///< Optional element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":ryzfJysjResponse is a complexType.
///
/// class ns1__ryzfJysjResponse operations:
/// - soap_new_ns1__ryzfJysjResponse(soap*) allocate
/// - soap_new_ns1__ryzfJysjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ryzfJysjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ryzfJysjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ryzfJysjResponse(soap*, ns1__ryzfJysjResponse*) deserialize from a stream
/// - int soap_write_ns1__ryzfJysjResponse(soap, ns1__ryzfJysjResponse*) serialize to a stream
class ns1__ryzfJysjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":jzjsJgsj is a complexType.
///
/// class ns1__jzjsJgsj operations:
/// - soap_new_ns1__jzjsJgsj(soap*) allocate
/// - soap_new_ns1__jzjsJgsj(soap*, int num) allocate array
/// - soap_new_req_ns1__jzjsJgsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__jzjsJgsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__jzjsJgsj(soap*, ns1__jzjsJgsj*) deserialize from a stream
/// - int soap_write_ns1__jzjsJgsj(soap, ns1__jzjsJgsj*) serialize to a stream
class ns1__jzjsJgsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "k100" of XSD type xs:double.
    double                               k100                           1;	///< Required element.
/// Element "k80" of XSD type xs:double.
    double                               k80                            1;	///< Required element.
/// Element "nox80" of XSD type xs:double.
    double                               nox80                          1;	///< Required element.
/// Element "zdlbgl" of XSD type xs:double.
    double                               zdlbgl                         1;	///< Required element.
/// Element "zdsd" of XSD type xs:double.
    double                               zdsd                           1;	///< Required element.
/// Element "fdjzs" of XSD type xs:double.
    double                               fdjzs                          1;	///< Required element.
/// Element "dszs" of XSD type xs:double.
    double                               dszs                           1;	///< Required element.
/// Element "fdjzssx" of XSD type xs:double.
    double                               fdjzssx                        1;	///< Required element.
/// Element "fdjzsxx" of XSD type xs:double.
    double                               fdjzsxx                        1;	///< Required element.
/// Element "wd" of XSD type xs:double.
    double                               wd                             1;	///< Required element.
/// Element "sd" of XSD type xs:double.
    double                               sd                             1;	///< Required element.
/// Element "dqy" of XSD type xs:double.
    double                               dqy                            1;	///< Required element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":jzjsJgsjResponse is a complexType.
///
/// class ns1__jzjsJgsjResponse operations:
/// - soap_new_ns1__jzjsJgsjResponse(soap*) allocate
/// - soap_new_ns1__jzjsJgsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__jzjsJgsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__jzjsJgsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__jzjsJgsjResponse(soap*, ns1__jzjsJgsjResponse*) deserialize from a stream
/// - int soap_write_ns1__jzjsJgsjResponse(soap, ns1__jzjsJgsjResponse*) serialize to a stream
class ns1__jzjsJgsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":wqfxyzj is a complexType.
///
/// class ns1__wqfxyzj operations:
/// - soap_new_ns1__wqfxyzj(soap*) allocate
/// - soap_new_ns1__wqfxyzj(soap*, int num) allocate array
/// - soap_new_req_ns1__wqfxyzj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__wqfxyzj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__wqfxyzj(soap*, ns1__wqfxyzj*) deserialize from a stream
/// - int soap_write_ns1__wqfxyzj(soap, ns1__wqfxyzj*) serialize to a stream
class ns1__wqfxyzj
{ public:
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "jcjg" of XSD type xs:string.
    std::wstring*                        jcjg                           0;	///< Optional element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// Element "bz" of XSD type xs:string.
    std::wstring*                        bz                             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":wqfxyzjResponse is a complexType.
///
/// class ns1__wqfxyzjResponse operations:
/// - soap_new_ns1__wqfxyzjResponse(soap*) allocate
/// - soap_new_ns1__wqfxyzjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__wqfxyzjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__wqfxyzjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__wqfxyzjResponse(soap*, ns1__wqfxyzjResponse*) deserialize from a stream
/// - int soap_write_ns1__wqfxyzjResponse(soap, ns1__wqfxyzjResponse*) serialize to a stream
class ns1__wqfxyzjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":hjcsyzj is a complexType.
///
/// class ns1__hjcsyzj operations:
/// - soap_new_ns1__hjcsyzj(soap*) allocate
/// - soap_new_ns1__hjcsyzj(soap*, int num) allocate array
/// - soap_new_req_ns1__hjcsyzj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__hjcsyzj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__hjcsyzj(soap*, ns1__hjcsyzj*) deserialize from a stream
/// - int soap_write_ns1__hjcsyzj(soap, ns1__hjcsyzj*) serialize to a stream
class ns1__hjcsyzj
{ public:
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "sjhjwd" of XSD type xs:double.
    double                               sjhjwd                         1;	///< Required element.
/// Element "clhjwd" of XSD type xs:double.
    double                               clhjwd                         1;	///< Required element.
/// Element "sjhjsd" of XSD type xs:double.
    double                               sjhjsd                         1;	///< Required element.
/// Element "clhjsd" of XSD type xs:double.
    double                               clhjsd                         1;	///< Required element.
/// Element "sjdqyl" of XSD type xs:double.
    double                               sjdqyl                         1;	///< Required element.
/// Element "cldqyl" of XSD type xs:double.
    double                               cldqyl                         1;	///< Required element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// Element "bz" of XSD type xs:string.
    std::wstring*                        bz                             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":hjcsyzjResponse is a complexType.
///
/// class ns1__hjcsyzjResponse operations:
/// - soap_new_ns1__hjcsyzjResponse(soap*) allocate
/// - soap_new_ns1__hjcsyzjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__hjcsyzjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__hjcsyzjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__hjcsyzjResponse(soap*, ns1__hjcsyzjResponse*) deserialize from a stream
/// - int soap_write_ns1__hjcsyzjResponse(soap, ns1__hjcsyzjResponse*) serialize to a stream
class ns1__hjcsyzjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":sdsJgsj is a complexType.
///
/// class ns1__sdsJgsj operations:
/// - soap_new_ns1__sdsJgsj(soap*) allocate
/// - soap_new_ns1__sdsJgsj(soap*, int num) allocate array
/// - soap_new_req_ns1__sdsJgsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__sdsJgsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__sdsJgsj(soap*, ns1__sdsJgsj*) deserialize from a stream
/// - int soap_write_ns1__sdsJgsj(soap, ns1__sdsJgsj*) serialize to a stream
class ns1__sdsJgsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "dszs" of XSD type xs:double.
    double                               dszs                           1;	///< Required element.
/// Element "dsyw" of XSD type xs:double.
    double                               dsyw                           1;	///< Required element.
/// Element "gdszs" of XSD type xs:double.
    double                               gdszs                          1;	///< Required element.
/// Element "gdsyw" of XSD type xs:double.
    double                               gdsyw                          1;	///< Required element.
/// Element "dsco" of XSD type xs:double.
    double                               dsco                           1;	///< Required element.
/// Element "dshc" of XSD type xs:double.
    double                               dshc                           1;	///< Required element.
/// Element "gdsco" of XSD type xs:double.
    double                               gdsco                          1;	///< Required element.
/// Element "gdshc" of XSD type xs:double.
    double                               gdshc                          1;	///< Required element.
/// Element "glkqxs" of XSD type xs:double.
    double                               glkqxs                         1;	///< Required element.
/// Element "wd" of XSD type xs:double.
    double                               wd                             1;	///< Required element.
/// Element "sd" of XSD type xs:double.
    double                               sd                             1;	///< Required element.
/// Element "dqy" of XSD type xs:double.
    double                               dqy                            1;	///< Required element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":sdsJgsjResponse is a complexType.
///
/// class ns1__sdsJgsjResponse operations:
/// - soap_new_ns1__sdsJgsjResponse(soap*) allocate
/// - soap_new_ns1__sdsJgsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__sdsJgsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__sdsJgsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__sdsJgsjResponse(soap*, ns1__sdsJgsjResponse*) deserialize from a stream
/// - int soap_write_ns1__sdsJgsjResponse(soap, ns1__sdsJgsjResponse*) serialize to a stream
class ns1__sdsJgsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":lljzj is a complexType.
///
/// class ns1__lljzj operations:
/// - soap_new_ns1__lljzj(soap*) allocate
/// - soap_new_ns1__lljzj(soap*, int num) allocate array
/// - soap_new_req_ns1__lljzj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__lljzj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__lljzj(soap*, ns1__lljzj*) deserialize from a stream
/// - int soap_write_ns1__lljzj(soap, ns1__lljzj*) serialize to a stream
class ns1__lljzj
{ public:
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "jqglljcjg" of XSD type xs:double.
    double                               jqglljcjg                      1;	///< Required element.
/// Element "lljylcjcjg" of XSD type xs:double.
    double                               lljylcjcjg                     1;	///< Required element.
/// Element "yqglcbz" of XSD type xs:double.
    double                               yqglcbz                        1;	///< Required element.
/// Element "yqglcclz" of XSD type xs:double.
    double                               yqglcclz                       1;	///< Required element.
/// Element "yqglcwc" of XSD type xs:double.
    double                               yqglcwc                        1;	///< Required element.
/// Element "yqdlcbz" of XSD type xs:double.
    double                               yqdlcbz                        1;	///< Required element.
/// Element "yqdlcclz" of XSD type xs:double.
    double                               yqdlcclz                       1;	///< Required element.
/// Element "yqdlcwc" of XSD type xs:double.
    double                               yqdlcwc                        1;	///< Required element.
/// Element "jcjg" of XSD type xs:string.
    std::wstring*                        jcjg                           0;	///< Optional element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// Element "bz" of XSD type xs:string.
    std::wstring*                        bz                             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":lljzjResponse is a complexType.
///
/// class ns1__lljzjResponse operations:
/// - soap_new_ns1__lljzjResponse(soap*) allocate
/// - soap_new_ns1__lljzjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__lljzjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__lljzjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__lljzjResponse(soap*, ns1__lljzjResponse*) deserialize from a stream
/// - int soap_write_ns1__lljzjResponse(soap, ns1__lljzjResponse*) serialize to a stream
class ns1__lljzjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":sdsGcsj is a complexType.
///
/// class ns1__sdsGcsj operations:
/// - soap_new_ns1__sdsGcsj(soap*) allocate
/// - soap_new_ns1__sdsGcsj(soap*, int num) allocate array
/// - soap_new_req_ns1__sdsGcsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__sdsGcsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__sdsGcsj(soap*, ns1__sdsGcsj*) deserialize from a stream
/// - int soap_write_ns1__sdsGcsj(soap, ns1__sdsGcsj*) serialize to a stream
class ns1__sdsGcsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "qssx" of XSD type xs:string.
    std::wstring*                        qssx                           0;	///< Optional element.
/// Element "gklx" of XSD type xs:string.
    std::wstring*                        gklx                           0;	///< Optional element.
/// Element "jcsxh" of XSD type xs:int.
    int                                  jcsxh                          1;	///< Required element.
/// Element "hc" of XSD type xs:double.
    double                               hc                             1;	///< Required element.
/// Element "co" of XSD type xs:double.
    double                               co                             1;	///< Required element.
/// Element "co2" of XSD type xs:double.
    double                               co2                            1;	///< Required element.
/// Element "o2" of XSD type xs:double.
    double                               o2                             1;	///< Required element.
/// Element "glkqxs" of XSD type xs:double.
    double                               glkqxs                         1;	///< Required element.
/// Element "jyyw" of XSD type xs:double.
    double                               jyyw                           1;	///< Required element.
/// Element "fdjzs" of XSD type xs:string.
    std::wstring*                        fdjzs                          0;	///< Optional element.
/// Element "wd" of XSD type xs:double.
    double                               wd                             1;	///< Required element.
/// Element "sd" of XSD type xs:double.
    double                               sd                             1;	///< Required element.
/// Element "dqy" of XSD type xs:double.
    double                               dqy                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":sdsGcsjResponse is a complexType.
///
/// class ns1__sdsGcsjResponse operations:
/// - soap_new_ns1__sdsGcsjResponse(soap*) allocate
/// - soap_new_ns1__sdsGcsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__sdsGcsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__sdsGcsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__sdsGcsjResponse(soap*, ns1__sdsGcsjResponse*) deserialize from a stream
/// - int soap_write_ns1__sdsGcsjResponse(soap, ns1__sdsGcsjResponse*) serialize to a stream
class ns1__sdsGcsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":jystJgsj is a complexType.
///
/// class ns1__jystJgsj operations:
/// - soap_new_ns1__jystJgsj(soap*) allocate
/// - soap_new_ns1__jystJgsj(soap*, int num) allocate array
/// - soap_new_req_ns1__jystJgsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__jystJgsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__jystJgsj(soap*, ns1__jystJgsj*) deserialize from a stream
/// - int soap_write_ns1__jystJgsj(soap, ns1__jystJgsj*) serialize to a stream
class ns1__jystJgsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "co" of XSD type xs:double.
    double                               co                             1;	///< Required element.
/// Element "hc" of XSD type xs:double.
    double                               hc                             1;	///< Required element.
/// Element "no" of XSD type xs:double.
    double                               no                             1;	///< Required element.
/// Element "sdgl" of XSD type xs:double.
    double                               sdgl                           1;	///< Required element.
/// Element "sjxsjl" of XSD type xs:double.
    double                               sjxsjl                         1;	///< Required element.
/// Element "cssj" of XSD type xs:double.
    double                               cssj                           1;	///< Required element.
/// Element "plcs" of XSD type xs:double.
    double                               plcs                           1;	///< Required element.
/// Element "zplsj" of XSD type xs:double.
    double                               zplsj                          1;	///< Required element.
/// Element "wd" of XSD type xs:double.
    double                               wd                             1;	///< Required element.
/// Element "sd" of XSD type xs:double.
    double                               sd                             1;	///< Required element.
/// Element "dqy" of XSD type xs:double.
    double                               dqy                            1;	///< Required element.
/// Element "ynd" of XSD type xs:double.
    double                               ynd                            1;	///< Required element.
/// Element "glkqxs" of XSD type xs:double.
    double                               glkqxs                         1;	///< Required element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":jystJgsjResponse is a complexType.
///
/// class ns1__jystJgsjResponse operations:
/// - soap_new_ns1__jystJgsjResponse(soap*) allocate
/// - soap_new_ns1__jystJgsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__jystJgsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__jystJgsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__jystJgsjResponse(soap*, ns1__jystJgsjResponse*) deserialize from a stream
/// - int soap_write_ns1__jystJgsjResponse(soap, ns1__jystJgsjResponse*) serialize to a stream
class ns1__jystJgsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":cycObdIupr is a complexType.
///
/// class ns1__cycObdIupr operations:
/// - soap_new_ns1__cycObdIupr(soap*) allocate
/// - soap_new_ns1__cycObdIupr(soap*, int num) allocate array
/// - soap_new_req_ns1__cycObdIupr(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__cycObdIupr(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__cycObdIupr(soap*, ns1__cycObdIupr*) deserialize from a stream
/// - int soap_write_ns1__cycObdIupr(soap, ns1__cycObdIupr*) serialize to a stream
class ns1__cycObdIupr
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "nmhcchqjccs" of XSD type xs:int.
    int                                  nmhcchqjccs                    1;	///< Required element.
/// Element "nmhcchqfhtjcs" of XSD type xs:int.
    int                                  nmhcchqfhtjcs                  1;	///< Required element.
/// Element "nmhcchqiuprl" of XSD type xs:double.
    double                               nmhcchqiuprl                   1;	///< Required element.
/// Element "noxchqjccs" of XSD type xs:int.
    int                                  noxchqjccs                     1;	///< Required element.
/// Element "noxchqfhtjcs" of XSD type xs:int.
    int                                  noxchqfhtjcs                   1;	///< Required element.
/// Element "noxchqiuprl" of XSD type xs:double.
    double                               noxchqiuprl                    1;	///< Required element.
/// Element "noxxfqjccs" of XSD type xs:int.
    int                                  noxxfqjccs                     1;	///< Required element.
/// Element "noxxfqfhtjcs" of XSD type xs:int.
    int                                  noxxfqfhtjcs                   1;	///< Required element.
/// Element "noxxfqiuprl" of XSD type xs:double.
    double                               noxxfqiuprl                    1;	///< Required element.
/// Element "pmbjqjccs" of XSD type xs:int.
    int                                  pmbjqjccs                      1;	///< Required element.
/// Element "pmbjqfhtjcs" of XSD type xs:int.
    int                                  pmbjqfhtjcs                    1;	///< Required element.
/// Element "pmbjqiuprl" of XSD type xs:double.
    double                               pmbjqiuprl                     1;	///< Required element.
/// Element "fqcgqjccs" of XSD type xs:int.
    int                                  fqcgqjccs                      1;	///< Required element.
/// Element "fqcgqfhtjcs" of XSD type xs:int.
    int                                  fqcgqfhtjcs                    1;	///< Required element.
/// Element "fqcgqiuprl" of XSD type xs:double.
    double                               fqcgqiuprl                     1;	///< Required element.
/// Element "egrvvtjccs" of XSD type xs:int.
    int                                  egrvvtjccs                     1;	///< Required element.
/// Element "egrvvtfhtjcs" of XSD type xs:int.
    int                                  egrvvtfhtjcs                   1;	///< Required element.
/// Element "egrvvtiuprl" of XSD type xs:double.
    double                               egrvvtiuprl                    1;	///< Required element.
/// Element "zyyljccs" of XSD type xs:int.
    int                                  zyyljccs                       1;	///< Required element.
/// Element "zyylfhtjcs" of XSD type xs:int.
    int                                  zyylfhtjcs                     1;	///< Required element.
/// Element "zyyliuprl" of XSD type xs:double.
    double                               zyyliuprl                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":cycObdIuprResponse is a complexType.
///
/// class ns1__cycObdIuprResponse operations:
/// - soap_new_ns1__cycObdIuprResponse(soap*) allocate
/// - soap_new_ns1__cycObdIuprResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__cycObdIuprResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__cycObdIuprResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__cycObdIuprResponse(soap*, ns1__cycObdIuprResponse*) deserialize from a stream
/// - int soap_write_ns1__cycObdIuprResponse(soap, ns1__cycObdIuprResponse*) serialize to a stream
class ns1__cycObdIuprResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":jystGcsj is a complexType.
///
/// class ns1__jystGcsj operations:
/// - soap_new_ns1__jystGcsj(soap*) allocate
/// - soap_new_ns1__jystGcsj(soap*, int num) allocate array
/// - soap_new_req_ns1__jystGcsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__jystGcsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__jystGcsj(soap*, ns1__jystGcsj*) deserialize from a stream
/// - int soap_write_ns1__jystGcsj(soap, ns1__jystGcsj*) serialize to a stream
class ns1__jystGcsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "qssx" of XSD type xs:string.
    std::wstring*                        qssx                           0;	///< Optional element.
/// Element "gklx" of XSD type xs:string.
    std::wstring*                        gklx                           0;	///< Optional element.
/// Element "jcsxh" of XSD type xs:int.
    int                                  jcsxh                          1;	///< Required element.
/// Element "wxzhc" of XSD type xs:double.
    double                               wxzhc                          1;	///< Required element.
/// Element "hc" of XSD type xs:double.
    double                               hc                             1;	///< Required element.
/// Element "wxzco" of XSD type xs:double.
    double                               wxzco                          1;	///< Required element.
/// Element "co" of XSD type xs:double.
    double                               co                             1;	///< Required element.
/// Element "co2" of XSD type xs:double.
    double                               co2                            1;	///< Required element.
/// Element "wxznox" of XSD type xs:double.
    double                               wxznox                         1;	///< Required element.
/// Element "nox" of XSD type xs:double.
    double                               nox                            1;	///< Required element.
/// Element "o2" of XSD type xs:double.
    double                               o2                             1;	///< Required element.
/// Element "sjll" of XSD type xs:double.
    double                               sjll                           1;	///< Required element.
/// Element "bzll" of XSD type xs:double.
    double                               bzll                           1;	///< Required element.
/// Element "wqll" of XSD type xs:double.
    double                               wqll                           1;	///< Required element.
/// Element "cs" of XSD type xs:double.
    double                               cs                             1;	///< Required element.
/// Element "bzss" of XSD type xs:double.
    double                               bzss                           1;	///< Required element.
/// Element "fdjzs" of XSD type xs:double.
    double                               fdjzs                          1;	///< Required element.
/// Element "glkqxs" of XSD type xs:double.
    double                               glkqxs                         1;	///< Required element.
/// Element "xsxzxs" of XSD type xs:double.
    double                               xsxzxs                         1;	///< Required element.
/// Element "nosdxzxs" of XSD type xs:double.
    double                               nosdxzxs                       1;	///< Required element.
/// Element "xsb" of XSD type xs:double.
    double                               xsb                            1;	///< Required element.
/// Element "jzgl" of XSD type xs:double.
    double                               jzgl                           1;	///< Required element.
/// Element "jsgl" of XSD type xs:double.
    double                               jsgl                           1;	///< Required element.
/// Element "zsgl" of XSD type xs:double.
    double                               zsgl                           1;	///< Required element.
/// Element "lljqy" of XSD type xs:double.
    double                               lljqy                          1;	///< Required element.
/// Element "lljwd" of XSD type xs:double.
    double                               lljwd                          1;	///< Required element.
/// Element "nl" of XSD type xs:double.
    double                               nl                             1;	///< Required element.
/// Element "fxyglyl" of XSD type xs:double.
    double                               fxyglyl                        1;	///< Required element.
/// Element "scfz" of XSD type xs:double.
    double                               scfz                           1;	///< Required element.
/// Element "wd" of XSD type xs:double.
    double                               wd                             1;	///< Required element.
/// Element "sd" of XSD type xs:double.
    double                               sd                             1;	///< Required element.
/// Element "dqy" of XSD type xs:double.
    double                               dqy                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":jystGcsjResponse is a complexType.
///
/// class ns1__jystGcsjResponse operations:
/// - soap_new_ns1__jystGcsjResponse(soap*) allocate
/// - soap_new_ns1__jystGcsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__jystGcsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__jystGcsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__jystGcsjResponse(soap*, ns1__jystGcsjResponse*) deserialize from a stream
/// - int soap_write_ns1__jystGcsjResponse(soap, ns1__jystGcsjResponse*) serialize to a stream
class ns1__jystGcsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":wqfxybd is a complexType.
///
/// class ns1__wqfxybd operations:
/// - soap_new_ns1__wqfxybd(soap*) allocate
/// - soap_new_ns1__wqfxybd(soap*, int num) allocate array
/// - soap_new_req_ns1__wqfxybd(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__wqfxybd(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__wqfxybd(soap*, ns1__wqfxybd*) deserialize from a stream
/// - int soap_write_ns1__wqfxybd(soap, ns1__wqfxybd*) serialize to a stream
class ns1__wqfxybd
{ public:
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "gasType" of XSD type xs:string.
    std::wstring*                        gasType                        0;	///< Optional element.
/// Element "bzCO2" of XSD type xs:double.
    double                               bzCO2                          1;	///< Required element.
/// Element "sjCO2" of XSD type xs:double.
    double                               sjCO2                          1;	///< Required element.
/// Element "bzCO" of XSD type xs:double.
    double                               bzCO                           1;	///< Required element.
/// Element "sjCO" of XSD type xs:double.
    double                               sjCO                           1;	///< Required element.
/// Element "bzNO" of XSD type xs:double.
    double                               bzNO                           1;	///< Required element.
/// Element "sjNO" of XSD type xs:double.
    double                               sjNO                           1;	///< Required element.
/// Element "bzHC" of XSD type xs:double.
    double                               bzHC                           1;	///< Required element.
/// Element "sjHC" of XSD type xs:double.
    double                               sjHC                           1;	///< Required element.
/// Element "bzO2" of XSD type xs:double.
    double                               bzO2                           1;	///< Required element.
/// Element "sjO2" of XSD type xs:double.
    double                               sjO2                           1;	///< Required element.
/// Element "sjPEF" of XSD type xs:double.
    double                               sjPEF                          1;	///< Required element.
/// Element "bzC3H8" of XSD type xs:double.
    double                               bzC3H8                         1;	///< Required element.
/// Element "jcjg" of XSD type xs:string.
    std::wstring*                        jcjg                           0;	///< Optional element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// Element "bz" of XSD type xs:string.
    std::wstring*                        bz                             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":wqfxybdResponse is a complexType.
///
/// class ns1__wqfxybdResponse operations:
/// - soap_new_ns1__wqfxybdResponse(soap*) allocate
/// - soap_new_ns1__wqfxybdResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__wqfxybdResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__wqfxybdResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__wqfxybdResponse(soap*, ns1__wqfxybdResponse*) deserialize from a stream
/// - int soap_write_ns1__wqfxybdResponse(soap, ns1__wqfxybdResponse*) serialize to a stream
class ns1__wqfxybdResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":btgJgsj is a complexType.
///
/// class ns1__btgJgsj operations:
/// - soap_new_ns1__btgJgsj(soap*) allocate
/// - soap_new_ns1__btgJgsj(soap*, int num) allocate array
/// - soap_new_req_ns1__btgJgsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__btgJgsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__btgJgsj(soap*, ns1__btgJgsj*) deserialize from a stream
/// - int soap_write_ns1__btgJgsj(soap, ns1__btgJgsj*) serialize to a stream
class ns1__btgJgsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "ydz1" of XSD type xs:double.
    double                               ydz1                           1;	///< Required element.
/// Element "zs1" of XSD type xs:double.
    double                               zs1                            1;	///< Required element.
/// Element "ydz2" of XSD type xs:double.
    double                               ydz2                           1;	///< Required element.
/// Element "zs2" of XSD type xs:double.
    double                               zs2                            1;	///< Required element.
/// Element "ydz3" of XSD type xs:double.
    double                               ydz3                           1;	///< Required element.
/// Element "zs3" of XSD type xs:double.
    double                               zs3                            1;	///< Required element.
/// Element "dszs" of XSD type xs:double.
    double                               dszs                           1;	///< Required element.
/// Element "wd" of XSD type xs:double.
    double                               wd                             1;	///< Required element.
/// Element "sd" of XSD type xs:double.
    double                               sd                             1;	///< Required element.
/// Element "dqy" of XSD type xs:double.
    double                               dqy                            1;	///< Required element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":btgJgsjResponse is a complexType.
///
/// class ns1__btgJgsjResponse operations:
/// - soap_new_ns1__btgJgsjResponse(soap*) allocate
/// - soap_new_ns1__btgJgsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__btgJgsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__btgJgsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__btgJgsjResponse(soap*, ns1__btgJgsjResponse*) deserialize from a stream
/// - int soap_write_ns1__btgJgsjResponse(soap, ns1__btgJgsjResponse*) serialize to a stream
class ns1__btgJgsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":wgjcJgsj is a complexType.
///
/// class ns1__wgjcJgsj operations:
/// - soap_new_ns1__wgjcJgsj(soap*) allocate
/// - soap_new_ns1__wgjcJgsj(soap*, int num) allocate array
/// - soap_new_req_ns1__wgjcJgsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__wgjcJgsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__wgjcJgsj(soap*, ns1__wgjcJgsj*) deserialize from a stream
/// - int soap_write_ns1__wgjcJgsj(soap, ns1__wgjcJgsj*) serialize to a stream
class ns1__wgjcJgsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "cljxzk" of XSD type xs:string.
    std::wstring*                        cljxzk                         0;	///< Optional element.
/// Element "pqwrkzzz" of XSD type xs:string.
    std::wstring*                        pqwrkzzz                       0;	///< Optional element.
/// Element "fdjsfdkb" of XSD type xs:string.
    std::wstring*                        fdjsfdkb                       0;	///< Optional element.
/// Element "sfsjymhy" of XSD type xs:string.
    std::wstring*                        sfsjymhy                       0;	///< Optional element.
/// Element "qzxtfxt" of XSD type xs:string.
    std::wstring*                        qzxtfxt                        0;	///< Optional element.
/// Element "ryzfkzxt" of XSD type xs:string.
    std::wstring*                        ryzfkzxt                       0;	///< Optional element.
/// Element "ybpgzqk" of XSD type xs:string.
    std::wstring*                        ybpgzqk                        0;	///< Optional element.
/// Element "sfyjxgz" of XSD type xs:string.
    std::wstring*                        sfyjxgz                        0;	///< Optional element.
/// Element "pqxtsfxl" of XSD type xs:string.
    std::wstring*                        pqxtsfxl                       0;	///< Optional element.
/// Element "sfyytxl" of XSD type xs:string.
    std::wstring*                        sfyytxl                        0;	///< Optional element.
/// Element "sfyobd" of XSD type xs:string.
    std::wstring*                        sfyobd                         0;	///< Optional element.
/// Element "ltqysfzc" of XSD type xs:string.
    std::wstring*                        ltqysfzc                       0;	///< Optional element.
/// Element "ltsfqjgj" of XSD type xs:string.
    std::wstring*                        ltsfqjgj                       0;	///< Optional element.
/// Element "sfgbktnf" of XSD type xs:string.
    std::wstring*                        sfgbktnf                       0;	///< Optional element.
/// Element "sfzdmxgn" of XSD type xs:string.
    std::wstring*                        sfzdmxgn                       0;	///< Optional element.
/// Element "yxypsfyc" of XSD type xs:string.
    std::wstring*                        yxypsfyc                       0;	///< Optional element.
/// Element "sfshgkfjc" of XSD type xs:string.
    std::wstring*                        sfshgkfjc                      0;	///< Optional element.
/// Element "cyjg" of XSD type xs:string.
    std::wstring*                        cyjg                           0;	///< Optional element.
/// Element "jyymc" of XSD type xs:string.
    std::wstring*                        jyymc                          0;	///< Optional element.
/// Element "jysj" of XSD type xs:string.
    std::wstring*                        jysj                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":wgjcJgsjResponse is a complexType.
///
/// class ns1__wgjcJgsjResponse operations:
/// - soap_new_ns1__wgjcJgsjResponse(soap*) allocate
/// - soap_new_ns1__wgjcJgsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__wgjcJgsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__wgjcJgsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__wgjcJgsjResponse(soap*, ns1__wgjcJgsjResponse*) deserialize from a stream
/// - int soap_write_ns1__wgjcJgsjResponse(soap, ns1__wgjcJgsjResponse*) serialize to a stream
class ns1__wgjcJgsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":btgGcsj is a complexType.
///
/// class ns1__btgGcsj operations:
/// - soap_new_ns1__btgGcsj(soap*) allocate
/// - soap_new_ns1__btgGcsj(soap*, int num) allocate array
/// - soap_new_req_ns1__btgGcsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__btgGcsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__btgGcsj(soap*, ns1__btgGcsj*) deserialize from a stream
/// - int soap_write_ns1__btgGcsj(soap, ns1__btgGcsj*) serialize to a stream
class ns1__btgGcsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "qssx" of XSD type xs:string.
    std::wstring*                        qssx                           0;	///< Optional element.
/// Element "gklx" of XSD type xs:string.
    std::wstring*                        gklx                           0;	///< Optional element.
/// Element "jcsxh" of XSD type xs:int.
    int                                  jcsxh                          1;	///< Required element.
/// Element "ydz" of XSD type xs:double.
    double                               ydz                            1;	///< Required element.
/// Element "fdjzs" of XSD type xs:double.
    double                               fdjzs                          1;	///< Required element.
/// Element "yw" of XSD type xs:double.
    double                               yw                             1;	///< Required element.
/// Element "wd" of XSD type xs:double.
    double                               wd                             1;	///< Required element.
/// Element "sd" of XSD type xs:double.
    double                               sd                             1;	///< Required element.
/// Element "dqy" of XSD type xs:double.
    double                               dqy                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":btgGcsjResponse is a complexType.
///
/// class ns1__btgGcsjResponse operations:
/// - soap_new_ns1__btgGcsjResponse(soap*) allocate
/// - soap_new_ns1__btgGcsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__btgGcsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__btgGcsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__btgGcsjResponse(soap*, ns1__btgGcsjResponse*) deserialize from a stream
/// - int soap_write_ns1__btgGcsjResponse(soap, ns1__btgGcsjResponse*) serialize to a stream
class ns1__btgGcsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":jzjsGcsj is a complexType.
///
/// class ns1__jzjsGcsj operations:
/// - soap_new_ns1__jzjsGcsj(soap*) allocate
/// - soap_new_ns1__jzjsGcsj(soap*, int num) allocate array
/// - soap_new_req_ns1__jzjsGcsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__jzjsGcsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__jzjsGcsj(soap*, ns1__jzjsGcsj*) deserialize from a stream
/// - int soap_write_ns1__jzjsGcsj(soap, ns1__jzjsGcsj*) serialize to a stream
class ns1__jzjsGcsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "qssx" of XSD type xs:string.
    std::wstring*                        qssx                           0;	///< Optional element.
/// Element "gklx" of XSD type xs:string.
    std::wstring*                        gklx                           0;	///< Optional element.
/// Element "jcsxh" of XSD type xs:int.
    int                                  jcsxh                          1;	///< Required element.
/// Element "gxsxs" of XSD type xs:double.
    double                               gxsxs                          1;	///< Required element.
/// Element "ydz" of XSD type xs:double.
    double                               ydz                            1;	///< Required element.
/// Element "sscs" of XSD type xs:double.
    double                               sscs                           1;	///< Required element.
/// Element "fdjzs" of XSD type xs:double.
    double                               fdjzs                          1;	///< Required element.
/// Element "nl" of XSD type xs:double.
    double                               nl                             1;	///< Required element.
/// Element "nj" of XSD type xs:double.
    double                               nj                             1;	///< Required element.
/// Element "scgl" of XSD type xs:double.
    double                               scgl                           1;	///< Required element.
/// Element "glxzxs" of XSD type xs:double.
    double                               glxzxs                         1;	///< Required element.
/// Element "xzhgl" of XSD type xs:double.
    double                               xzhgl                          1;	///< Required element.
/// Element "nox" of XSD type xs:double.
    double                               nox                            1;	///< Required element.
/// Element "co2" of XSD type xs:double.
    double                               co2                            1;	///< Required element.
/// Element "wd" of XSD type xs:double.
    double                               wd                             1;	///< Required element.
/// Element "sd" of XSD type xs:double.
    double                               sd                             1;	///< Required element.
/// Element "dqy" of XSD type xs:double.
    double                               dqy                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":jzjsGcsjResponse is a complexType.
///
/// class ns1__jzjsGcsjResponse operations:
/// - soap_new_ns1__jzjsGcsjResponse(soap*) allocate
/// - soap_new_ns1__jzjsGcsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__jzjsGcsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__jzjsGcsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__jzjsGcsjResponse(soap*, ns1__jzjsGcsjResponse*) deserialize from a stream
/// - int soap_write_ns1__jzjsGcsjResponse(soap, ns1__jzjsGcsjResponse*) serialize to a stream
class ns1__jzjsGcsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":obdGcsj is a complexType.
///
/// class ns1__obdGcsj operations:
/// - soap_new_ns1__obdGcsj(soap*) allocate
/// - soap_new_ns1__obdGcsj(soap*, int num) allocate array
/// - soap_new_req_ns1__obdGcsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__obdGcsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__obdGcsj(soap*, ns1__obdGcsj*) deserialize from a stream
/// - int soap_write_ns1__obdGcsj(soap, ns1__obdGcsj*) serialize to a stream
class ns1__obdGcsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "qssx" of XSD type xs:string.
    std::wstring*                        qssx                           0;	///< Optional element.
/// Element "jcsxh" of XSD type xs:string.
    std::wstring*                        jcsxh                          0;	///< Optional element.
/// Element "jqmjdkd" of XSD type xs:double.
    double                               jqmjdkd                        1;	///< Required element.
/// Element "fhz" of XSD type xs:double.
    double                               fhz                            1;	///< Required element.
/// Element "ycgqxh" of XSD type xs:double.
    double                               ycgqxh                         1;	///< Required element.
/// Element "glkqxs" of XSD type xs:double.
    double                               glkqxs                         1;	///< Required element.
/// Element "cs" of XSD type xs:double.
    double                               cs                             1;	///< Required element.
/// Element "fdjgl" of XSD type xs:double.
    double                               fdjgl                          1;	///< Required element.
/// Element "fdjzs" of XSD type xs:double.
    double                               fdjzs                          1;	///< Required element.
/// Element "jql" of XSD type xs:double.
    double                               jql                            1;	///< Required element.
/// Element "jqyl" of XSD type xs:double.
    double                               jqyl                           1;	///< Required element.
/// Element "zyyl" of XSD type xs:double.
    double                               zyyl                           1;	///< Required element.
/// Element "ymkd" of XSD type xs:double.
    double                               ymkd                           1;	///< Required element.
/// Element "hyl" of XSD type xs:double.
    double                               hyl                            1;	///< Required element.
/// Element "nycgqnd" of XSD type xs:double.
    double                               nycgqnd                        1;	///< Required element.
/// Element "nspsl" of XSD type xs:double.
    double                               nspsl                          1;	///< Required element.
/// Element "pqwd" of XSD type xs:double.
    double                               pqwd                           1;	///< Required element.
/// Element "klbzqyc" of XSD type xs:double.
    double                               klbzqyc                        1;	///< Required element.
/// Element "egrkd" of XSD type xs:double.
    double                               egrkd                          1;	///< Required element.
/// Element "rypsyl" of XSD type xs:double.
    double                               rypsyl                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":obdGcsjResponse is a complexType.
///
/// class ns1__obdGcsjResponse operations:
/// - soap_new_ns1__obdGcsjResponse(soap*) allocate
/// - soap_new_ns1__obdGcsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__obdGcsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__obdGcsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__obdGcsjResponse(soap*, ns1__obdGcsjResponse*) deserialize from a stream
/// - int soap_write_ns1__obdGcsjResponse(soap, ns1__obdGcsjResponse*) serialize to a stream
class ns1__obdGcsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":gkrjbbh is a complexType.
///
/// class ns1__gkrjbbh operations:
/// - soap_new_ns1__gkrjbbh(soap*) allocate
/// - soap_new_ns1__gkrjbbh(soap*, int num) allocate array
/// - soap_new_req_ns1__gkrjbbh(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__gkrjbbh(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__gkrjbbh(soap*, ns1__gkrjbbh*) deserialize from a stream
/// - int soap_write_ns1__gkrjbbh(soap, ns1__gkrjbbh*) serialize to a stream
class ns1__gkrjbbh
{ public:
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "bbh" of XSD type xs:string.
    std::wstring*                        bbh                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":gkrjbbhResponse is a complexType.
///
/// class ns1__gkrjbbhResponse operations:
/// - soap_new_ns1__gkrjbbhResponse(soap*) allocate
/// - soap_new_ns1__gkrjbbhResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__gkrjbbhResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__gkrjbbhResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__gkrjbbhResponse(soap*, ns1__gkrjbbhResponse*) deserialize from a stream
/// - int soap_write_ns1__gkrjbbhResponse(soap, ns1__gkrjbbhResponse*) serialize to a stream
class ns1__gkrjbbhResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":cgjzj is a complexType.
///
/// class ns1__cgjzj operations:
/// - soap_new_ns1__cgjzj(soap*) allocate
/// - soap_new_ns1__cgjzj(soap*, int num) allocate array
/// - soap_new_req_ns1__cgjzj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__cgjzj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__cgjzj(soap*, ns1__cgjzj*) deserialize from a stream
/// - int soap_write_ns1__cgjzj(soap, ns1__cgjzj*) serialize to a stream
class ns1__cgjzj
{ public:
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "gsjzllsj" of XSD type xs:double.
    double                               gsjzllsj                       1;	///< Required element.
/// Element "gsjzsjsj" of XSD type xs:double.
    double                               gsjzsjsj                       1;	///< Required element.
/// Element "dsjzllsj" of XSD type xs:double.
    double                               dsjzllsj                       1;	///< Required element.
/// Element "dsjzsjsj" of XSD type xs:double.
    double                               dsjzsjsj                       1;	///< Required element.
/// Element "gsjzns" of XSD type xs:double.
    double                               gsjzns                         1;	///< Required element.
/// Element "dsjzns" of XSD type xs:double.
    double                               dsjzns                         1;	///< Required element.
/// Element "gsjzhxgl" of XSD type xs:double.
    double                               gsjzhxgl                       1;	///< Required element.
/// Element "dsjzhxgl" of XSD type xs:double.
    double                               dsjzhxgl                       1;	///< Required element.
/// Element "jbgl" of XSD type xs:double.
    double                               jbgl                           1;	///< Required element.
/// Element "gsjzjcjg" of XSD type xs:string.
    std::wstring*                        gsjzjcjg                       0;	///< Optional element.
/// Element "dsjzjcjg" of XSD type xs:string.
    std::wstring*                        dsjzjcjg                       0;	///< Optional element.
/// Element "jcjg" of XSD type xs:string.
    std::wstring*                        jcjg                           0;	///< Optional element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// Element "bz" of XSD type xs:string.
    std::wstring*                        bz                             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":cgjzjResponse is a complexType.
///
/// class ns1__cgjzjResponse operations:
/// - soap_new_ns1__cgjzjResponse(soap*) allocate
/// - soap_new_ns1__cgjzjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__cgjzjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__cgjzjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__cgjzjResponse(soap*, ns1__cgjzjResponse*) deserialize from a stream
/// - int soap_write_ns1__cgjzjResponse(soap, ns1__cgjzjResponse*) serialize to a stream
class ns1__cgjzjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":fwqsjtb is a complexType.
///
/// class ns1__fwqsjtb operations:
/// - soap_new_ns1__fwqsjtb(soap*) allocate
/// - soap_new_ns1__fwqsjtb(soap*, int num) allocate array
/// - soap_new_req_ns1__fwqsjtb(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__fwqsjtb(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__fwqsjtb(soap*, ns1__fwqsjtb*) deserialize from a stream
/// - int soap_write_ns1__fwqsjtb(soap, ns1__fwqsjtb*) serialize to a stream
class ns1__fwqsjtb
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":fwqsjtbResponse is a complexType.
///
/// class ns1__fwqsjtbResponse operations:
/// - soap_new_ns1__fwqsjtbResponse(soap*) allocate
/// - soap_new_ns1__fwqsjtbResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__fwqsjtbResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__fwqsjtbResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__fwqsjtbResponse(soap*, ns1__fwqsjtbResponse*) deserialize from a stream
/// - int soap_write_ns1__fwqsjtbResponse(soap, ns1__fwqsjtbResponse*) serialize to a stream
class ns1__fwqsjtbResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":wtGcsj is a complexType.
///
/// class ns1__wtGcsj operations:
/// - soap_new_ns1__wtGcsj(soap*) allocate
/// - soap_new_ns1__wtGcsj(soap*, int num) allocate array
/// - soap_new_req_ns1__wtGcsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__wtGcsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__wtGcsj(soap*, ns1__wtGcsj*) deserialize from a stream
/// - int soap_write_ns1__wtGcsj(soap, ns1__wtGcsj*) serialize to a stream
class ns1__wtGcsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "qssx" of XSD type xs:string.
    std::wstring*                        qssx                           0;	///< Optional element.
/// Element "gklx" of XSD type xs:string.
    std::wstring*                        gklx                           0;	///< Optional element.
/// Element "jcsxh" of XSD type xs:int.
    int                                  jcsxh                          1;	///< Required element.
/// Element "wxzhc" of XSD type xs:double.
    double                               wxzhc                          1;	///< Required element.
/// Element "wxzco" of XSD type xs:double.
    double                               wxzco                          1;	///< Required element.
/// Element "wxzno" of XSD type xs:double.
    double                               wxzno                          1;	///< Required element.
/// Element "hc" of XSD type xs:double.
    double                               hc                             1;	///< Required element.
/// Element "co" of XSD type xs:double.
    double                               co                             1;	///< Required element.
/// Element "no" of XSD type xs:double.
    double                               no                             1;	///< Required element.
/// Element "o2" of XSD type xs:double.
    double                               o2                             1;	///< Required element.
/// Element "co2" of XSD type xs:double.
    double                               co2                            1;	///< Required element.
/// Element "cs" of XSD type xs:double.
    double                               cs                             1;	///< Required element.
/// Element "zs" of XSD type xs:double.
    double                               zs                             1;	///< Required element.
/// Element "xsxzxs" of XSD type xs:double.
    double                               xsxzxs                         1;	///< Required element.
/// Element "sdxzxs" of XSD type xs:double.
    double                               sdxzxs                         1;	///< Required element.
/// Element "glkqxs" of XSD type xs:double.
    double                               glkqxs                         1;	///< Required element.
/// Element "dpcgjfz" of XSD type xs:double.
    double                               dpcgjfz                        1;	///< Required element.
/// Element "zjzgl" of XSD type xs:double.
    double                               zjzgl                          1;	///< Required element.
/// Element "jsgl" of XSD type xs:double.
    double                               jsgl                           1;	///< Required element.
/// Element "zsgl" of XSD type xs:double.
    double                               zsgl                           1;	///< Required element.
/// Element "nl" of XSD type xs:double.
    double                               nl                             1;	///< Required element.
/// Element "fxyglyl" of XSD type xs:double.
    double                               fxyglyl                        1;	///< Required element.
/// Element "wd" of XSD type xs:double.
    double                               wd                             1;	///< Required element.
/// Element "sd" of XSD type xs:double.
    double                               sd                             1;	///< Required element.
/// Element "dqy" of XSD type xs:double.
    double                               dqy                            1;	///< Required element.
/// Element "yw" of XSD type xs:double.
    double                               yw                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":wtGcsjResponse is a complexType.
///
/// class ns1__wtGcsjResponse operations:
/// - soap_new_ns1__wtGcsjResponse(soap*) allocate
/// - soap_new_ns1__wtGcsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__wtGcsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__wtGcsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__wtGcsjResponse(soap*, ns1__wtGcsjResponse*) deserialize from a stream
/// - int soap_write_ns1__wtGcsjResponse(soap, ns1__wtGcsjResponse*) serialize to a stream
class ns1__wtGcsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":getDjclxx is a complexType.
///
/// class ns1__getDjclxx operations:
/// - soap_new_ns1__getDjclxx(soap*) allocate
/// - soap_new_ns1__getDjclxx(soap*, int num) allocate array
/// - soap_new_req_ns1__getDjclxx(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__getDjclxx(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__getDjclxx(soap*, ns1__getDjclxx*) deserialize from a stream
/// - int soap_write_ns1__getDjclxx(soap, ns1__getDjclxx*) serialize to a stream
class ns1__getDjclxx
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":getDjclxxResponse is a complexType.
///
/// class ns1__getDjclxxResponse operations:
/// - soap_new_ns1__getDjclxxResponse(soap*) allocate
/// - soap_new_ns1__getDjclxxResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__getDjclxxResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__getDjclxxResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__getDjclxxResponse(soap*, ns1__getDjclxxResponse*) deserialize from a stream
/// - int soap_write_ns1__getDjclxxResponse(soap, ns1__getDjclxxResponse*) serialize to a stream
class ns1__getDjclxxResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":obdJgsj is a complexType.
///
/// class ns1__obdJgsj operations:
/// - soap_new_ns1__obdJgsj(soap*) allocate
/// - soap_new_ns1__obdJgsj(soap*, int num) allocate array
/// - soap_new_req_ns1__obdJgsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__obdJgsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__obdJgsj(soap*, ns1__obdJgsj*) deserialize from a stream
/// - int soap_write_ns1__obdJgsj(soap, ns1__obdJgsj*) serialize to a stream
class ns1__obdJgsj
{ public:
/// Element "clsbm" of XSD type xs:string.
    std::wstring*                        clsbm                          0;	///< Optional element.
/// Element "obdzsbz" of XSD type xs:string.
    std::wstring*                        obdzsbz                        0;	///< Optional element.
/// Element "clxslc" of XSD type xs:int.
    int                                  clxslc                         1;	///< Required element.
/// Element "fdjkzdycid" of XSD type xs:string.
    std::wstring*                        fdjkzdycid                     0;	///< Optional element.
/// Element "fdjkzdycvn" of XSD type xs:string.
    std::wstring*                        fdjkzdycvn                     0;	///< Optional element.
/// Element "hclkzdycid" of XSD type xs:string.
    std::wstring*                        hclkzdycid                     0;	///< Optional element.
/// Element "hclkzdycvn" of XSD type xs:string.
    std::wstring*                        hclkzdycvn                     0;	///< Optional element.
/// Element "qtkzdycid" of XSD type xs:string.
    std::wstring*                        qtkzdycid                      0;	///< Optional element.
/// Element "qtkzdycvn" of XSD type xs:string.
    std::wstring*                        qtkzdycvn                      0;	///< Optional element.
/// Element "obdgzzsq" of XSD type xs:string.
    std::wstring*                        obdgzzsq                       0;	///< Optional element.
/// Element "obdtxqk" of XSD type xs:string.
    std::wstring*                        obdtxqk                        0;	///< Optional element.
/// Element "obdzzqsfdl" of XSD type xs:string.
    std::wstring*                        obdzzqsfdl                     0;	///< Optional element.
/// Element "obdjxzt" of XSD type xs:string.
    std::wstring*                        obdjxzt                        0;	///< Optional element.
/// Element "obdjcjg" of XSD type xs:string.
    std::wstring*                        obdjcjg                        0;	///< Optional element.
/// Element "obdgzxx" of XSD type xs:string.
    std::wstring*                        obdgzxx                        0;	///< Optional element.
/// Element "jyymc" of XSD type xs:string.
    std::wstring*                        jyymc                          0;	///< Optional element.
/// Element "jckssj" of XSD type xs:string.
    std::wstring*                        jckssj                         0;	///< Optional element.
/// Element "jcjssj" of XSD type xs:string.
    std::wstring*                        jcjssj                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":obdJgsjResponse is a complexType.
///
/// class ns1__obdJgsjResponse operations:
/// - soap_new_ns1__obdJgsjResponse(soap*) allocate
/// - soap_new_ns1__obdJgsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__obdJgsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__obdJgsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__obdJgsjResponse(soap*, ns1__obdJgsjResponse*) deserialize from a stream
/// - int soap_write_ns1__obdJgsjResponse(soap, ns1__obdJgsjResponse*) serialize to a stream
class ns1__obdJgsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":getAccessToken is a complexType.
///
/// class ns1__getAccessToken operations:
/// - soap_new_ns1__getAccessToken(soap*) allocate
/// - soap_new_ns1__getAccessToken(soap*, int num) allocate array
/// - soap_new_req_ns1__getAccessToken(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__getAccessToken(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__getAccessToken(soap*, ns1__getAccessToken*) deserialize from a stream
/// - int soap_write_ns1__getAccessToken(soap, ns1__getAccessToken*) serialize to a stream
class ns1__getAccessToken
{ public:
/// Element "jcxbh" of XSD type xs:string.
    std::wstring*                        jcxbh                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":getAccessTokenResponse is a complexType.
///
/// class ns1__getAccessTokenResponse operations:
/// - soap_new_ns1__getAccessTokenResponse(soap*) allocate
/// - soap_new_ns1__getAccessTokenResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__getAccessTokenResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__getAccessTokenResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__getAccessTokenResponse(soap*, ns1__getAccessTokenResponse*) deserialize from a stream
/// - int soap_write_ns1__getAccessTokenResponse(soap, ns1__getAccessTokenResponse*) serialize to a stream
class ns1__getAccessTokenResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":getDjlb is a complexType.
///
/// class ns1__getDjlb operations:
/// - soap_new_ns1__getDjlb(soap*) allocate
/// - soap_new_ns1__getDjlb(soap*, int num) allocate array
/// - soap_new_req_ns1__getDjlb(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__getDjlb(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__getDjlb(soap*, ns1__getDjlb*) deserialize from a stream
/// - int soap_write_ns1__getDjlb(soap, ns1__getDjlb*) serialize to a stream
class ns1__getDjlb
{ public:
/// Element "jczbh" of XSD type xs:string.
    std::wstring*                        jczbh                          0;	///< Optional element.
/// Element "cphm" of XSD type xs:string.
    std::wstring*                        cphm                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":getDjlbResponse is a complexType.
///
/// class ns1__getDjlbResponse operations:
/// - soap_new_ns1__getDjlbResponse(soap*) allocate
/// - soap_new_ns1__getDjlbResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__getDjlbResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__getDjlbResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__getDjlbResponse(soap*, ns1__getDjlbResponse*) deserialize from a stream
/// - int soap_write_ns1__getDjlbResponse(soap, ns1__getDjlbResponse*) serialize to a stream
class ns1__getDjlbResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":wtJgsj is a complexType.
///
/// class ns1__wtJgsj operations:
/// - soap_new_ns1__wtJgsj(soap*) allocate
/// - soap_new_ns1__wtJgsj(soap*, int num) allocate array
/// - soap_new_req_ns1__wtJgsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__wtJgsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__wtJgsj(soap*, ns1__wtJgsj*) deserialize from a stream
/// - int soap_write_ns1__wtJgsj(soap, ns1__wtJgsj*) serialize to a stream
class ns1__wtJgsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "hc5025" of XSD type xs:double.
    double                               hc5025                         1;	///< Required element.
/// Element "co5025" of XSD type xs:double.
    double                               co5025                         1;	///< Required element.
/// Element "no5025" of XSD type xs:double.
    double                               no5025                         1;	///< Required element.
/// Element "fdjzs5025" of XSD type xs:double.
    double                               fdjzs5025                      1;	///< Required element.
/// Element "fdjyw5025" of XSD type xs:double.
    double                               fdjyw5025                      1;	///< Required element.
/// Element "pjcs5025" of XSD type xs:double.
    double                               pjcs5025                       1;	///< Required element.
/// Element "zgl5025" of XSD type xs:double.
    double                               zgl5025                        1;	///< Required element.
/// Element "hc2540" of XSD type xs:double.
    double                               hc2540                         1;	///< Required element.
/// Element "co2540" of XSD type xs:double.
    double                               co2540                         1;	///< Required element.
/// Element "no2540" of XSD type xs:double.
    double                               no2540                         1;	///< Required element.
/// Element "fdjzs2540" of XSD type xs:double.
    double                               fdjzs2540                      1;	///< Required element.
/// Element "fdjyw2540" of XSD type xs:double.
    double                               fdjyw2540                      1;	///< Required element.
/// Element "pjcs2540" of XSD type xs:double.
    double                               pjcs2540                       1;	///< Required element.
/// Element "zgl2540" of XSD type xs:double.
    double                               zgl2540                        1;	///< Required element.
/// Element "glkqxs" of XSD type xs:double.
    double                               glkqxs                         1;	///< Required element.
/// Element "wd" of XSD type xs:double.
    double                               wd                             1;	///< Required element.
/// Element "sd" of XSD type xs:double.
    double                               sd                             1;	///< Required element.
/// Element "dqy" of XSD type xs:double.
    double                               dqy                            1;	///< Required element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":wtJgsjResponse is a complexType.
///
/// class ns1__wtJgsjResponse operations:
/// - soap_new_ns1__wtJgsjResponse(soap*) allocate
/// - soap_new_ns1__wtJgsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__wtJgsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__wtJgsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__wtJgsjResponse(soap*, ns1__wtJgsjResponse*) deserialize from a stream
/// - int soap_write_ns1__wtJgsjResponse(soap, ns1__wtJgsjResponse*) serialize to a stream
class ns1__wtJgsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":lgmhdGcsj is a complexType.
///
/// class ns1__lgmhdGcsj operations:
/// - soap_new_ns1__lgmhdGcsj(soap*) allocate
/// - soap_new_ns1__lgmhdGcsj(soap*, int num) allocate array
/// - soap_new_req_ns1__lgmhdGcsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__lgmhdGcsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__lgmhdGcsj(soap*, ns1__lgmhdGcsj*) deserialize from a stream
/// - int soap_write_ns1__lgmhdGcsj(soap, ns1__lgmhdGcsj*) serialize to a stream
class ns1__lgmhdGcsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "qssx" of XSD type xs:string.
    std::wstring*                        qssx                           0;	///< Optional element.
/// Element "jcsxh" of XSD type xs:int.
    int                                  jcsxh                          1;	///< Required element.
/// Element "lgmhd" of XSD type xs:double.
    double                               lgmhd                          1;	///< Required element.
/// Element "fdjzs" of XSD type xs:double.
    double                               fdjzs                          1;	///< Required element.
/// Element "wd" of XSD type xs:double.
    double                               wd                             1;	///< Required element.
/// Element "sd" of XSD type xs:double.
    double                               sd                             1;	///< Required element.
/// Element "dqy" of XSD type xs:double.
    double                               dqy                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":lgmhdGcsjResponse is a complexType.
///
/// class ns1__lgmhdGcsjResponse operations:
/// - soap_new_ns1__lgmhdGcsjResponse(soap*) allocate
/// - soap_new_ns1__lgmhdGcsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__lgmhdGcsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__lgmhdGcsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__lgmhdGcsjResponse(soap*, ns1__lgmhdGcsjResponse*) deserialize from a stream
/// - int soap_write_ns1__lgmhdGcsjResponse(soap, ns1__lgmhdGcsjResponse*) serialize to a stream
class ns1__lgmhdGcsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":getDjzt is a complexType.
///
/// class ns1__getDjzt operations:
/// - soap_new_ns1__getDjzt(soap*) allocate
/// - soap_new_ns1__getDjzt(soap*, int num) allocate array
/// - soap_new_req_ns1__getDjzt(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__getDjzt(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__getDjzt(soap*, ns1__getDjzt*) deserialize from a stream
/// - int soap_write_ns1__getDjzt(soap, ns1__getDjzt*) serialize to a stream
class ns1__getDjzt
{ public:
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":getDjztResponse is a complexType.
///
/// class ns1__getDjztResponse operations:
/// - soap_new_ns1__getDjztResponse(soap*) allocate
/// - soap_new_ns1__getDjztResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__getDjztResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__getDjztResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__getDjztResponse(soap*, ns1__getDjztResponse*) deserialize from a stream
/// - int soap_write_ns1__getDjztResponse(soap, ns1__getDjztResponse*) serialize to a stream
class ns1__getDjztResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":qycObdIupr is a complexType.
///
/// class ns1__qycObdIupr operations:
/// - soap_new_ns1__qycObdIupr(soap*) allocate
/// - soap_new_ns1__qycObdIupr(soap*, int num) allocate array
/// - soap_new_req_ns1__qycObdIupr(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__qycObdIupr(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__qycObdIupr(soap*, ns1__qycObdIupr*) deserialize from a stream
/// - int soap_write_ns1__qycObdIupr(soap, ns1__qycObdIupr*) serialize to a stream
class ns1__qycObdIupr
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "chqz1jccs" of XSD type xs:int.
    int                                  chqz1jccs                      1;	///< Required element.
/// Element "chqz1fhtjcs" of XSD type xs:int.
    int                                  chqz1fhtjcs                    1;	///< Required element.
/// Element "chqz1iuprl" of XSD type xs:double.
    double                               chqz1iuprl                     1;	///< Required element.
/// Element "chqz2jccs" of XSD type xs:int.
    int                                  chqz2jccs                      1;	///< Required element.
/// Element "chqz2fhtjcs" of XSD type xs:int.
    int                                  chqz2fhtjcs                    1;	///< Required element.
/// Element "chqz2iuprl" of XSD type xs:double.
    double                               chqz2iuprl                     1;	///< Required element.
/// Element "qycgqz1jccs" of XSD type xs:int.
    int                                  qycgqz1jccs                    1;	///< Required element.
/// Element "qycgqz1fhtjcs" of XSD type xs:int.
    int                                  qycgqz1fhtjcs                  1;	///< Required element.
/// Element "qycgqz1iuprl" of XSD type xs:double.
    double                               qycgqz1iuprl                   1;	///< Required element.
/// Element "qycgqz2jccs" of XSD type xs:int.
    int                                  qycgqz2jccs                    1;	///< Required element.
/// Element "qycgqz2fhtjcs" of XSD type xs:int.
    int                                  qycgqz2fhtjcs                  1;	///< Required element.
/// Element "qycgqz2iuprl" of XSD type xs:double.
    double                               qycgqz2iuprl                   1;	///< Required element.
/// Element "hycgqz1jccs" of XSD type xs:int.
    int                                  hycgqz1jccs                    1;	///< Required element.
/// Element "hycgqz1fhtjcs" of XSD type xs:int.
    int                                  hycgqz1fhtjcs                  1;	///< Required element.
/// Element "hycgqz1iuprl" of XSD type xs:double.
    double                               hycgqz1iuprl                   1;	///< Required element.
/// Element "hycgqz2jccs" of XSD type xs:int.
    int                                  hycgqz2jccs                    1;	///< Required element.
/// Element "hycgqz2fhtjcs" of XSD type xs:int.
    int                                  hycgqz2fhtjcs                  1;	///< Required element.
/// Element "hycgqz2iuprl" of XSD type xs:double.
    double                               hycgqz2iuprl                   1;	///< Required element.
/// Element "evapjccs" of XSD type xs:int.
    int                                  evapjccs                       1;	///< Required element.
/// Element "evapfhtjcs" of XSD type xs:int.
    int                                  evapfhtjcs                     1;	///< Required element.
/// Element "evapiuprl" of XSD type xs:double.
    double                               evapiuprl                      1;	///< Required element.
/// Element "egrvvtjccs" of XSD type xs:int.
    int                                  egrvvtjccs                     1;	///< Required element.
/// Element "egrvvtfhtjcs" of XSD type xs:int.
    int                                  egrvvtfhtjcs                   1;	///< Required element.
/// Element "egrvvtiuprl" of XSD type xs:double.
    double                               egrvvtiuprl                    1;	///< Required element.
/// Element "gpfz1jccs" of XSD type xs:int.
    int                                  gpfz1jccs                      1;	///< Required element.
/// Element "gpfz1fhtjcs" of XSD type xs:int.
    int                                  gpfz1fhtjcs                    1;	///< Required element.
/// Element "gpfz1iuprl" of XSD type xs:double.
    double                               gpfz1iuprl                     1;	///< Required element.
/// Element "gpfz2jccs" of XSD type xs:int.
    int                                  gpfz2jccs                      1;	///< Required element.
/// Element "gpfz2fhtjcs" of XSD type xs:int.
    int                                  gpfz2fhtjcs                    1;	///< Required element.
/// Element "gpfz2iuprl" of XSD type xs:double.
    double                               gpfz2iuprl                     1;	///< Required element.
/// Element "eckqpsxtjccs" of XSD type xs:int.
    int                                  eckqpsxtjccs                   1;	///< Required element.
/// Element "eckqpsxtfhtjcs" of XSD type xs:int.
    int                                  eckqpsxtfhtjcs                 1;	///< Required element.
/// Element "eckqpsxtiuprl" of XSD type xs:double.
    double                               eckqpsxtiuprl                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":qycObdIuprResponse is a complexType.
///
/// class ns1__qycObdIuprResponse operations:
/// - soap_new_ns1__qycObdIuprResponse(soap*) allocate
/// - soap_new_ns1__qycObdIuprResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__qycObdIuprResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__qycObdIuprResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__qycObdIuprResponse(soap*, ns1__qycObdIuprResponse*) deserialize from a stream
/// - int soap_write_ns1__qycObdIuprResponse(soap, ns1__qycObdIuprResponse*) serialize to a stream
class ns1__qycObdIuprResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":ydjzj is a complexType.
///
/// class ns1__ydjzj operations:
/// - soap_new_ns1__ydjzj(soap*) allocate
/// - soap_new_ns1__ydjzj(soap*, int num) allocate array
/// - soap_new_req_ns1__ydjzj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ydjzj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ydjzj(soap*, ns1__ydjzj*) deserialize from a stream
/// - int soap_write_ns1__ydjzj(soap, ns1__ydjzj*) serialize to a stream
class ns1__ydjzj
{ public:
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "ldjcjg" of XSD type xs:string.
    std::wstring*                        ldjcjg                         0;	///< Optional element.
/// Element "lgpz1" of XSD type xs:double.
    double                               lgpz1                          1;	///< Required element.
/// Element "lgpz2" of XSD type xs:double.
    double                               lgpz2                          1;	///< Required element.
/// Element "jcz1" of XSD type xs:double.
    double                               jcz1                           1;	///< Required element.
/// Element "jcz2" of XSD type xs:double.
    double                               jcz2                           1;	///< Required element.
/// Element "wcl1" of XSD type xs:double.
    double                               wcl1                           1;	///< Required element.
/// Element "wcl2" of XSD type xs:double.
    double                               wcl2                           1;	///< Required element.
/// Element "jcjg" of XSD type xs:string.
    std::wstring*                        jcjg                           0;	///< Optional element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// Element "bz" of XSD type xs:string.
    std::wstring*                        bz                             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":ydjzjResponse is a complexType.
///
/// class ns1__ydjzjResponse operations:
/// - soap_new_ns1__ydjzjResponse(soap*) allocate
/// - soap_new_ns1__ydjzjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ydjzjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ydjzjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ydjzjResponse(soap*, ns1__ydjzjResponse*) deserialize from a stream
/// - int soap_write_ns1__ydjzjResponse(soap, ns1__ydjzjResponse*) serialize to a stream
class ns1__ydjzjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":lgmhdJgsj is a complexType.
///
/// class ns1__lgmhdJgsj operations:
/// - soap_new_ns1__lgmhdJgsj(soap*) allocate
/// - soap_new_ns1__lgmhdJgsj(soap*, int num) allocate array
/// - soap_new_req_ns1__lgmhdJgsj(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__lgmhdJgsj(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__lgmhdJgsj(soap*, ns1__lgmhdJgsj*) deserialize from a stream
/// - int soap_write_ns1__lgmhdJgsj(soap, ns1__lgmhdJgsj*) serialize to a stream
class ns1__lgmhdJgsj
{ public:
/// Element "lsh" of XSD type xs:string.
    std::wstring*                        lsh                            0;	///< Optional element.
/// Element "accessToken" of XSD type xs:string.
    std::wstring*                        accessToken                    0;	///< Optional element.
/// Element "lgmhd" of XSD type xs:double.
    double                               lgmhd                          1;	///< Required element.
/// Element "fdjzs" of XSD type xs:double.
    double                               fdjzs                          1;	///< Required element.
/// Element "wd" of XSD type xs:double.
    double                               wd                             1;	///< Required element.
/// Element "sd" of XSD type xs:double.
    double                               sd                             1;	///< Required element.
/// Element "dqy" of XSD type xs:double.
    double                               dqy                            1;	///< Required element.
/// Element "kssj" of XSD type xs:string.
    std::wstring*                        kssj                           0;	///< Optional element.
/// Element "jssj" of XSD type xs:string.
    std::wstring*                        jssj                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://www.wdkj.com/":lgmhdJgsjResponse is a complexType.
///
/// class ns1__lgmhdJgsjResponse operations:
/// - soap_new_ns1__lgmhdJgsjResponse(soap*) allocate
/// - soap_new_ns1__lgmhdJgsjResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__lgmhdJgsjResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__lgmhdJgsjResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__lgmhdJgsjResponse(soap*, ns1__lgmhdJgsjResponse*) deserialize from a stream
/// - int soap_write_ns1__lgmhdJgsjResponse(soap, ns1__lgmhdJgsjResponse*) serialize to a stream
class ns1__lgmhdJgsjResponse
{ public:
/// Element "return" of XSD type xs:string.
    std::wstring*                        return_                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.wdkj.com/                                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.wdkj.com/":btgGcsj of XSD type "http://www.wdkj.com/":btgGcsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":btgGcsjResponse of XSD type "http://www.wdkj.com/":btgGcsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":btgJgsj of XSD type "http://www.wdkj.com/":btgJgsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":btgJgsjResponse of XSD type "http://www.wdkj.com/":btgJgsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":cgjzj of XSD type "http://www.wdkj.com/":cgjzj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":cgjzjResponse of XSD type "http://www.wdkj.com/":cgjzjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":cycObdIupr of XSD type "http://www.wdkj.com/":cycObdIupr.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":cycObdIuprResponse of XSD type "http://www.wdkj.com/":cycObdIuprResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":fwqsjtb of XSD type "http://www.wdkj.com/":fwqsjtb.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":fwqsjtbResponse of XSD type "http://www.wdkj.com/":fwqsjtbResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":getAccessToken of XSD type "http://www.wdkj.com/":getAccessToken.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":getAccessTokenResponse of XSD type "http://www.wdkj.com/":getAccessTokenResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":getDjclxx of XSD type "http://www.wdkj.com/":getDjclxx.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":getDjclxxResponse of XSD type "http://www.wdkj.com/":getDjclxxResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":getDjlb of XSD type "http://www.wdkj.com/":getDjlb.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":getDjlbResponse of XSD type "http://www.wdkj.com/":getDjlbResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":getDjzt of XSD type "http://www.wdkj.com/":getDjzt.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":getDjztResponse of XSD type "http://www.wdkj.com/":getDjztResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":gkrjbbh of XSD type "http://www.wdkj.com/":gkrjbbh.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":gkrjbbhResponse of XSD type "http://www.wdkj.com/":gkrjbbhResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":hjcsyzj of XSD type "http://www.wdkj.com/":hjcsyzj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":hjcsyzjResponse of XSD type "http://www.wdkj.com/":hjcsyzjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":jystGcsj of XSD type "http://www.wdkj.com/":jystGcsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":jystGcsjResponse of XSD type "http://www.wdkj.com/":jystGcsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":jystJgsj of XSD type "http://www.wdkj.com/":jystJgsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":jystJgsjResponse of XSD type "http://www.wdkj.com/":jystJgsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":jzjsGcsj of XSD type "http://www.wdkj.com/":jzjsGcsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":jzjsGcsjResponse of XSD type "http://www.wdkj.com/":jzjsGcsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":jzjsJgsj of XSD type "http://www.wdkj.com/":jzjsJgsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":jzjsJgsjResponse of XSD type "http://www.wdkj.com/":jzjsJgsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":lgmhdGcsj of XSD type "http://www.wdkj.com/":lgmhdGcsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":lgmhdGcsjResponse of XSD type "http://www.wdkj.com/":lgmhdGcsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":lgmhdJgsj of XSD type "http://www.wdkj.com/":lgmhdJgsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":lgmhdJgsjResponse of XSD type "http://www.wdkj.com/":lgmhdJgsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":lljzj of XSD type "http://www.wdkj.com/":lljzj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":lljzjResponse of XSD type "http://www.wdkj.com/":lljzjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":obdGcsj of XSD type "http://www.wdkj.com/":obdGcsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":obdGcsjResponse of XSD type "http://www.wdkj.com/":obdGcsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":obdJgsj of XSD type "http://www.wdkj.com/":obdJgsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":obdJgsjResponse of XSD type "http://www.wdkj.com/":obdJgsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":qycObdIupr of XSD type "http://www.wdkj.com/":qycObdIupr.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":qycObdIuprResponse of XSD type "http://www.wdkj.com/":qycObdIuprResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":ryzfJysj of XSD type "http://www.wdkj.com/":ryzfJysj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":ryzfJysjResponse of XSD type "http://www.wdkj.com/":ryzfJysjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":sdsGcsj of XSD type "http://www.wdkj.com/":sdsGcsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":sdsGcsjResponse of XSD type "http://www.wdkj.com/":sdsGcsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":sdsJgsj of XSD type "http://www.wdkj.com/":sdsJgsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":sdsJgsjResponse of XSD type "http://www.wdkj.com/":sdsJgsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":wgjcJgsj of XSD type "http://www.wdkj.com/":wgjcJgsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":wgjcJgsjResponse of XSD type "http://www.wdkj.com/":wgjcJgsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":wqfxybd of XSD type "http://www.wdkj.com/":wqfxybd.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":wqfxybdResponse of XSD type "http://www.wdkj.com/":wqfxybdResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":wqfxyzj of XSD type "http://www.wdkj.com/":wqfxyzj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":wqfxyzjResponse of XSD type "http://www.wdkj.com/":wqfxyzjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":wtGcsj of XSD type "http://www.wdkj.com/":wtGcsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":wtGcsjResponse of XSD type "http://www.wdkj.com/":wtGcsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":wtJgsj of XSD type "http://www.wdkj.com/":wtJgsj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":wtJgsjResponse of XSD type "http://www.wdkj.com/":wtJgsjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":xxtz of XSD type "http://www.wdkj.com/":xxtz.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":xxtzResponse of XSD type "http://www.wdkj.com/":xxtzResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":ydjzj of XSD type "http://www.wdkj.com/":ydjzj.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// @brief Top-level root element "http://www.wdkj.com/":ydjzjResponse of XSD type "http://www.wdkj.com/":ydjzjResponse.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.wdkj.com/                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	DeviceSwapIfaceImplServiceSoapBinding 
//gsoap ns1  service type:	DeviceSwapIface 
//gsoap ns1  service port:	http://10.202.58.241:8095/sjjk/services/sjjk 
//gsoap ns1  service namespace:	http://www.wdkj.com/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage DeviceSwapIfaceImplService Definitions

@section DeviceSwapIfaceImplService_bindings Service Bindings

  - @ref DeviceSwapIfaceImplServiceSoapBinding

@section DeviceSwapIfaceImplService_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page DeviceSwapIfaceImplServiceSoapBinding Binding "DeviceSwapIfaceImplServiceSoapBinding"

@section DeviceSwapIfaceImplServiceSoapBinding_operations Operations of Binding "DeviceSwapIfaceImplServiceSoapBinding"

  - @ref __ns1__xxtz

  - @ref __ns1__ryzfJysj

  - @ref __ns1__jzjsJgsj

  - @ref __ns1__hjcsyzj

  - @ref __ns1__wqfxyzj

  - @ref __ns1__sdsJgsj

  - @ref __ns1__lljzj

  - @ref __ns1__jystJgsj

  - @ref __ns1__sdsGcsj

  - @ref __ns1__cycObdIupr

  - @ref __ns1__jystGcsj

  - @ref __ns1__wqfxybd

  - @ref __ns1__btgJgsj

  - @ref __ns1__wgjcJgsj

  - @ref __ns1__btgGcsj

  - @ref __ns1__jzjsGcsj

  - @ref __ns1__gkrjbbh

  - @ref __ns1__obdGcsj

  - @ref __ns1__cgjzj

  - @ref __ns1__fwqsjtb

  - @ref __ns1__wtGcsj

  - @ref __ns1__getDjclxx

  - @ref __ns1__getAccessToken

  - @ref __ns1__obdJgsj

  - @ref __ns1__getDjlb

  - @ref __ns1__lgmhdGcsj

  - @ref __ns1__wtJgsj

  - @ref __ns1__getDjzt

  - @ref __ns1__qycObdIupr

  - @ref __ns1__ydjzj

  - @ref __ns1__lgmhdJgsj

@section DeviceSwapIfaceImplServiceSoapBinding_ports Endpoints of Binding "DeviceSwapIfaceImplServiceSoapBinding"

  - http://10.202.58.241:8095/sjjk/services/sjjk

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceSwapIfaceImplServiceSoapBinding                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__xxtz                                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__xxtz" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__xxtz(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__xxtz*                          ns1__xxtz_,
    // output parameters:
    ns1__xxtzResponse                  &ns1__xxtzResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__xxtz(
    struct soap *soap,
    // input parameters:
    ns1__xxtz*                          ns1__xxtz_,
    // output parameters:
    ns1__xxtzResponse                  &ns1__xxtzResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	xxtz SOAP
//gsoap ns1  service method-style:	xxtz document
//gsoap ns1  service method-encoding:	xxtz literal
//gsoap ns1  service method-action:	xxtz ""
//gsoap ns1  service method-output-action:	xxtz Response
int __ns1__xxtz(
    ns1__xxtz*                          ns1__xxtz_,	///< Input parameter
    ns1__xxtzResponse                  &ns1__xxtzResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ryzfJysj                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__ryzfJysj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ryzfJysj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ryzfJysj*                      ns1__ryzfJysj_,
    // output parameters:
    ns1__ryzfJysjResponse              &ns1__ryzfJysjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ryzfJysj(
    struct soap *soap,
    // input parameters:
    ns1__ryzfJysj*                      ns1__ryzfJysj_,
    // output parameters:
    ns1__ryzfJysjResponse              &ns1__ryzfJysjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ryzfJysj SOAP
//gsoap ns1  service method-style:	ryzfJysj document
//gsoap ns1  service method-encoding:	ryzfJysj literal
//gsoap ns1  service method-action:	ryzfJysj ""
//gsoap ns1  service method-output-action:	ryzfJysj Response
int __ns1__ryzfJysj(
    ns1__ryzfJysj*                      ns1__ryzfJysj_,	///< Input parameter
    ns1__ryzfJysjResponse              &ns1__ryzfJysjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__jzjsJgsj                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__jzjsJgsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__jzjsJgsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__jzjsJgsj*                      ns1__jzjsJgsj_,
    // output parameters:
    ns1__jzjsJgsjResponse              &ns1__jzjsJgsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__jzjsJgsj(
    struct soap *soap,
    // input parameters:
    ns1__jzjsJgsj*                      ns1__jzjsJgsj_,
    // output parameters:
    ns1__jzjsJgsjResponse              &ns1__jzjsJgsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	jzjsJgsj SOAP
//gsoap ns1  service method-style:	jzjsJgsj document
//gsoap ns1  service method-encoding:	jzjsJgsj literal
//gsoap ns1  service method-action:	jzjsJgsj ""
//gsoap ns1  service method-output-action:	jzjsJgsj Response
int __ns1__jzjsJgsj(
    ns1__jzjsJgsj*                      ns1__jzjsJgsj_,	///< Input parameter
    ns1__jzjsJgsjResponse              &ns1__jzjsJgsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__hjcsyzj                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__hjcsyzj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__hjcsyzj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__hjcsyzj*                       ns1__hjcsyzj_,
    // output parameters:
    ns1__hjcsyzjResponse               &ns1__hjcsyzjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__hjcsyzj(
    struct soap *soap,
    // input parameters:
    ns1__hjcsyzj*                       ns1__hjcsyzj_,
    // output parameters:
    ns1__hjcsyzjResponse               &ns1__hjcsyzjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	hjcsyzj SOAP
//gsoap ns1  service method-style:	hjcsyzj document
//gsoap ns1  service method-encoding:	hjcsyzj literal
//gsoap ns1  service method-action:	hjcsyzj ""
//gsoap ns1  service method-output-action:	hjcsyzj Response
int __ns1__hjcsyzj(
    ns1__hjcsyzj*                       ns1__hjcsyzj_,	///< Input parameter
    ns1__hjcsyzjResponse               &ns1__hjcsyzjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__wqfxyzj                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__wqfxyzj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__wqfxyzj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__wqfxyzj*                       ns1__wqfxyzj_,
    // output parameters:
    ns1__wqfxyzjResponse               &ns1__wqfxyzjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__wqfxyzj(
    struct soap *soap,
    // input parameters:
    ns1__wqfxyzj*                       ns1__wqfxyzj_,
    // output parameters:
    ns1__wqfxyzjResponse               &ns1__wqfxyzjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	wqfxyzj SOAP
//gsoap ns1  service method-style:	wqfxyzj document
//gsoap ns1  service method-encoding:	wqfxyzj literal
//gsoap ns1  service method-action:	wqfxyzj ""
//gsoap ns1  service method-output-action:	wqfxyzj Response
int __ns1__wqfxyzj(
    ns1__wqfxyzj*                       ns1__wqfxyzj_,	///< Input parameter
    ns1__wqfxyzjResponse               &ns1__wqfxyzjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__sdsJgsj                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__sdsJgsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__sdsJgsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__sdsJgsj*                       ns1__sdsJgsj_,
    // output parameters:
    ns1__sdsJgsjResponse               &ns1__sdsJgsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__sdsJgsj(
    struct soap *soap,
    // input parameters:
    ns1__sdsJgsj*                       ns1__sdsJgsj_,
    // output parameters:
    ns1__sdsJgsjResponse               &ns1__sdsJgsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	sdsJgsj SOAP
//gsoap ns1  service method-style:	sdsJgsj document
//gsoap ns1  service method-encoding:	sdsJgsj literal
//gsoap ns1  service method-action:	sdsJgsj ""
//gsoap ns1  service method-output-action:	sdsJgsj Response
int __ns1__sdsJgsj(
    ns1__sdsJgsj*                       ns1__sdsJgsj_,	///< Input parameter
    ns1__sdsJgsjResponse               &ns1__sdsJgsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__lljzj                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__lljzj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__lljzj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__lljzj*                         ns1__lljzj_,
    // output parameters:
    ns1__lljzjResponse                 &ns1__lljzjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__lljzj(
    struct soap *soap,
    // input parameters:
    ns1__lljzj*                         ns1__lljzj_,
    // output parameters:
    ns1__lljzjResponse                 &ns1__lljzjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	lljzj SOAP
//gsoap ns1  service method-style:	lljzj document
//gsoap ns1  service method-encoding:	lljzj literal
//gsoap ns1  service method-action:	lljzj ""
//gsoap ns1  service method-output-action:	lljzj Response
int __ns1__lljzj(
    ns1__lljzj*                         ns1__lljzj_,	///< Input parameter
    ns1__lljzjResponse                 &ns1__lljzjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__jystJgsj                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__jystJgsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__jystJgsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__jystJgsj*                      ns1__jystJgsj_,
    // output parameters:
    ns1__jystJgsjResponse              &ns1__jystJgsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__jystJgsj(
    struct soap *soap,
    // input parameters:
    ns1__jystJgsj*                      ns1__jystJgsj_,
    // output parameters:
    ns1__jystJgsjResponse              &ns1__jystJgsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	jystJgsj SOAP
//gsoap ns1  service method-style:	jystJgsj document
//gsoap ns1  service method-encoding:	jystJgsj literal
//gsoap ns1  service method-action:	jystJgsj ""
//gsoap ns1  service method-output-action:	jystJgsj Response
int __ns1__jystJgsj(
    ns1__jystJgsj*                      ns1__jystJgsj_,	///< Input parameter
    ns1__jystJgsjResponse              &ns1__jystJgsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__sdsGcsj                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__sdsGcsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__sdsGcsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__sdsGcsj*                       ns1__sdsGcsj_,
    // output parameters:
    ns1__sdsGcsjResponse               &ns1__sdsGcsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__sdsGcsj(
    struct soap *soap,
    // input parameters:
    ns1__sdsGcsj*                       ns1__sdsGcsj_,
    // output parameters:
    ns1__sdsGcsjResponse               &ns1__sdsGcsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	sdsGcsj SOAP
//gsoap ns1  service method-style:	sdsGcsj document
//gsoap ns1  service method-encoding:	sdsGcsj literal
//gsoap ns1  service method-action:	sdsGcsj ""
//gsoap ns1  service method-output-action:	sdsGcsj Response
int __ns1__sdsGcsj(
    ns1__sdsGcsj*                       ns1__sdsGcsj_,	///< Input parameter
    ns1__sdsGcsjResponse               &ns1__sdsGcsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__cycObdIupr                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__cycObdIupr" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__cycObdIupr(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__cycObdIupr*                    ns1__cycObdIupr_,
    // output parameters:
    ns1__cycObdIuprResponse            &ns1__cycObdIuprResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__cycObdIupr(
    struct soap *soap,
    // input parameters:
    ns1__cycObdIupr*                    ns1__cycObdIupr_,
    // output parameters:
    ns1__cycObdIuprResponse            &ns1__cycObdIuprResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	cycObdIupr SOAP
//gsoap ns1  service method-style:	cycObdIupr document
//gsoap ns1  service method-encoding:	cycObdIupr literal
//gsoap ns1  service method-action:	cycObdIupr ""
//gsoap ns1  service method-output-action:	cycObdIupr Response
int __ns1__cycObdIupr(
    ns1__cycObdIupr*                    ns1__cycObdIupr_,	///< Input parameter
    ns1__cycObdIuprResponse            &ns1__cycObdIuprResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__jystGcsj                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__jystGcsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__jystGcsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__jystGcsj*                      ns1__jystGcsj_,
    // output parameters:
    ns1__jystGcsjResponse              &ns1__jystGcsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__jystGcsj(
    struct soap *soap,
    // input parameters:
    ns1__jystGcsj*                      ns1__jystGcsj_,
    // output parameters:
    ns1__jystGcsjResponse              &ns1__jystGcsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	jystGcsj SOAP
//gsoap ns1  service method-style:	jystGcsj document
//gsoap ns1  service method-encoding:	jystGcsj literal
//gsoap ns1  service method-action:	jystGcsj ""
//gsoap ns1  service method-output-action:	jystGcsj Response
int __ns1__jystGcsj(
    ns1__jystGcsj*                      ns1__jystGcsj_,	///< Input parameter
    ns1__jystGcsjResponse              &ns1__jystGcsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__wqfxybd                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__wqfxybd" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__wqfxybd(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__wqfxybd*                       ns1__wqfxybd_,
    // output parameters:
    ns1__wqfxybdResponse               &ns1__wqfxybdResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__wqfxybd(
    struct soap *soap,
    // input parameters:
    ns1__wqfxybd*                       ns1__wqfxybd_,
    // output parameters:
    ns1__wqfxybdResponse               &ns1__wqfxybdResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	wqfxybd SOAP
//gsoap ns1  service method-style:	wqfxybd document
//gsoap ns1  service method-encoding:	wqfxybd literal
//gsoap ns1  service method-action:	wqfxybd ""
//gsoap ns1  service method-output-action:	wqfxybd Response
int __ns1__wqfxybd(
    ns1__wqfxybd*                       ns1__wqfxybd_,	///< Input parameter
    ns1__wqfxybdResponse               &ns1__wqfxybdResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__btgJgsj                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__btgJgsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__btgJgsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__btgJgsj*                       ns1__btgJgsj_,
    // output parameters:
    ns1__btgJgsjResponse               &ns1__btgJgsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__btgJgsj(
    struct soap *soap,
    // input parameters:
    ns1__btgJgsj*                       ns1__btgJgsj_,
    // output parameters:
    ns1__btgJgsjResponse               &ns1__btgJgsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	btgJgsj SOAP
//gsoap ns1  service method-style:	btgJgsj document
//gsoap ns1  service method-encoding:	btgJgsj literal
//gsoap ns1  service method-action:	btgJgsj ""
//gsoap ns1  service method-output-action:	btgJgsj Response
int __ns1__btgJgsj(
    ns1__btgJgsj*                       ns1__btgJgsj_,	///< Input parameter
    ns1__btgJgsjResponse               &ns1__btgJgsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__wgjcJgsj                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__wgjcJgsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__wgjcJgsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__wgjcJgsj*                      ns1__wgjcJgsj_,
    // output parameters:
    ns1__wgjcJgsjResponse              &ns1__wgjcJgsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__wgjcJgsj(
    struct soap *soap,
    // input parameters:
    ns1__wgjcJgsj*                      ns1__wgjcJgsj_,
    // output parameters:
    ns1__wgjcJgsjResponse              &ns1__wgjcJgsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	wgjcJgsj SOAP
//gsoap ns1  service method-style:	wgjcJgsj document
//gsoap ns1  service method-encoding:	wgjcJgsj literal
//gsoap ns1  service method-action:	wgjcJgsj ""
//gsoap ns1  service method-output-action:	wgjcJgsj Response
int __ns1__wgjcJgsj(
    ns1__wgjcJgsj*                      ns1__wgjcJgsj_,	///< Input parameter
    ns1__wgjcJgsjResponse              &ns1__wgjcJgsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__btgGcsj                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__btgGcsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__btgGcsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__btgGcsj*                       ns1__btgGcsj_,
    // output parameters:
    ns1__btgGcsjResponse               &ns1__btgGcsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__btgGcsj(
    struct soap *soap,
    // input parameters:
    ns1__btgGcsj*                       ns1__btgGcsj_,
    // output parameters:
    ns1__btgGcsjResponse               &ns1__btgGcsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	btgGcsj SOAP
//gsoap ns1  service method-style:	btgGcsj document
//gsoap ns1  service method-encoding:	btgGcsj literal
//gsoap ns1  service method-action:	btgGcsj ""
//gsoap ns1  service method-output-action:	btgGcsj Response
int __ns1__btgGcsj(
    ns1__btgGcsj*                       ns1__btgGcsj_,	///< Input parameter
    ns1__btgGcsjResponse               &ns1__btgGcsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__jzjsGcsj                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__jzjsGcsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__jzjsGcsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__jzjsGcsj*                      ns1__jzjsGcsj_,
    // output parameters:
    ns1__jzjsGcsjResponse              &ns1__jzjsGcsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__jzjsGcsj(
    struct soap *soap,
    // input parameters:
    ns1__jzjsGcsj*                      ns1__jzjsGcsj_,
    // output parameters:
    ns1__jzjsGcsjResponse              &ns1__jzjsGcsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	jzjsGcsj SOAP
//gsoap ns1  service method-style:	jzjsGcsj document
//gsoap ns1  service method-encoding:	jzjsGcsj literal
//gsoap ns1  service method-action:	jzjsGcsj ""
//gsoap ns1  service method-output-action:	jzjsGcsj Response
int __ns1__jzjsGcsj(
    ns1__jzjsGcsj*                      ns1__jzjsGcsj_,	///< Input parameter
    ns1__jzjsGcsjResponse              &ns1__jzjsGcsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__gkrjbbh                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__gkrjbbh" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__gkrjbbh(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__gkrjbbh*                       ns1__gkrjbbh_,
    // output parameters:
    ns1__gkrjbbhResponse               &ns1__gkrjbbhResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__gkrjbbh(
    struct soap *soap,
    // input parameters:
    ns1__gkrjbbh*                       ns1__gkrjbbh_,
    // output parameters:
    ns1__gkrjbbhResponse               &ns1__gkrjbbhResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	gkrjbbh SOAP
//gsoap ns1  service method-style:	gkrjbbh document
//gsoap ns1  service method-encoding:	gkrjbbh literal
//gsoap ns1  service method-action:	gkrjbbh ""
//gsoap ns1  service method-output-action:	gkrjbbh Response
int __ns1__gkrjbbh(
    ns1__gkrjbbh*                       ns1__gkrjbbh_,	///< Input parameter
    ns1__gkrjbbhResponse               &ns1__gkrjbbhResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__obdGcsj                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__obdGcsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__obdGcsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__obdGcsj*                       ns1__obdGcsj_,
    // output parameters:
    ns1__obdGcsjResponse               &ns1__obdGcsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__obdGcsj(
    struct soap *soap,
    // input parameters:
    ns1__obdGcsj*                       ns1__obdGcsj_,
    // output parameters:
    ns1__obdGcsjResponse               &ns1__obdGcsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	obdGcsj SOAP
//gsoap ns1  service method-style:	obdGcsj document
//gsoap ns1  service method-encoding:	obdGcsj literal
//gsoap ns1  service method-action:	obdGcsj ""
//gsoap ns1  service method-output-action:	obdGcsj Response
int __ns1__obdGcsj(
    ns1__obdGcsj*                       ns1__obdGcsj_,	///< Input parameter
    ns1__obdGcsjResponse               &ns1__obdGcsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__cgjzj                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__cgjzj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__cgjzj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__cgjzj*                         ns1__cgjzj_,
    // output parameters:
    ns1__cgjzjResponse                 &ns1__cgjzjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__cgjzj(
    struct soap *soap,
    // input parameters:
    ns1__cgjzj*                         ns1__cgjzj_,
    // output parameters:
    ns1__cgjzjResponse                 &ns1__cgjzjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	cgjzj SOAP
//gsoap ns1  service method-style:	cgjzj document
//gsoap ns1  service method-encoding:	cgjzj literal
//gsoap ns1  service method-action:	cgjzj ""
//gsoap ns1  service method-output-action:	cgjzj Response
int __ns1__cgjzj(
    ns1__cgjzj*                         ns1__cgjzj_,	///< Input parameter
    ns1__cgjzjResponse                 &ns1__cgjzjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__fwqsjtb                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__fwqsjtb" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__fwqsjtb(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__fwqsjtb*                       ns1__fwqsjtb_,
    // output parameters:
    ns1__fwqsjtbResponse               &ns1__fwqsjtbResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__fwqsjtb(
    struct soap *soap,
    // input parameters:
    ns1__fwqsjtb*                       ns1__fwqsjtb_,
    // output parameters:
    ns1__fwqsjtbResponse               &ns1__fwqsjtbResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	fwqsjtb SOAP
//gsoap ns1  service method-style:	fwqsjtb document
//gsoap ns1  service method-encoding:	fwqsjtb literal
//gsoap ns1  service method-action:	fwqsjtb ""
//gsoap ns1  service method-output-action:	fwqsjtb Response
int __ns1__fwqsjtb(
    ns1__fwqsjtb*                       ns1__fwqsjtb_,	///< Input parameter
    ns1__fwqsjtbResponse               &ns1__fwqsjtbResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__wtGcsj                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__wtGcsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__wtGcsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__wtGcsj*                        ns1__wtGcsj_,
    // output parameters:
    ns1__wtGcsjResponse                &ns1__wtGcsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__wtGcsj(
    struct soap *soap,
    // input parameters:
    ns1__wtGcsj*                        ns1__wtGcsj_,
    // output parameters:
    ns1__wtGcsjResponse                &ns1__wtGcsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	wtGcsj SOAP
//gsoap ns1  service method-style:	wtGcsj document
//gsoap ns1  service method-encoding:	wtGcsj literal
//gsoap ns1  service method-action:	wtGcsj ""
//gsoap ns1  service method-output-action:	wtGcsj Response
int __ns1__wtGcsj(
    ns1__wtGcsj*                        ns1__wtGcsj_,	///< Input parameter
    ns1__wtGcsjResponse                &ns1__wtGcsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getDjclxx                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__getDjclxx" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getDjclxx(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__getDjclxx*                     ns1__getDjclxx_,
    // output parameters:
    ns1__getDjclxxResponse             &ns1__getDjclxxResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getDjclxx(
    struct soap *soap,
    // input parameters:
    ns1__getDjclxx*                     ns1__getDjclxx_,
    // output parameters:
    ns1__getDjclxxResponse             &ns1__getDjclxxResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getDjclxx SOAP
//gsoap ns1  service method-style:	getDjclxx document
//gsoap ns1  service method-encoding:	getDjclxx literal
//gsoap ns1  service method-action:	getDjclxx ""
//gsoap ns1  service method-output-action:	getDjclxx Response
int __ns1__getDjclxx(
    ns1__getDjclxx*                     ns1__getDjclxx_,	///< Input parameter
    ns1__getDjclxxResponse             &ns1__getDjclxxResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getAccessToken                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__getAccessToken" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getAccessToken(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__getAccessToken*                ns1__getAccessToken_,
    // output parameters:
    ns1__getAccessTokenResponse        &ns1__getAccessTokenResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getAccessToken(
    struct soap *soap,
    // input parameters:
    ns1__getAccessToken*                ns1__getAccessToken_,
    // output parameters:
    ns1__getAccessTokenResponse        &ns1__getAccessTokenResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getAccessToken SOAP
//gsoap ns1  service method-style:	getAccessToken document
//gsoap ns1  service method-encoding:	getAccessToken literal
//gsoap ns1  service method-action:	getAccessToken ""
//gsoap ns1  service method-output-action:	getAccessToken Response
int __ns1__getAccessToken(
    ns1__getAccessToken*                ns1__getAccessToken_,	///< Input parameter
    ns1__getAccessTokenResponse        &ns1__getAccessTokenResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__obdJgsj                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__obdJgsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__obdJgsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__obdJgsj*                       ns1__obdJgsj_,
    // output parameters:
    ns1__obdJgsjResponse               &ns1__obdJgsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__obdJgsj(
    struct soap *soap,
    // input parameters:
    ns1__obdJgsj*                       ns1__obdJgsj_,
    // output parameters:
    ns1__obdJgsjResponse               &ns1__obdJgsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	obdJgsj SOAP
//gsoap ns1  service method-style:	obdJgsj document
//gsoap ns1  service method-encoding:	obdJgsj literal
//gsoap ns1  service method-action:	obdJgsj ""
//gsoap ns1  service method-output-action:	obdJgsj Response
int __ns1__obdJgsj(
    ns1__obdJgsj*                       ns1__obdJgsj_,	///< Input parameter
    ns1__obdJgsjResponse               &ns1__obdJgsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getDjlb                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__getDjlb" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getDjlb(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__getDjlb*                       ns1__getDjlb_,
    // output parameters:
    ns1__getDjlbResponse               &ns1__getDjlbResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getDjlb(
    struct soap *soap,
    // input parameters:
    ns1__getDjlb*                       ns1__getDjlb_,
    // output parameters:
    ns1__getDjlbResponse               &ns1__getDjlbResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getDjlb SOAP
//gsoap ns1  service method-style:	getDjlb document
//gsoap ns1  service method-encoding:	getDjlb literal
//gsoap ns1  service method-action:	getDjlb ""
//gsoap ns1  service method-output-action:	getDjlb Response
int __ns1__getDjlb(
    ns1__getDjlb*                       ns1__getDjlb_,	///< Input parameter
    ns1__getDjlbResponse               &ns1__getDjlbResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__lgmhdGcsj                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__lgmhdGcsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__lgmhdGcsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__lgmhdGcsj*                     ns1__lgmhdGcsj_,
    // output parameters:
    ns1__lgmhdGcsjResponse             &ns1__lgmhdGcsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__lgmhdGcsj(
    struct soap *soap,
    // input parameters:
    ns1__lgmhdGcsj*                     ns1__lgmhdGcsj_,
    // output parameters:
    ns1__lgmhdGcsjResponse             &ns1__lgmhdGcsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	lgmhdGcsj SOAP
//gsoap ns1  service method-style:	lgmhdGcsj document
//gsoap ns1  service method-encoding:	lgmhdGcsj literal
//gsoap ns1  service method-action:	lgmhdGcsj ""
//gsoap ns1  service method-output-action:	lgmhdGcsj Response
int __ns1__lgmhdGcsj(
    ns1__lgmhdGcsj*                     ns1__lgmhdGcsj_,	///< Input parameter
    ns1__lgmhdGcsjResponse             &ns1__lgmhdGcsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__wtJgsj                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__wtJgsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__wtJgsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__wtJgsj*                        ns1__wtJgsj_,
    // output parameters:
    ns1__wtJgsjResponse                &ns1__wtJgsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__wtJgsj(
    struct soap *soap,
    // input parameters:
    ns1__wtJgsj*                        ns1__wtJgsj_,
    // output parameters:
    ns1__wtJgsjResponse                &ns1__wtJgsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	wtJgsj SOAP
//gsoap ns1  service method-style:	wtJgsj document
//gsoap ns1  service method-encoding:	wtJgsj literal
//gsoap ns1  service method-action:	wtJgsj ""
//gsoap ns1  service method-output-action:	wtJgsj Response
int __ns1__wtJgsj(
    ns1__wtJgsj*                        ns1__wtJgsj_,	///< Input parameter
    ns1__wtJgsjResponse                &ns1__wtJgsjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getDjzt                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__getDjzt" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getDjzt(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__getDjzt*                       ns1__getDjzt_,
    // output parameters:
    ns1__getDjztResponse               &ns1__getDjztResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getDjzt(
    struct soap *soap,
    // input parameters:
    ns1__getDjzt*                       ns1__getDjzt_,
    // output parameters:
    ns1__getDjztResponse               &ns1__getDjztResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	getDjzt SOAP
//gsoap ns1  service method-style:	getDjzt document
//gsoap ns1  service method-encoding:	getDjzt literal
//gsoap ns1  service method-action:	getDjzt ""
//gsoap ns1  service method-output-action:	getDjzt Response
int __ns1__getDjzt(
    ns1__getDjzt*                       ns1__getDjzt_,	///< Input parameter
    ns1__getDjztResponse               &ns1__getDjztResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__qycObdIupr                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__qycObdIupr" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__qycObdIupr(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__qycObdIupr*                    ns1__qycObdIupr_,
    // output parameters:
    ns1__qycObdIuprResponse            &ns1__qycObdIuprResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__qycObdIupr(
    struct soap *soap,
    // input parameters:
    ns1__qycObdIupr*                    ns1__qycObdIupr_,
    // output parameters:
    ns1__qycObdIuprResponse            &ns1__qycObdIuprResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	qycObdIupr SOAP
//gsoap ns1  service method-style:	qycObdIupr document
//gsoap ns1  service method-encoding:	qycObdIupr literal
//gsoap ns1  service method-action:	qycObdIupr ""
//gsoap ns1  service method-output-action:	qycObdIupr Response
int __ns1__qycObdIupr(
    ns1__qycObdIupr*                    ns1__qycObdIupr_,	///< Input parameter
    ns1__qycObdIuprResponse            &ns1__qycObdIuprResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ydjzj                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__ydjzj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ydjzj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__ydjzj*                         ns1__ydjzj_,
    // output parameters:
    ns1__ydjzjResponse                 &ns1__ydjzjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ydjzj(
    struct soap *soap,
    // input parameters:
    ns1__ydjzj*                         ns1__ydjzj_,
    // output parameters:
    ns1__ydjzjResponse                 &ns1__ydjzjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ydjzj SOAP
//gsoap ns1  service method-style:	ydjzj document
//gsoap ns1  service method-encoding:	ydjzj literal
//gsoap ns1  service method-action:	ydjzj ""
//gsoap ns1  service method-output-action:	ydjzj Response
int __ns1__ydjzj(
    ns1__ydjzj*                         ns1__ydjzj_,	///< Input parameter
    ns1__ydjzjResponse                 &ns1__ydjzjResponse_	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__lgmhdJgsj                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__lgmhdJgsj" of service binding "DeviceSwapIfaceImplServiceSoapBinding".

  - SOAP document/literal style messaging

  - Addressing input action: ""

  - Addressing output action: "Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__lgmhdJgsj(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    ns1__lgmhdJgsj*                     ns1__lgmhdJgsj_,
    // output parameters:
    ns1__lgmhdJgsjResponse             &ns1__lgmhdJgsjResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__lgmhdJgsj(
    struct soap *soap,
    // input parameters:
    ns1__lgmhdJgsj*                     ns1__lgmhdJgsj_,
    // output parameters:
    ns1__lgmhdJgsjResponse             &ns1__lgmhdJgsjResponse_
  );
@endcode

C++ proxy class (defined in soapDeviceSwapIfaceImplServiceSoapBindingProxy.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceSwapIfaceImplServiceSoapBindingService.h):
@code
  class DeviceSwapIfaceImplServiceSoapBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	lgmhdJgsj SOAP
//gsoap ns1  service method-style:	lgmhdJgsj document
//gsoap ns1  service method-encoding:	lgmhdJgsj literal
//gsoap ns1  service method-action:	lgmhdJgsj ""
//gsoap ns1  service method-output-action:	lgmhdJgsj Response
int __ns1__lgmhdJgsj(
    ns1__lgmhdJgsj*                     ns1__lgmhdJgsj_,	///< Input parameter
    ns1__lgmhdJgsjResponse             &ns1__lgmhdJgsjResponse_	///< Output parameter
);

/**

@page DeviceSwapIfaceImplServiceSoapBinding Binding "DeviceSwapIfaceImplServiceSoapBinding"

@section DeviceSwapIfaceImplServiceSoapBinding_policy_enablers Policy Enablers of Binding "DeviceSwapIfaceImplServiceSoapBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "http://www.wdkj.com/"

  - <btgGcsj> (use wsdl2h option -g to auto-generate)

  - <btgGcsjResponse> (use wsdl2h option -g to auto-generate)

  - <btgJgsj> (use wsdl2h option -g to auto-generate)

  - <btgJgsjResponse> (use wsdl2h option -g to auto-generate)

  - <cgjzj> (use wsdl2h option -g to auto-generate)

  - <cgjzjResponse> (use wsdl2h option -g to auto-generate)

  - <cycObdIupr> (use wsdl2h option -g to auto-generate)

  - <cycObdIuprResponse> (use wsdl2h option -g to auto-generate)

  - <fwqsjtb> (use wsdl2h option -g to auto-generate)

  - <fwqsjtbResponse> (use wsdl2h option -g to auto-generate)

  - <getAccessToken> (use wsdl2h option -g to auto-generate)

  - <getAccessTokenResponse> (use wsdl2h option -g to auto-generate)

  - <getDjclxx> (use wsdl2h option -g to auto-generate)

  - <getDjclxxResponse> (use wsdl2h option -g to auto-generate)

  - <getDjlb> (use wsdl2h option -g to auto-generate)

  - <getDjlbResponse> (use wsdl2h option -g to auto-generate)

  - <getDjzt> (use wsdl2h option -g to auto-generate)

  - <getDjztResponse> (use wsdl2h option -g to auto-generate)

  - <gkrjbbh> (use wsdl2h option -g to auto-generate)

  - <gkrjbbhResponse> (use wsdl2h option -g to auto-generate)

  - <hjcsyzj> (use wsdl2h option -g to auto-generate)

  - <hjcsyzjResponse> (use wsdl2h option -g to auto-generate)

  - <jystGcsj> (use wsdl2h option -g to auto-generate)

  - <jystGcsjResponse> (use wsdl2h option -g to auto-generate)

  - <jystJgsj> (use wsdl2h option -g to auto-generate)

  - <jystJgsjResponse> (use wsdl2h option -g to auto-generate)

  - <jzjsGcsj> (use wsdl2h option -g to auto-generate)

  - <jzjsGcsjResponse> (use wsdl2h option -g to auto-generate)

  - <jzjsJgsj> (use wsdl2h option -g to auto-generate)

  - <jzjsJgsjResponse> (use wsdl2h option -g to auto-generate)

  - <lgmhdGcsj> (use wsdl2h option -g to auto-generate)

  - <lgmhdGcsjResponse> (use wsdl2h option -g to auto-generate)

  - <lgmhdJgsj> (use wsdl2h option -g to auto-generate)

  - <lgmhdJgsjResponse> (use wsdl2h option -g to auto-generate)

  - <lljzj> (use wsdl2h option -g to auto-generate)

  - <lljzjResponse> (use wsdl2h option -g to auto-generate)

  - <obdGcsj> (use wsdl2h option -g to auto-generate)

  - <obdGcsjResponse> (use wsdl2h option -g to auto-generate)

  - <obdJgsj> (use wsdl2h option -g to auto-generate)

  - <obdJgsjResponse> (use wsdl2h option -g to auto-generate)

  - <qycObdIupr> (use wsdl2h option -g to auto-generate)

  - <qycObdIuprResponse> (use wsdl2h option -g to auto-generate)

  - <ryzfJysj> (use wsdl2h option -g to auto-generate)

  - <ryzfJysjResponse> (use wsdl2h option -g to auto-generate)

  - <sdsGcsj> (use wsdl2h option -g to auto-generate)

  - <sdsGcsjResponse> (use wsdl2h option -g to auto-generate)

  - <sdsJgsj> (use wsdl2h option -g to auto-generate)

  - <sdsJgsjResponse> (use wsdl2h option -g to auto-generate)

  - <wgjcJgsj> (use wsdl2h option -g to auto-generate)

  - <wgjcJgsjResponse> (use wsdl2h option -g to auto-generate)

  - <wqfxybd> (use wsdl2h option -g to auto-generate)

  - <wqfxybdResponse> (use wsdl2h option -g to auto-generate)

  - <wqfxyzj> (use wsdl2h option -g to auto-generate)

  - <wqfxyzjResponse> (use wsdl2h option -g to auto-generate)

  - <wtGcsj> (use wsdl2h option -g to auto-generate)

  - <wtGcsjResponse> (use wsdl2h option -g to auto-generate)

  - <wtJgsj> (use wsdl2h option -g to auto-generate)

  - <wtJgsjResponse> (use wsdl2h option -g to auto-generate)

  - <xxtz> (use wsdl2h option -g to auto-generate)

  - <xxtzResponse> (use wsdl2h option -g to auto-generate)

  - <ydjzj> (use wsdl2h option -g to auto-generate)

  - <ydjzjResponse> (use wsdl2h option -g to auto-generate)

*/

/* End of sjjk.h */
