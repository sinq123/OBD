/* soapGasServiceNewSoapProxy.cpp
   Generated by gSOAP 2.8.21 from GasServiceNew.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapGasServiceNewSoapProxy.h"

GasServiceNewSoapProxy::GasServiceNewSoapProxy()
{	GasServiceNewSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

GasServiceNewSoapProxy::GasServiceNewSoapProxy(const struct soap &_soap) : soap(_soap)
{ }

GasServiceNewSoapProxy::GasServiceNewSoapProxy(const char *url)
{	GasServiceNewSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

GasServiceNewSoapProxy::GasServiceNewSoapProxy(soap_mode iomode)
{	GasServiceNewSoapProxy_init(iomode, iomode);
}

GasServiceNewSoapProxy::GasServiceNewSoapProxy(const char *url, soap_mode iomode)
{	GasServiceNewSoapProxy_init(iomode, iomode);
	soap_endpoint = url;
}

GasServiceNewSoapProxy::GasServiceNewSoapProxy(soap_mode imode, soap_mode omode)
{	GasServiceNewSoapProxy_init(imode, omode);
}

GasServiceNewSoapProxy::~GasServiceNewSoapProxy()
{ }

void GasServiceNewSoapProxy::GasServiceNewSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://tempuri.org/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void GasServiceNewSoapProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void GasServiceNewSoapProxy::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	GasServiceNewSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void GasServiceNewSoapProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *GasServiceNewSoapProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *GasServiceNewSoapProxy::soap_fault()
{	return this->fault;
}

const char *GasServiceNewSoapProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *GasServiceNewSoapProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int GasServiceNewSoapProxy::soap_close_socket()
{	return soap_closesock(this);
}

int GasServiceNewSoapProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void GasServiceNewSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void GasServiceNewSoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *GasServiceNewSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int GasServiceNewSoapProxy::VehicleRegJudge(const char *endpoint, const char *soap_action, _ns1__VehicleRegJudge *ns1__VehicleRegJudge, _ns1__VehicleRegJudgeResponse &ns1__VehicleRegJudgeResponse)
{	struct soap *soap = this;
	struct __ns1__VehicleRegJudge soap_tmp___ns1__VehicleRegJudge;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/VehicleRegJudge";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__VehicleRegJudge.ns1__VehicleRegJudge = ns1__VehicleRegJudge;
	soap_serializeheader(soap);
	soap_serialize___ns1__VehicleRegJudge(soap, &soap_tmp___ns1__VehicleRegJudge);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__VehicleRegJudge(soap, &soap_tmp___ns1__VehicleRegJudge, "-ns1:VehicleRegJudge", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__VehicleRegJudge(soap, &soap_tmp___ns1__VehicleRegJudge, "-ns1:VehicleRegJudge", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__VehicleRegJudgeResponse)
		return soap_closesock(soap);
	ns1__VehicleRegJudgeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__VehicleRegJudgeResponse.soap_get(soap, "ns1:VehicleRegJudgeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::OnlineJudge(const char *endpoint, const char *soap_action, _ns1__OnlineJudge *ns1__OnlineJudge, _ns1__OnlineJudgeResponse &ns1__OnlineJudgeResponse)
{	struct soap *soap = this;
	struct __ns1__OnlineJudge soap_tmp___ns1__OnlineJudge;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/OnlineJudge";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__OnlineJudge.ns1__OnlineJudge = ns1__OnlineJudge;
	soap_serializeheader(soap);
	soap_serialize___ns1__OnlineJudge(soap, &soap_tmp___ns1__OnlineJudge);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OnlineJudge(soap, &soap_tmp___ns1__OnlineJudge, "-ns1:OnlineJudge", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OnlineJudge(soap, &soap_tmp___ns1__OnlineJudge, "-ns1:OnlineJudge", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__OnlineJudgeResponse)
		return soap_closesock(soap);
	ns1__OnlineJudgeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OnlineJudgeResponse.soap_get(soap, "ns1:OnlineJudgeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::AddCheckData(const char *endpoint, const char *soap_action, _ns1__AddCheckData *ns1__AddCheckData, _ns1__AddCheckDataResponse &ns1__AddCheckDataResponse)
{	struct soap *soap = this;
	struct __ns1__AddCheckData soap_tmp___ns1__AddCheckData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AddCheckData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddCheckData.ns1__AddCheckData = ns1__AddCheckData;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddCheckData(soap, &soap_tmp___ns1__AddCheckData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddCheckData(soap, &soap_tmp___ns1__AddCheckData, "-ns1:AddCheckData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddCheckData(soap, &soap_tmp___ns1__AddCheckData, "-ns1:AddCheckData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AddCheckDataResponse)
		return soap_closesock(soap);
	ns1__AddCheckDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddCheckDataResponse.soap_get(soap, "ns1:AddCheckDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::AddObdData(const char *endpoint, const char *soap_action, _ns1__AddObdData *ns1__AddObdData, _ns1__AddObdDataResponse &ns1__AddObdDataResponse)
{	struct soap *soap = this;
	struct __ns1__AddObdData soap_tmp___ns1__AddObdData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AddObdData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddObdData.ns1__AddObdData = ns1__AddObdData;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddObdData(soap, &soap_tmp___ns1__AddObdData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddObdData(soap, &soap_tmp___ns1__AddObdData, "-ns1:AddObdData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddObdData(soap, &soap_tmp___ns1__AddObdData, "-ns1:AddObdData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AddObdDataResponse)
		return soap_closesock(soap);
	ns1__AddObdDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddObdDataResponse.soap_get(soap, "ns1:AddObdDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::AddIuprData(const char *endpoint, const char *soap_action, _ns1__AddIuprData *ns1__AddIuprData, _ns1__AddIuprDataResponse &ns1__AddIuprDataResponse)
{	struct soap *soap = this;
	struct __ns1__AddIuprData soap_tmp___ns1__AddIuprData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AddIuprData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddIuprData.ns1__AddIuprData = ns1__AddIuprData;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddIuprData(soap, &soap_tmp___ns1__AddIuprData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddIuprData(soap, &soap_tmp___ns1__AddIuprData, "-ns1:AddIuprData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddIuprData(soap, &soap_tmp___ns1__AddIuprData, "-ns1:AddIuprData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AddIuprDataResponse)
		return soap_closesock(soap);
	ns1__AddIuprDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddIuprDataResponse.soap_get(soap, "ns1:AddIuprDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::RyzfControl(const char *endpoint, const char *soap_action, _ns1__RyzfControl *ns1__RyzfControl, _ns1__RyzfControlResponse &ns1__RyzfControlResponse)
{	struct soap *soap = this;
	struct __ns1__RyzfControl soap_tmp___ns1__RyzfControl;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/RyzfControl";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__RyzfControl.ns1__RyzfControl = ns1__RyzfControl;
	soap_serializeheader(soap);
	soap_serialize___ns1__RyzfControl(soap, &soap_tmp___ns1__RyzfControl);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__RyzfControl(soap, &soap_tmp___ns1__RyzfControl, "-ns1:RyzfControl", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__RyzfControl(soap, &soap_tmp___ns1__RyzfControl, "-ns1:RyzfControl", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RyzfControlResponse)
		return soap_closesock(soap);
	ns1__RyzfControlResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RyzfControlResponse.soap_get(soap, "ns1:RyzfControlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::AddVerify(const char *endpoint, const char *soap_action, _ns1__AddVerify *ns1__AddVerify, _ns1__AddVerifyResponse &ns1__AddVerifyResponse)
{	struct soap *soap = this;
	struct __ns1__AddVerify soap_tmp___ns1__AddVerify;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AddVerify";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddVerify.ns1__AddVerify = ns1__AddVerify;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddVerify(soap, &soap_tmp___ns1__AddVerify);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddVerify(soap, &soap_tmp___ns1__AddVerify, "-ns1:AddVerify", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddVerify(soap, &soap_tmp___ns1__AddVerify, "-ns1:AddVerify", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AddVerifyResponse)
		return soap_closesock(soap);
	ns1__AddVerifyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddVerifyResponse.soap_get(soap, "ns1:AddVerifyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::PrintJudge(const char *endpoint, const char *soap_action, _ns1__PrintJudge *ns1__PrintJudge, _ns1__PrintJudgeResponse &ns1__PrintJudgeResponse)
{	struct soap *soap = this;
	struct __ns1__PrintJudge soap_tmp___ns1__PrintJudge;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/PrintJudge";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__PrintJudge.ns1__PrintJudge = ns1__PrintJudge;
	soap_serializeheader(soap);
	soap_serialize___ns1__PrintJudge(soap, &soap_tmp___ns1__PrintJudge);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__PrintJudge(soap, &soap_tmp___ns1__PrintJudge, "-ns1:PrintJudge", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__PrintJudge(soap, &soap_tmp___ns1__PrintJudge, "-ns1:PrintJudge", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__PrintJudgeResponse)
		return soap_closesock(soap);
	ns1__PrintJudgeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__PrintJudgeResponse.soap_get(soap, "ns1:PrintJudgeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::PrintUp(const char *endpoint, const char *soap_action, _ns1__PrintUp *ns1__PrintUp, _ns1__PrintUpResponse &ns1__PrintUpResponse)
{	struct soap *soap = this;
	struct __ns1__PrintUp soap_tmp___ns1__PrintUp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/PrintUp";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__PrintUp.ns1__PrintUp = ns1__PrintUp;
	soap_serializeheader(soap);
	soap_serialize___ns1__PrintUp(soap, &soap_tmp___ns1__PrintUp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__PrintUp(soap, &soap_tmp___ns1__PrintUp, "-ns1:PrintUp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__PrintUp(soap, &soap_tmp___ns1__PrintUp, "-ns1:PrintUp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__PrintUpResponse)
		return soap_closesock(soap);
	ns1__PrintUpResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__PrintUpResponse.soap_get(soap, "ns1:PrintUpResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::LokeJudge(const char *endpoint, const char *soap_action, _ns1__LokeJudge *ns1__LokeJudge, _ns1__LokeJudgeResponse &ns1__LokeJudgeResponse)
{	struct soap *soap = this;
	struct __ns1__LokeJudge soap_tmp___ns1__LokeJudge;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/LokeJudge";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__LokeJudge.ns1__LokeJudge = ns1__LokeJudge;
	soap_serializeheader(soap);
	soap_serialize___ns1__LokeJudge(soap, &soap_tmp___ns1__LokeJudge);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LokeJudge(soap, &soap_tmp___ns1__LokeJudge, "-ns1:LokeJudge", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__LokeJudge(soap, &soap_tmp___ns1__LokeJudge, "-ns1:LokeJudge", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__LokeJudgeResponse)
		return soap_closesock(soap);
	ns1__LokeJudgeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LokeJudgeResponse.soap_get(soap, "ns1:LokeJudgeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::AddWGJCData(const char *endpoint, const char *soap_action, _ns1__AddWGJCData *ns1__AddWGJCData, _ns1__AddWGJCDataResponse &ns1__AddWGJCDataResponse)
{	struct soap *soap = this;
	struct __ns1__AddWGJCData soap_tmp___ns1__AddWGJCData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AddWGJCData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddWGJCData.ns1__AddWGJCData = ns1__AddWGJCData;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddWGJCData(soap, &soap_tmp___ns1__AddWGJCData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddWGJCData(soap, &soap_tmp___ns1__AddWGJCData, "-ns1:AddWGJCData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddWGJCData(soap, &soap_tmp___ns1__AddWGJCData, "-ns1:AddWGJCData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AddWGJCDataResponse)
		return soap_closesock(soap);
	ns1__AddWGJCDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddWGJCDataResponse.soap_get(soap, "ns1:AddWGJCDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::AddDeviceCheckData(const char *endpoint, const char *soap_action, _ns1__AddDeviceCheckData *ns1__AddDeviceCheckData, _ns1__AddDeviceCheckDataResponse &ns1__AddDeviceCheckDataResponse)
{	struct soap *soap = this;
	struct __ns1__AddDeviceCheckData soap_tmp___ns1__AddDeviceCheckData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AddDeviceCheckData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddDeviceCheckData.ns1__AddDeviceCheckData = ns1__AddDeviceCheckData;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddDeviceCheckData(soap, &soap_tmp___ns1__AddDeviceCheckData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddDeviceCheckData(soap, &soap_tmp___ns1__AddDeviceCheckData, "-ns1:AddDeviceCheckData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddDeviceCheckData(soap, &soap_tmp___ns1__AddDeviceCheckData, "-ns1:AddDeviceCheckData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AddDeviceCheckDataResponse)
		return soap_closesock(soap);
	ns1__AddDeviceCheckDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddDeviceCheckDataResponse.soap_get(soap, "ns1:AddDeviceCheckDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::VehicleRegJudge_(const char *endpoint, const char *soap_action, _ns1__VehicleRegJudge *ns1__VehicleRegJudge, _ns1__VehicleRegJudgeResponse &ns1__VehicleRegJudgeResponse)
{	struct soap *soap = this;
	struct __ns1__VehicleRegJudge_ soap_tmp___ns1__VehicleRegJudge_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/VehicleRegJudge";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__VehicleRegJudge_.ns1__VehicleRegJudge = ns1__VehicleRegJudge;
	soap_serializeheader(soap);
	soap_serialize___ns1__VehicleRegJudge_(soap, &soap_tmp___ns1__VehicleRegJudge_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__VehicleRegJudge_(soap, &soap_tmp___ns1__VehicleRegJudge_, "-ns1:VehicleRegJudge", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__VehicleRegJudge_(soap, &soap_tmp___ns1__VehicleRegJudge_, "-ns1:VehicleRegJudge", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__VehicleRegJudgeResponse)
		return soap_closesock(soap);
	ns1__VehicleRegJudgeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__VehicleRegJudgeResponse.soap_get(soap, "ns1:VehicleRegJudgeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::OnlineJudge_(const char *endpoint, const char *soap_action, _ns1__OnlineJudge *ns1__OnlineJudge, _ns1__OnlineJudgeResponse &ns1__OnlineJudgeResponse)
{	struct soap *soap = this;
	struct __ns1__OnlineJudge_ soap_tmp___ns1__OnlineJudge_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/OnlineJudge";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__OnlineJudge_.ns1__OnlineJudge = ns1__OnlineJudge;
	soap_serializeheader(soap);
	soap_serialize___ns1__OnlineJudge_(soap, &soap_tmp___ns1__OnlineJudge_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OnlineJudge_(soap, &soap_tmp___ns1__OnlineJudge_, "-ns1:OnlineJudge", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OnlineJudge_(soap, &soap_tmp___ns1__OnlineJudge_, "-ns1:OnlineJudge", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__OnlineJudgeResponse)
		return soap_closesock(soap);
	ns1__OnlineJudgeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OnlineJudgeResponse.soap_get(soap, "ns1:OnlineJudgeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::AddCheckData_(const char *endpoint, const char *soap_action, _ns1__AddCheckData *ns1__AddCheckData, _ns1__AddCheckDataResponse &ns1__AddCheckDataResponse)
{	struct soap *soap = this;
	struct __ns1__AddCheckData_ soap_tmp___ns1__AddCheckData_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AddCheckData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddCheckData_.ns1__AddCheckData = ns1__AddCheckData;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddCheckData_(soap, &soap_tmp___ns1__AddCheckData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddCheckData_(soap, &soap_tmp___ns1__AddCheckData_, "-ns1:AddCheckData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddCheckData_(soap, &soap_tmp___ns1__AddCheckData_, "-ns1:AddCheckData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AddCheckDataResponse)
		return soap_closesock(soap);
	ns1__AddCheckDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddCheckDataResponse.soap_get(soap, "ns1:AddCheckDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::AddObdData_(const char *endpoint, const char *soap_action, _ns1__AddObdData *ns1__AddObdData, _ns1__AddObdDataResponse &ns1__AddObdDataResponse)
{	struct soap *soap = this;
	struct __ns1__AddObdData_ soap_tmp___ns1__AddObdData_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AddObdData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddObdData_.ns1__AddObdData = ns1__AddObdData;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddObdData_(soap, &soap_tmp___ns1__AddObdData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddObdData_(soap, &soap_tmp___ns1__AddObdData_, "-ns1:AddObdData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddObdData_(soap, &soap_tmp___ns1__AddObdData_, "-ns1:AddObdData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AddObdDataResponse)
		return soap_closesock(soap);
	ns1__AddObdDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddObdDataResponse.soap_get(soap, "ns1:AddObdDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::AddIuprData_(const char *endpoint, const char *soap_action, _ns1__AddIuprData *ns1__AddIuprData, _ns1__AddIuprDataResponse &ns1__AddIuprDataResponse)
{	struct soap *soap = this;
	struct __ns1__AddIuprData_ soap_tmp___ns1__AddIuprData_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AddIuprData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddIuprData_.ns1__AddIuprData = ns1__AddIuprData;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddIuprData_(soap, &soap_tmp___ns1__AddIuprData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddIuprData_(soap, &soap_tmp___ns1__AddIuprData_, "-ns1:AddIuprData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddIuprData_(soap, &soap_tmp___ns1__AddIuprData_, "-ns1:AddIuprData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AddIuprDataResponse)
		return soap_closesock(soap);
	ns1__AddIuprDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddIuprDataResponse.soap_get(soap, "ns1:AddIuprDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::RyzfControl_(const char *endpoint, const char *soap_action, _ns1__RyzfControl *ns1__RyzfControl, _ns1__RyzfControlResponse &ns1__RyzfControlResponse)
{	struct soap *soap = this;
	struct __ns1__RyzfControl_ soap_tmp___ns1__RyzfControl_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/RyzfControl";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__RyzfControl_.ns1__RyzfControl = ns1__RyzfControl;
	soap_serializeheader(soap);
	soap_serialize___ns1__RyzfControl_(soap, &soap_tmp___ns1__RyzfControl_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__RyzfControl_(soap, &soap_tmp___ns1__RyzfControl_, "-ns1:RyzfControl", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__RyzfControl_(soap, &soap_tmp___ns1__RyzfControl_, "-ns1:RyzfControl", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__RyzfControlResponse)
		return soap_closesock(soap);
	ns1__RyzfControlResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RyzfControlResponse.soap_get(soap, "ns1:RyzfControlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::AddVerify_(const char *endpoint, const char *soap_action, _ns1__AddVerify *ns1__AddVerify, _ns1__AddVerifyResponse &ns1__AddVerifyResponse)
{	struct soap *soap = this;
	struct __ns1__AddVerify_ soap_tmp___ns1__AddVerify_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AddVerify";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddVerify_.ns1__AddVerify = ns1__AddVerify;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddVerify_(soap, &soap_tmp___ns1__AddVerify_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddVerify_(soap, &soap_tmp___ns1__AddVerify_, "-ns1:AddVerify", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddVerify_(soap, &soap_tmp___ns1__AddVerify_, "-ns1:AddVerify", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AddVerifyResponse)
		return soap_closesock(soap);
	ns1__AddVerifyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddVerifyResponse.soap_get(soap, "ns1:AddVerifyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::PrintJudge_(const char *endpoint, const char *soap_action, _ns1__PrintJudge *ns1__PrintJudge, _ns1__PrintJudgeResponse &ns1__PrintJudgeResponse)
{	struct soap *soap = this;
	struct __ns1__PrintJudge_ soap_tmp___ns1__PrintJudge_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/PrintJudge";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__PrintJudge_.ns1__PrintJudge = ns1__PrintJudge;
	soap_serializeheader(soap);
	soap_serialize___ns1__PrintJudge_(soap, &soap_tmp___ns1__PrintJudge_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__PrintJudge_(soap, &soap_tmp___ns1__PrintJudge_, "-ns1:PrintJudge", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__PrintJudge_(soap, &soap_tmp___ns1__PrintJudge_, "-ns1:PrintJudge", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__PrintJudgeResponse)
		return soap_closesock(soap);
	ns1__PrintJudgeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__PrintJudgeResponse.soap_get(soap, "ns1:PrintJudgeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::PrintUp_(const char *endpoint, const char *soap_action, _ns1__PrintUp *ns1__PrintUp, _ns1__PrintUpResponse &ns1__PrintUpResponse)
{	struct soap *soap = this;
	struct __ns1__PrintUp_ soap_tmp___ns1__PrintUp_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/PrintUp";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__PrintUp_.ns1__PrintUp = ns1__PrintUp;
	soap_serializeheader(soap);
	soap_serialize___ns1__PrintUp_(soap, &soap_tmp___ns1__PrintUp_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__PrintUp_(soap, &soap_tmp___ns1__PrintUp_, "-ns1:PrintUp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__PrintUp_(soap, &soap_tmp___ns1__PrintUp_, "-ns1:PrintUp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__PrintUpResponse)
		return soap_closesock(soap);
	ns1__PrintUpResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__PrintUpResponse.soap_get(soap, "ns1:PrintUpResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::LokeJudge_(const char *endpoint, const char *soap_action, _ns1__LokeJudge *ns1__LokeJudge, _ns1__LokeJudgeResponse &ns1__LokeJudgeResponse)
{	struct soap *soap = this;
	struct __ns1__LokeJudge_ soap_tmp___ns1__LokeJudge_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/LokeJudge";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__LokeJudge_.ns1__LokeJudge = ns1__LokeJudge;
	soap_serializeheader(soap);
	soap_serialize___ns1__LokeJudge_(soap, &soap_tmp___ns1__LokeJudge_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__LokeJudge_(soap, &soap_tmp___ns1__LokeJudge_, "-ns1:LokeJudge", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__LokeJudge_(soap, &soap_tmp___ns1__LokeJudge_, "-ns1:LokeJudge", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__LokeJudgeResponse)
		return soap_closesock(soap);
	ns1__LokeJudgeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LokeJudgeResponse.soap_get(soap, "ns1:LokeJudgeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::AddWGJCData_(const char *endpoint, const char *soap_action, _ns1__AddWGJCData *ns1__AddWGJCData, _ns1__AddWGJCDataResponse &ns1__AddWGJCDataResponse)
{	struct soap *soap = this;
	struct __ns1__AddWGJCData_ soap_tmp___ns1__AddWGJCData_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AddWGJCData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddWGJCData_.ns1__AddWGJCData = ns1__AddWGJCData;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddWGJCData_(soap, &soap_tmp___ns1__AddWGJCData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddWGJCData_(soap, &soap_tmp___ns1__AddWGJCData_, "-ns1:AddWGJCData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddWGJCData_(soap, &soap_tmp___ns1__AddWGJCData_, "-ns1:AddWGJCData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AddWGJCDataResponse)
		return soap_closesock(soap);
	ns1__AddWGJCDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddWGJCDataResponse.soap_get(soap, "ns1:AddWGJCDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int GasServiceNewSoapProxy::AddDeviceCheckData_(const char *endpoint, const char *soap_action, _ns1__AddDeviceCheckData *ns1__AddDeviceCheckData, _ns1__AddDeviceCheckDataResponse &ns1__AddDeviceCheckDataResponse)
{	struct soap *soap = this;
	struct __ns1__AddDeviceCheckData_ soap_tmp___ns1__AddDeviceCheckData_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.168.81.60:10000/GasServiceNew.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/AddDeviceCheckData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AddDeviceCheckData_.ns1__AddDeviceCheckData = ns1__AddDeviceCheckData;
	soap_serializeheader(soap);
	soap_serialize___ns1__AddDeviceCheckData_(soap, &soap_tmp___ns1__AddDeviceCheckData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddDeviceCheckData_(soap, &soap_tmp___ns1__AddDeviceCheckData_, "-ns1:AddDeviceCheckData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddDeviceCheckData_(soap, &soap_tmp___ns1__AddDeviceCheckData_, "-ns1:AddDeviceCheckData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AddDeviceCheckDataResponse)
		return soap_closesock(soap);
	ns1__AddDeviceCheckDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddDeviceCheckDataResponse.soap_get(soap, "ns1:AddDeviceCheckDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
