/* soapH.h
   Generated by gSOAP 2.8.21 from GasServiceNew.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__wstring
#define SOAP_TYPE_std__wstring (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__wstring(struct soap*, std::wstring *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__wstring(struct soap*, const std::wstring *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__wstring(struct soap*, const char*, int, const std::wstring*, const char*);
SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_in_std__wstring(struct soap*, const char*, std::wstring*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__wstring(struct soap*, const std::wstring *, const char*, const char*);

#ifndef soap_write_std__wstring
#define soap_write_std__wstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_std__wstring(soap, data),0) || soap_put_std__wstring(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_get_std__wstring(struct soap*, std::wstring *, const char*, const char*);

#ifndef soap_read_std__wstring
#define soap_read_std__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_std__wstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::wstring * SOAP_FMAC2 soap_instantiate_std__wstring(struct soap*, int, const char*, const char*, size_t*);

inline std::wstring * soap_new_std__wstring(struct soap *soap, int n = -1) { return soap_instantiate_std__wstring(soap, n, NULL, NULL, NULL); }

inline std::wstring * soap_new_req_std__wstring(struct soap *soap) { std::wstring *_p = soap_instantiate_std__wstring(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__wstring(soap, _p); } return _p; }

inline std::wstring * soap_new_set_std__wstring(struct soap *soap) { std::wstring *_p = soap_instantiate_std__wstring(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__wstring(soap, _p); } return _p; }

inline void soap_delete_std__wstring(struct soap *soap, std::wstring *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__wstring(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AddDeviceCheckDataResponse
#define SOAP_TYPE__ns1__AddDeviceCheckDataResponse (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddDeviceCheckDataResponse(struct soap*, const char*, int, const _ns1__AddDeviceCheckDataResponse *, const char*);
SOAP_FMAC3 _ns1__AddDeviceCheckDataResponse * SOAP_FMAC4 soap_in__ns1__AddDeviceCheckDataResponse(struct soap*, const char*, _ns1__AddDeviceCheckDataResponse *, const char*);

#ifndef soap_write__ns1__AddDeviceCheckDataResponse
#define soap_write__ns1__AddDeviceCheckDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:AddDeviceCheckDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddDeviceCheckDataResponse * SOAP_FMAC4 soap_get__ns1__AddDeviceCheckDataResponse(struct soap*, _ns1__AddDeviceCheckDataResponse *, const char*, const char*);

#ifndef soap_read__ns1__AddDeviceCheckDataResponse
#define soap_read__ns1__AddDeviceCheckDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AddDeviceCheckDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__AddDeviceCheckDataResponse * SOAP_FMAC2 soap_instantiate__ns1__AddDeviceCheckDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddDeviceCheckDataResponse * soap_new__ns1__AddDeviceCheckDataResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AddDeviceCheckDataResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__AddDeviceCheckDataResponse * soap_new_req__ns1__AddDeviceCheckDataResponse(struct soap *soap) { _ns1__AddDeviceCheckDataResponse *_p = soap_instantiate__ns1__AddDeviceCheckDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AddDeviceCheckDataResponse * soap_new_set__ns1__AddDeviceCheckDataResponse(struct soap *soap, std::wstring *AddDeviceCheckDataResult) { _ns1__AddDeviceCheckDataResponse *_p = soap_instantiate__ns1__AddDeviceCheckDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AddDeviceCheckDataResponse::AddDeviceCheckDataResult = AddDeviceCheckDataResult; } return _p; }

inline void soap_delete__ns1__AddDeviceCheckDataResponse(struct soap *soap, _ns1__AddDeviceCheckDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddDeviceCheckDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AddDeviceCheckData
#define SOAP_TYPE__ns1__AddDeviceCheckData (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddDeviceCheckData(struct soap*, const char*, int, const _ns1__AddDeviceCheckData *, const char*);
SOAP_FMAC3 _ns1__AddDeviceCheckData * SOAP_FMAC4 soap_in__ns1__AddDeviceCheckData(struct soap*, const char*, _ns1__AddDeviceCheckData *, const char*);

#ifndef soap_write__ns1__AddDeviceCheckData
#define soap_write__ns1__AddDeviceCheckData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:AddDeviceCheckData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddDeviceCheckData * SOAP_FMAC4 soap_get__ns1__AddDeviceCheckData(struct soap*, _ns1__AddDeviceCheckData *, const char*, const char*);

#ifndef soap_read__ns1__AddDeviceCheckData
#define soap_read__ns1__AddDeviceCheckData(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AddDeviceCheckData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__AddDeviceCheckData * SOAP_FMAC2 soap_instantiate__ns1__AddDeviceCheckData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddDeviceCheckData * soap_new__ns1__AddDeviceCheckData(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AddDeviceCheckData(soap, n, NULL, NULL, NULL); }

inline _ns1__AddDeviceCheckData * soap_new_req__ns1__AddDeviceCheckData(struct soap *soap) { _ns1__AddDeviceCheckData *_p = soap_instantiate__ns1__AddDeviceCheckData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AddDeviceCheckData * soap_new_set__ns1__AddDeviceCheckData(struct soap *soap, std::wstring *addDeviceCheckData) { _ns1__AddDeviceCheckData *_p = soap_instantiate__ns1__AddDeviceCheckData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AddDeviceCheckData::addDeviceCheckData = addDeviceCheckData; } return _p; }

inline void soap_delete__ns1__AddDeviceCheckData(struct soap *soap, _ns1__AddDeviceCheckData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddDeviceCheckData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AddWGJCDataResponse
#define SOAP_TYPE__ns1__AddWGJCDataResponse (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddWGJCDataResponse(struct soap*, const char*, int, const _ns1__AddWGJCDataResponse *, const char*);
SOAP_FMAC3 _ns1__AddWGJCDataResponse * SOAP_FMAC4 soap_in__ns1__AddWGJCDataResponse(struct soap*, const char*, _ns1__AddWGJCDataResponse *, const char*);

#ifndef soap_write__ns1__AddWGJCDataResponse
#define soap_write__ns1__AddWGJCDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:AddWGJCDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddWGJCDataResponse * SOAP_FMAC4 soap_get__ns1__AddWGJCDataResponse(struct soap*, _ns1__AddWGJCDataResponse *, const char*, const char*);

#ifndef soap_read__ns1__AddWGJCDataResponse
#define soap_read__ns1__AddWGJCDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AddWGJCDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__AddWGJCDataResponse * SOAP_FMAC2 soap_instantiate__ns1__AddWGJCDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddWGJCDataResponse * soap_new__ns1__AddWGJCDataResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AddWGJCDataResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__AddWGJCDataResponse * soap_new_req__ns1__AddWGJCDataResponse(struct soap *soap) { _ns1__AddWGJCDataResponse *_p = soap_instantiate__ns1__AddWGJCDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AddWGJCDataResponse * soap_new_set__ns1__AddWGJCDataResponse(struct soap *soap, std::wstring *AddWGJCDataResult) { _ns1__AddWGJCDataResponse *_p = soap_instantiate__ns1__AddWGJCDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AddWGJCDataResponse::AddWGJCDataResult = AddWGJCDataResult; } return _p; }

inline void soap_delete__ns1__AddWGJCDataResponse(struct soap *soap, _ns1__AddWGJCDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddWGJCDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AddWGJCData
#define SOAP_TYPE__ns1__AddWGJCData (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddWGJCData(struct soap*, const char*, int, const _ns1__AddWGJCData *, const char*);
SOAP_FMAC3 _ns1__AddWGJCData * SOAP_FMAC4 soap_in__ns1__AddWGJCData(struct soap*, const char*, _ns1__AddWGJCData *, const char*);

#ifndef soap_write__ns1__AddWGJCData
#define soap_write__ns1__AddWGJCData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:AddWGJCData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddWGJCData * SOAP_FMAC4 soap_get__ns1__AddWGJCData(struct soap*, _ns1__AddWGJCData *, const char*, const char*);

#ifndef soap_read__ns1__AddWGJCData
#define soap_read__ns1__AddWGJCData(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AddWGJCData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__AddWGJCData * SOAP_FMAC2 soap_instantiate__ns1__AddWGJCData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddWGJCData * soap_new__ns1__AddWGJCData(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AddWGJCData(soap, n, NULL, NULL, NULL); }

inline _ns1__AddWGJCData * soap_new_req__ns1__AddWGJCData(struct soap *soap) { _ns1__AddWGJCData *_p = soap_instantiate__ns1__AddWGJCData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AddWGJCData * soap_new_set__ns1__AddWGJCData(struct soap *soap, std::wstring *WgjcDataItems) { _ns1__AddWGJCData *_p = soap_instantiate__ns1__AddWGJCData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AddWGJCData::WgjcDataItems = WgjcDataItems; } return _p; }

inline void soap_delete__ns1__AddWGJCData(struct soap *soap, _ns1__AddWGJCData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddWGJCData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__LokeJudgeResponse
#define SOAP_TYPE__ns1__LokeJudgeResponse (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__LokeJudgeResponse(struct soap*, const char*, int, const _ns1__LokeJudgeResponse *, const char*);
SOAP_FMAC3 _ns1__LokeJudgeResponse * SOAP_FMAC4 soap_in__ns1__LokeJudgeResponse(struct soap*, const char*, _ns1__LokeJudgeResponse *, const char*);

#ifndef soap_write__ns1__LokeJudgeResponse
#define soap_write__ns1__LokeJudgeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:LokeJudgeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LokeJudgeResponse * SOAP_FMAC4 soap_get__ns1__LokeJudgeResponse(struct soap*, _ns1__LokeJudgeResponse *, const char*, const char*);

#ifndef soap_read__ns1__LokeJudgeResponse
#define soap_read__ns1__LokeJudgeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__LokeJudgeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__LokeJudgeResponse * SOAP_FMAC2 soap_instantiate__ns1__LokeJudgeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__LokeJudgeResponse * soap_new__ns1__LokeJudgeResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__LokeJudgeResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__LokeJudgeResponse * soap_new_req__ns1__LokeJudgeResponse(struct soap *soap) { _ns1__LokeJudgeResponse *_p = soap_instantiate__ns1__LokeJudgeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__LokeJudgeResponse * soap_new_set__ns1__LokeJudgeResponse(struct soap *soap, std::wstring *LokeJudgeResult) { _ns1__LokeJudgeResponse *_p = soap_instantiate__ns1__LokeJudgeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__LokeJudgeResponse::LokeJudgeResult = LokeJudgeResult; } return _p; }

inline void soap_delete__ns1__LokeJudgeResponse(struct soap *soap, _ns1__LokeJudgeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__LokeJudgeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__LokeJudge
#define SOAP_TYPE__ns1__LokeJudge (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__LokeJudge(struct soap*, const char*, int, const _ns1__LokeJudge *, const char*);
SOAP_FMAC3 _ns1__LokeJudge * SOAP_FMAC4 soap_in__ns1__LokeJudge(struct soap*, const char*, _ns1__LokeJudge *, const char*);

#ifndef soap_write__ns1__LokeJudge
#define soap_write__ns1__LokeJudge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:LokeJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LokeJudge * SOAP_FMAC4 soap_get__ns1__LokeJudge(struct soap*, _ns1__LokeJudge *, const char*, const char*);

#ifndef soap_read__ns1__LokeJudge
#define soap_read__ns1__LokeJudge(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__LokeJudge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__LokeJudge * SOAP_FMAC2 soap_instantiate__ns1__LokeJudge(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__LokeJudge * soap_new__ns1__LokeJudge(struct soap *soap, int n = -1) { return soap_instantiate__ns1__LokeJudge(soap, n, NULL, NULL, NULL); }

inline _ns1__LokeJudge * soap_new_req__ns1__LokeJudge(struct soap *soap) { _ns1__LokeJudge *_p = soap_instantiate__ns1__LokeJudge(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__LokeJudge * soap_new_set__ns1__LokeJudge(struct soap *soap, std::wstring *jczNo, std::wstring *devBm) { _ns1__LokeJudge *_p = soap_instantiate__ns1__LokeJudge(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__LokeJudge::jczNo = jczNo; _p->_ns1__LokeJudge::devBm = devBm; } return _p; }

inline void soap_delete__ns1__LokeJudge(struct soap *soap, _ns1__LokeJudge *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__LokeJudge(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__PrintUpResponse
#define SOAP_TYPE__ns1__PrintUpResponse (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__PrintUpResponse(struct soap*, const char*, int, const _ns1__PrintUpResponse *, const char*);
SOAP_FMAC3 _ns1__PrintUpResponse * SOAP_FMAC4 soap_in__ns1__PrintUpResponse(struct soap*, const char*, _ns1__PrintUpResponse *, const char*);

#ifndef soap_write__ns1__PrintUpResponse
#define soap_write__ns1__PrintUpResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:PrintUpResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__PrintUpResponse * SOAP_FMAC4 soap_get__ns1__PrintUpResponse(struct soap*, _ns1__PrintUpResponse *, const char*, const char*);

#ifndef soap_read__ns1__PrintUpResponse
#define soap_read__ns1__PrintUpResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__PrintUpResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__PrintUpResponse * SOAP_FMAC2 soap_instantiate__ns1__PrintUpResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__PrintUpResponse * soap_new__ns1__PrintUpResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__PrintUpResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__PrintUpResponse * soap_new_req__ns1__PrintUpResponse(struct soap *soap) { _ns1__PrintUpResponse *_p = soap_instantiate__ns1__PrintUpResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__PrintUpResponse * soap_new_set__ns1__PrintUpResponse(struct soap *soap, std::wstring *PrintUpResult) { _ns1__PrintUpResponse *_p = soap_instantiate__ns1__PrintUpResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__PrintUpResponse::PrintUpResult = PrintUpResult; } return _p; }

inline void soap_delete__ns1__PrintUpResponse(struct soap *soap, _ns1__PrintUpResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__PrintUpResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__PrintUp
#define SOAP_TYPE__ns1__PrintUp (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__PrintUp(struct soap*, const char*, int, const _ns1__PrintUp *, const char*);
SOAP_FMAC3 _ns1__PrintUp * SOAP_FMAC4 soap_in__ns1__PrintUp(struct soap*, const char*, _ns1__PrintUp *, const char*);

#ifndef soap_write__ns1__PrintUp
#define soap_write__ns1__PrintUp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:PrintUp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__PrintUp * SOAP_FMAC4 soap_get__ns1__PrintUp(struct soap*, _ns1__PrintUp *, const char*, const char*);

#ifndef soap_read__ns1__PrintUp
#define soap_read__ns1__PrintUp(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__PrintUp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__PrintUp * SOAP_FMAC2 soap_instantiate__ns1__PrintUp(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__PrintUp * soap_new__ns1__PrintUp(struct soap *soap, int n = -1) { return soap_instantiate__ns1__PrintUp(soap, n, NULL, NULL, NULL); }

inline _ns1__PrintUp * soap_new_req__ns1__PrintUp(struct soap *soap) { _ns1__PrintUp *_p = soap_instantiate__ns1__PrintUp(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__PrintUp * soap_new_set__ns1__PrintUp(struct soap *soap, std::wstring *lsbh, std::wstring *encodeReport) { _ns1__PrintUp *_p = soap_instantiate__ns1__PrintUp(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__PrintUp::lsbh = lsbh; _p->_ns1__PrintUp::encodeReport = encodeReport; } return _p; }

inline void soap_delete__ns1__PrintUp(struct soap *soap, _ns1__PrintUp *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__PrintUp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__PrintJudgeResponse
#define SOAP_TYPE__ns1__PrintJudgeResponse (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__PrintJudgeResponse(struct soap*, const char*, int, const _ns1__PrintJudgeResponse *, const char*);
SOAP_FMAC3 _ns1__PrintJudgeResponse * SOAP_FMAC4 soap_in__ns1__PrintJudgeResponse(struct soap*, const char*, _ns1__PrintJudgeResponse *, const char*);

#ifndef soap_write__ns1__PrintJudgeResponse
#define soap_write__ns1__PrintJudgeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:PrintJudgeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__PrintJudgeResponse * SOAP_FMAC4 soap_get__ns1__PrintJudgeResponse(struct soap*, _ns1__PrintJudgeResponse *, const char*, const char*);

#ifndef soap_read__ns1__PrintJudgeResponse
#define soap_read__ns1__PrintJudgeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__PrintJudgeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__PrintJudgeResponse * SOAP_FMAC2 soap_instantiate__ns1__PrintJudgeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__PrintJudgeResponse * soap_new__ns1__PrintJudgeResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__PrintJudgeResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__PrintJudgeResponse * soap_new_req__ns1__PrintJudgeResponse(struct soap *soap) { _ns1__PrintJudgeResponse *_p = soap_instantiate__ns1__PrintJudgeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__PrintJudgeResponse * soap_new_set__ns1__PrintJudgeResponse(struct soap *soap, std::wstring *PrintJudgeResult) { _ns1__PrintJudgeResponse *_p = soap_instantiate__ns1__PrintJudgeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__PrintJudgeResponse::PrintJudgeResult = PrintJudgeResult; } return _p; }

inline void soap_delete__ns1__PrintJudgeResponse(struct soap *soap, _ns1__PrintJudgeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__PrintJudgeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__PrintJudge
#define SOAP_TYPE__ns1__PrintJudge (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__PrintJudge(struct soap*, const char*, int, const _ns1__PrintJudge *, const char*);
SOAP_FMAC3 _ns1__PrintJudge * SOAP_FMAC4 soap_in__ns1__PrintJudge(struct soap*, const char*, _ns1__PrintJudge *, const char*);

#ifndef soap_write__ns1__PrintJudge
#define soap_write__ns1__PrintJudge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:PrintJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__PrintJudge * SOAP_FMAC4 soap_get__ns1__PrintJudge(struct soap*, _ns1__PrintJudge *, const char*, const char*);

#ifndef soap_read__ns1__PrintJudge
#define soap_read__ns1__PrintJudge(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__PrintJudge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__PrintJudge * SOAP_FMAC2 soap_instantiate__ns1__PrintJudge(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__PrintJudge * soap_new__ns1__PrintJudge(struct soap *soap, int n = -1) { return soap_instantiate__ns1__PrintJudge(soap, n, NULL, NULL, NULL); }

inline _ns1__PrintJudge * soap_new_req__ns1__PrintJudge(struct soap *soap) { _ns1__PrintJudge *_p = soap_instantiate__ns1__PrintJudge(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__PrintJudge * soap_new_set__ns1__PrintJudge(struct soap *soap, std::wstring *lsbh, std::wstring *jczNo) { _ns1__PrintJudge *_p = soap_instantiate__ns1__PrintJudge(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__PrintJudge::lsbh = lsbh; _p->_ns1__PrintJudge::jczNo = jczNo; } return _p; }

inline void soap_delete__ns1__PrintJudge(struct soap *soap, _ns1__PrintJudge *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__PrintJudge(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AddVerifyResponse
#define SOAP_TYPE__ns1__AddVerifyResponse (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddVerifyResponse(struct soap*, const char*, int, const _ns1__AddVerifyResponse *, const char*);
SOAP_FMAC3 _ns1__AddVerifyResponse * SOAP_FMAC4 soap_in__ns1__AddVerifyResponse(struct soap*, const char*, _ns1__AddVerifyResponse *, const char*);

#ifndef soap_write__ns1__AddVerifyResponse
#define soap_write__ns1__AddVerifyResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:AddVerifyResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddVerifyResponse * SOAP_FMAC4 soap_get__ns1__AddVerifyResponse(struct soap*, _ns1__AddVerifyResponse *, const char*, const char*);

#ifndef soap_read__ns1__AddVerifyResponse
#define soap_read__ns1__AddVerifyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AddVerifyResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__AddVerifyResponse * SOAP_FMAC2 soap_instantiate__ns1__AddVerifyResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddVerifyResponse * soap_new__ns1__AddVerifyResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AddVerifyResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__AddVerifyResponse * soap_new_req__ns1__AddVerifyResponse(struct soap *soap) { _ns1__AddVerifyResponse *_p = soap_instantiate__ns1__AddVerifyResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AddVerifyResponse * soap_new_set__ns1__AddVerifyResponse(struct soap *soap, std::wstring *AddVerifyResult) { _ns1__AddVerifyResponse *_p = soap_instantiate__ns1__AddVerifyResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AddVerifyResponse::AddVerifyResult = AddVerifyResult; } return _p; }

inline void soap_delete__ns1__AddVerifyResponse(struct soap *soap, _ns1__AddVerifyResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddVerifyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AddVerify
#define SOAP_TYPE__ns1__AddVerify (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddVerify(struct soap*, const char*, int, const _ns1__AddVerify *, const char*);
SOAP_FMAC3 _ns1__AddVerify * SOAP_FMAC4 soap_in__ns1__AddVerify(struct soap*, const char*, _ns1__AddVerify *, const char*);

#ifndef soap_write__ns1__AddVerify
#define soap_write__ns1__AddVerify(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:AddVerify", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddVerify * SOAP_FMAC4 soap_get__ns1__AddVerify(struct soap*, _ns1__AddVerify *, const char*, const char*);

#ifndef soap_read__ns1__AddVerify
#define soap_read__ns1__AddVerify(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AddVerify(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__AddVerify * SOAP_FMAC2 soap_instantiate__ns1__AddVerify(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddVerify * soap_new__ns1__AddVerify(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AddVerify(soap, n, NULL, NULL, NULL); }

inline _ns1__AddVerify * soap_new_req__ns1__AddVerify(struct soap *soap) { _ns1__AddVerify *_p = soap_instantiate__ns1__AddVerify(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AddVerify * soap_new_set__ns1__AddVerify(struct soap *soap, std::wstring *DeviceType, std::wstring *Items) { _ns1__AddVerify *_p = soap_instantiate__ns1__AddVerify(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AddVerify::DeviceType = DeviceType; _p->_ns1__AddVerify::Items = Items; } return _p; }

inline void soap_delete__ns1__AddVerify(struct soap *soap, _ns1__AddVerify *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddVerify(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__RyzfControlResponse
#define SOAP_TYPE__ns1__RyzfControlResponse (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RyzfControlResponse(struct soap*, const char*, int, const _ns1__RyzfControlResponse *, const char*);
SOAP_FMAC3 _ns1__RyzfControlResponse * SOAP_FMAC4 soap_in__ns1__RyzfControlResponse(struct soap*, const char*, _ns1__RyzfControlResponse *, const char*);

#ifndef soap_write__ns1__RyzfControlResponse
#define soap_write__ns1__RyzfControlResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:RyzfControlResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__RyzfControlResponse * SOAP_FMAC4 soap_get__ns1__RyzfControlResponse(struct soap*, _ns1__RyzfControlResponse *, const char*, const char*);

#ifndef soap_read__ns1__RyzfControlResponse
#define soap_read__ns1__RyzfControlResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__RyzfControlResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__RyzfControlResponse * SOAP_FMAC2 soap_instantiate__ns1__RyzfControlResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__RyzfControlResponse * soap_new__ns1__RyzfControlResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__RyzfControlResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__RyzfControlResponse * soap_new_req__ns1__RyzfControlResponse(struct soap *soap) { _ns1__RyzfControlResponse *_p = soap_instantiate__ns1__RyzfControlResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__RyzfControlResponse * soap_new_set__ns1__RyzfControlResponse(struct soap *soap, std::wstring *RyzfControlResult) { _ns1__RyzfControlResponse *_p = soap_instantiate__ns1__RyzfControlResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__RyzfControlResponse::RyzfControlResult = RyzfControlResult; } return _p; }

inline void soap_delete__ns1__RyzfControlResponse(struct soap *soap, _ns1__RyzfControlResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RyzfControlResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__RyzfControl
#define SOAP_TYPE__ns1__RyzfControl (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__RyzfControl(struct soap*, const char*, int, const _ns1__RyzfControl *, const char*);
SOAP_FMAC3 _ns1__RyzfControl * SOAP_FMAC4 soap_in__ns1__RyzfControl(struct soap*, const char*, _ns1__RyzfControl *, const char*);

#ifndef soap_write__ns1__RyzfControl
#define soap_write__ns1__RyzfControl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:RyzfControl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__RyzfControl * SOAP_FMAC4 soap_get__ns1__RyzfControl(struct soap*, _ns1__RyzfControl *, const char*, const char*);

#ifndef soap_read__ns1__RyzfControl
#define soap_read__ns1__RyzfControl(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__RyzfControl(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__RyzfControl * SOAP_FMAC2 soap_instantiate__ns1__RyzfControl(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__RyzfControl * soap_new__ns1__RyzfControl(struct soap *soap, int n = -1) { return soap_instantiate__ns1__RyzfControl(soap, n, NULL, NULL, NULL); }

inline _ns1__RyzfControl * soap_new_req__ns1__RyzfControl(struct soap *soap) { _ns1__RyzfControl *_p = soap_instantiate__ns1__RyzfControl(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__RyzfControl * soap_new_set__ns1__RyzfControl(struct soap *soap, std::wstring *rykzItems) { _ns1__RyzfControl *_p = soap_instantiate__ns1__RyzfControl(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__RyzfControl::rykzItems = rykzItems; } return _p; }

inline void soap_delete__ns1__RyzfControl(struct soap *soap, _ns1__RyzfControl *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__RyzfControl(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AddIuprDataResponse
#define SOAP_TYPE__ns1__AddIuprDataResponse (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddIuprDataResponse(struct soap*, const char*, int, const _ns1__AddIuprDataResponse *, const char*);
SOAP_FMAC3 _ns1__AddIuprDataResponse * SOAP_FMAC4 soap_in__ns1__AddIuprDataResponse(struct soap*, const char*, _ns1__AddIuprDataResponse *, const char*);

#ifndef soap_write__ns1__AddIuprDataResponse
#define soap_write__ns1__AddIuprDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:AddIuprDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddIuprDataResponse * SOAP_FMAC4 soap_get__ns1__AddIuprDataResponse(struct soap*, _ns1__AddIuprDataResponse *, const char*, const char*);

#ifndef soap_read__ns1__AddIuprDataResponse
#define soap_read__ns1__AddIuprDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AddIuprDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__AddIuprDataResponse * SOAP_FMAC2 soap_instantiate__ns1__AddIuprDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddIuprDataResponse * soap_new__ns1__AddIuprDataResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AddIuprDataResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__AddIuprDataResponse * soap_new_req__ns1__AddIuprDataResponse(struct soap *soap) { _ns1__AddIuprDataResponse *_p = soap_instantiate__ns1__AddIuprDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AddIuprDataResponse * soap_new_set__ns1__AddIuprDataResponse(struct soap *soap, std::wstring *AddIuprDataResult) { _ns1__AddIuprDataResponse *_p = soap_instantiate__ns1__AddIuprDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AddIuprDataResponse::AddIuprDataResult = AddIuprDataResult; } return _p; }

inline void soap_delete__ns1__AddIuprDataResponse(struct soap *soap, _ns1__AddIuprDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddIuprDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AddIuprData
#define SOAP_TYPE__ns1__AddIuprData (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddIuprData(struct soap*, const char*, int, const _ns1__AddIuprData *, const char*);
SOAP_FMAC3 _ns1__AddIuprData * SOAP_FMAC4 soap_in__ns1__AddIuprData(struct soap*, const char*, _ns1__AddIuprData *, const char*);

#ifndef soap_write__ns1__AddIuprData
#define soap_write__ns1__AddIuprData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:AddIuprData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddIuprData * SOAP_FMAC4 soap_get__ns1__AddIuprData(struct soap*, _ns1__AddIuprData *, const char*, const char*);

#ifndef soap_read__ns1__AddIuprData
#define soap_read__ns1__AddIuprData(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AddIuprData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__AddIuprData * SOAP_FMAC2 soap_instantiate__ns1__AddIuprData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddIuprData * soap_new__ns1__AddIuprData(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AddIuprData(soap, n, NULL, NULL, NULL); }

inline _ns1__AddIuprData * soap_new_req__ns1__AddIuprData(struct soap *soap) { _ns1__AddIuprData *_p = soap_instantiate__ns1__AddIuprData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AddIuprData * soap_new_set__ns1__AddIuprData(struct soap *soap, std::wstring *IuprDataItems, std::wstring *ObdType) { _ns1__AddIuprData *_p = soap_instantiate__ns1__AddIuprData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AddIuprData::IuprDataItems = IuprDataItems; _p->_ns1__AddIuprData::ObdType = ObdType; } return _p; }

inline void soap_delete__ns1__AddIuprData(struct soap *soap, _ns1__AddIuprData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddIuprData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AddObdDataResponse
#define SOAP_TYPE__ns1__AddObdDataResponse (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddObdDataResponse(struct soap*, const char*, int, const _ns1__AddObdDataResponse *, const char*);
SOAP_FMAC3 _ns1__AddObdDataResponse * SOAP_FMAC4 soap_in__ns1__AddObdDataResponse(struct soap*, const char*, _ns1__AddObdDataResponse *, const char*);

#ifndef soap_write__ns1__AddObdDataResponse
#define soap_write__ns1__AddObdDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:AddObdDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddObdDataResponse * SOAP_FMAC4 soap_get__ns1__AddObdDataResponse(struct soap*, _ns1__AddObdDataResponse *, const char*, const char*);

#ifndef soap_read__ns1__AddObdDataResponse
#define soap_read__ns1__AddObdDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AddObdDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__AddObdDataResponse * SOAP_FMAC2 soap_instantiate__ns1__AddObdDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddObdDataResponse * soap_new__ns1__AddObdDataResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AddObdDataResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__AddObdDataResponse * soap_new_req__ns1__AddObdDataResponse(struct soap *soap) { _ns1__AddObdDataResponse *_p = soap_instantiate__ns1__AddObdDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AddObdDataResponse * soap_new_set__ns1__AddObdDataResponse(struct soap *soap, std::wstring *AddObdDataResult) { _ns1__AddObdDataResponse *_p = soap_instantiate__ns1__AddObdDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AddObdDataResponse::AddObdDataResult = AddObdDataResult; } return _p; }

inline void soap_delete__ns1__AddObdDataResponse(struct soap *soap, _ns1__AddObdDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddObdDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AddObdData
#define SOAP_TYPE__ns1__AddObdData (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddObdData(struct soap*, const char*, int, const _ns1__AddObdData *, const char*);
SOAP_FMAC3 _ns1__AddObdData * SOAP_FMAC4 soap_in__ns1__AddObdData(struct soap*, const char*, _ns1__AddObdData *, const char*);

#ifndef soap_write__ns1__AddObdData
#define soap_write__ns1__AddObdData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:AddObdData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddObdData * SOAP_FMAC4 soap_get__ns1__AddObdData(struct soap*, _ns1__AddObdData *, const char*, const char*);

#ifndef soap_read__ns1__AddObdData
#define soap_read__ns1__AddObdData(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AddObdData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__AddObdData * SOAP_FMAC2 soap_instantiate__ns1__AddObdData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddObdData * soap_new__ns1__AddObdData(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AddObdData(soap, n, NULL, NULL, NULL); }

inline _ns1__AddObdData * soap_new_req__ns1__AddObdData(struct soap *soap) { _ns1__AddObdData *_p = soap_instantiate__ns1__AddObdData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AddObdData * soap_new_set__ns1__AddObdData(struct soap *soap, std::wstring *ObdDataItems) { _ns1__AddObdData *_p = soap_instantiate__ns1__AddObdData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AddObdData::ObdDataItems = ObdDataItems; } return _p; }

inline void soap_delete__ns1__AddObdData(struct soap *soap, _ns1__AddObdData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddObdData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AddCheckDataResponse
#define SOAP_TYPE__ns1__AddCheckDataResponse (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddCheckDataResponse(struct soap*, const char*, int, const _ns1__AddCheckDataResponse *, const char*);
SOAP_FMAC3 _ns1__AddCheckDataResponse * SOAP_FMAC4 soap_in__ns1__AddCheckDataResponse(struct soap*, const char*, _ns1__AddCheckDataResponse *, const char*);

#ifndef soap_write__ns1__AddCheckDataResponse
#define soap_write__ns1__AddCheckDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:AddCheckDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddCheckDataResponse * SOAP_FMAC4 soap_get__ns1__AddCheckDataResponse(struct soap*, _ns1__AddCheckDataResponse *, const char*, const char*);

#ifndef soap_read__ns1__AddCheckDataResponse
#define soap_read__ns1__AddCheckDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AddCheckDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__AddCheckDataResponse * SOAP_FMAC2 soap_instantiate__ns1__AddCheckDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddCheckDataResponse * soap_new__ns1__AddCheckDataResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AddCheckDataResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__AddCheckDataResponse * soap_new_req__ns1__AddCheckDataResponse(struct soap *soap) { _ns1__AddCheckDataResponse *_p = soap_instantiate__ns1__AddCheckDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AddCheckDataResponse * soap_new_set__ns1__AddCheckDataResponse(struct soap *soap, std::wstring *AddCheckDataResult) { _ns1__AddCheckDataResponse *_p = soap_instantiate__ns1__AddCheckDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AddCheckDataResponse::AddCheckDataResult = AddCheckDataResult; } return _p; }

inline void soap_delete__ns1__AddCheckDataResponse(struct soap *soap, _ns1__AddCheckDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddCheckDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AddCheckData
#define SOAP_TYPE__ns1__AddCheckData (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AddCheckData(struct soap*, const char*, int, const _ns1__AddCheckData *, const char*);
SOAP_FMAC3 _ns1__AddCheckData * SOAP_FMAC4 soap_in__ns1__AddCheckData(struct soap*, const char*, _ns1__AddCheckData *, const char*);

#ifndef soap_write__ns1__AddCheckData
#define soap_write__ns1__AddCheckData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:AddCheckData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddCheckData * SOAP_FMAC4 soap_get__ns1__AddCheckData(struct soap*, _ns1__AddCheckData *, const char*, const char*);

#ifndef soap_read__ns1__AddCheckData
#define soap_read__ns1__AddCheckData(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AddCheckData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__AddCheckData * SOAP_FMAC2 soap_instantiate__ns1__AddCheckData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AddCheckData * soap_new__ns1__AddCheckData(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AddCheckData(soap, n, NULL, NULL, NULL); }

inline _ns1__AddCheckData * soap_new_req__ns1__AddCheckData(struct soap *soap) { _ns1__AddCheckData *_p = soap_instantiate__ns1__AddCheckData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AddCheckData * soap_new_set__ns1__AddCheckData(struct soap *soap, std::wstring *CheckDataItems, std::wstring *CheckEndDataItems) { _ns1__AddCheckData *_p = soap_instantiate__ns1__AddCheckData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AddCheckData::CheckDataItems = CheckDataItems; _p->_ns1__AddCheckData::CheckEndDataItems = CheckEndDataItems; } return _p; }

inline void soap_delete__ns1__AddCheckData(struct soap *soap, _ns1__AddCheckData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AddCheckData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__OnlineJudgeResponse
#define SOAP_TYPE__ns1__OnlineJudgeResponse (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__OnlineJudgeResponse(struct soap*, const char*, int, const _ns1__OnlineJudgeResponse *, const char*);
SOAP_FMAC3 _ns1__OnlineJudgeResponse * SOAP_FMAC4 soap_in__ns1__OnlineJudgeResponse(struct soap*, const char*, _ns1__OnlineJudgeResponse *, const char*);

#ifndef soap_write__ns1__OnlineJudgeResponse
#define soap_write__ns1__OnlineJudgeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:OnlineJudgeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__OnlineJudgeResponse * SOAP_FMAC4 soap_get__ns1__OnlineJudgeResponse(struct soap*, _ns1__OnlineJudgeResponse *, const char*, const char*);

#ifndef soap_read__ns1__OnlineJudgeResponse
#define soap_read__ns1__OnlineJudgeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__OnlineJudgeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__OnlineJudgeResponse * SOAP_FMAC2 soap_instantiate__ns1__OnlineJudgeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__OnlineJudgeResponse * soap_new__ns1__OnlineJudgeResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__OnlineJudgeResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__OnlineJudgeResponse * soap_new_req__ns1__OnlineJudgeResponse(struct soap *soap) { _ns1__OnlineJudgeResponse *_p = soap_instantiate__ns1__OnlineJudgeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__OnlineJudgeResponse * soap_new_set__ns1__OnlineJudgeResponse(struct soap *soap, std::wstring *OnlineJudgeResult) { _ns1__OnlineJudgeResponse *_p = soap_instantiate__ns1__OnlineJudgeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__OnlineJudgeResponse::OnlineJudgeResult = OnlineJudgeResult; } return _p; }

inline void soap_delete__ns1__OnlineJudgeResponse(struct soap *soap, _ns1__OnlineJudgeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__OnlineJudgeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__OnlineJudge
#define SOAP_TYPE__ns1__OnlineJudge (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__OnlineJudge(struct soap*, const char*, int, const _ns1__OnlineJudge *, const char*);
SOAP_FMAC3 _ns1__OnlineJudge * SOAP_FMAC4 soap_in__ns1__OnlineJudge(struct soap*, const char*, _ns1__OnlineJudge *, const char*);

#ifndef soap_write__ns1__OnlineJudge
#define soap_write__ns1__OnlineJudge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:OnlineJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__OnlineJudge * SOAP_FMAC4 soap_get__ns1__OnlineJudge(struct soap*, _ns1__OnlineJudge *, const char*, const char*);

#ifndef soap_read__ns1__OnlineJudge
#define soap_read__ns1__OnlineJudge(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__OnlineJudge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__OnlineJudge * SOAP_FMAC2 soap_instantiate__ns1__OnlineJudge(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__OnlineJudge * soap_new__ns1__OnlineJudge(struct soap *soap, int n = -1) { return soap_instantiate__ns1__OnlineJudge(soap, n, NULL, NULL, NULL); }

inline _ns1__OnlineJudge * soap_new_req__ns1__OnlineJudge(struct soap *soap) { _ns1__OnlineJudge *_p = soap_instantiate__ns1__OnlineJudge(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__OnlineJudge * soap_new_set__ns1__OnlineJudge(struct soap *soap, std::wstring *jczNo, std::wstring *jcxNo, std::wstring *bdrq, std::wstring *CarPZ) { _ns1__OnlineJudge *_p = soap_instantiate__ns1__OnlineJudge(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__OnlineJudge::jczNo = jczNo; _p->_ns1__OnlineJudge::jcxNo = jcxNo; _p->_ns1__OnlineJudge::bdrq = bdrq; _p->_ns1__OnlineJudge::CarPZ = CarPZ; } return _p; }

inline void soap_delete__ns1__OnlineJudge(struct soap *soap, _ns1__OnlineJudge *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__OnlineJudge(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__VehicleRegJudgeResponse
#define SOAP_TYPE__ns1__VehicleRegJudgeResponse (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__VehicleRegJudgeResponse(struct soap*, const char*, int, const _ns1__VehicleRegJudgeResponse *, const char*);
SOAP_FMAC3 _ns1__VehicleRegJudgeResponse * SOAP_FMAC4 soap_in__ns1__VehicleRegJudgeResponse(struct soap*, const char*, _ns1__VehicleRegJudgeResponse *, const char*);

#ifndef soap_write__ns1__VehicleRegJudgeResponse
#define soap_write__ns1__VehicleRegJudgeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:VehicleRegJudgeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__VehicleRegJudgeResponse * SOAP_FMAC4 soap_get__ns1__VehicleRegJudgeResponse(struct soap*, _ns1__VehicleRegJudgeResponse *, const char*, const char*);

#ifndef soap_read__ns1__VehicleRegJudgeResponse
#define soap_read__ns1__VehicleRegJudgeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__VehicleRegJudgeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__VehicleRegJudgeResponse * SOAP_FMAC2 soap_instantiate__ns1__VehicleRegJudgeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__VehicleRegJudgeResponse * soap_new__ns1__VehicleRegJudgeResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__VehicleRegJudgeResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__VehicleRegJudgeResponse * soap_new_req__ns1__VehicleRegJudgeResponse(struct soap *soap) { _ns1__VehicleRegJudgeResponse *_p = soap_instantiate__ns1__VehicleRegJudgeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__VehicleRegJudgeResponse * soap_new_set__ns1__VehicleRegJudgeResponse(struct soap *soap, std::wstring *VehicleRegJudgeResult) { _ns1__VehicleRegJudgeResponse *_p = soap_instantiate__ns1__VehicleRegJudgeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__VehicleRegJudgeResponse::VehicleRegJudgeResult = VehicleRegJudgeResult; } return _p; }

inline void soap_delete__ns1__VehicleRegJudgeResponse(struct soap *soap, _ns1__VehicleRegJudgeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__VehicleRegJudgeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__VehicleRegJudge
#define SOAP_TYPE__ns1__VehicleRegJudge (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__VehicleRegJudge(struct soap*, const char*, int, const _ns1__VehicleRegJudge *, const char*);
SOAP_FMAC3 _ns1__VehicleRegJudge * SOAP_FMAC4 soap_in__ns1__VehicleRegJudge(struct soap*, const char*, _ns1__VehicleRegJudge *, const char*);

#ifndef soap_write__ns1__VehicleRegJudge
#define soap_write__ns1__VehicleRegJudge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:VehicleRegJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__VehicleRegJudge * SOAP_FMAC4 soap_get__ns1__VehicleRegJudge(struct soap*, _ns1__VehicleRegJudge *, const char*, const char*);

#ifndef soap_read__ns1__VehicleRegJudge
#define soap_read__ns1__VehicleRegJudge(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__VehicleRegJudge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__VehicleRegJudge * SOAP_FMAC2 soap_instantiate__ns1__VehicleRegJudge(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__VehicleRegJudge * soap_new__ns1__VehicleRegJudge(struct soap *soap, int n = -1) { return soap_instantiate__ns1__VehicleRegJudge(soap, n, NULL, NULL, NULL); }

inline _ns1__VehicleRegJudge * soap_new_req__ns1__VehicleRegJudge(struct soap *soap) { _ns1__VehicleRegJudge *_p = soap_instantiate__ns1__VehicleRegJudge(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__VehicleRegJudge * soap_new_set__ns1__VehicleRegJudge(struct soap *soap, std::wstring *JczId, std::wstring *ZcTime, std::wstring *CarItems) { _ns1__VehicleRegJudge *_p = soap_instantiate__ns1__VehicleRegJudge(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__VehicleRegJudge::JczId = JczId; _p->_ns1__VehicleRegJudge::ZcTime = ZcTime; _p->_ns1__VehicleRegJudge::CarItems = CarItems; } return _p; }

inline void soap_delete__ns1__VehicleRegJudge(struct soap *soap, _ns1__VehicleRegJudge *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__VehicleRegJudge(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (110)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__AddDeviceCheckData_
#define SOAP_TYPE___ns1__AddDeviceCheckData_ (106)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddDeviceCheckData_(struct soap*, struct __ns1__AddDeviceCheckData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddDeviceCheckData_(struct soap*, const struct __ns1__AddDeviceCheckData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddDeviceCheckData_(struct soap*, const char*, int, const struct __ns1__AddDeviceCheckData_ *, const char*);
SOAP_FMAC3 struct __ns1__AddDeviceCheckData_ * SOAP_FMAC4 soap_in___ns1__AddDeviceCheckData_(struct soap*, const char*, struct __ns1__AddDeviceCheckData_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddDeviceCheckData_(struct soap*, const struct __ns1__AddDeviceCheckData_ *, const char*, const char*);

#ifndef soap_write___ns1__AddDeviceCheckData_
#define soap_write___ns1__AddDeviceCheckData_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__AddDeviceCheckData_(soap, data),0) || soap_put___ns1__AddDeviceCheckData_(soap, data, "-ns1:AddDeviceCheckData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__AddDeviceCheckData_ * SOAP_FMAC4 soap_get___ns1__AddDeviceCheckData_(struct soap*, struct __ns1__AddDeviceCheckData_ *, const char*, const char*);

#ifndef soap_read___ns1__AddDeviceCheckData_
#define soap_read___ns1__AddDeviceCheckData_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AddDeviceCheckData_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__AddDeviceCheckData_ * SOAP_FMAC2 soap_instantiate___ns1__AddDeviceCheckData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddDeviceCheckData_ * soap_new___ns1__AddDeviceCheckData_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AddDeviceCheckData_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AddDeviceCheckData_ * soap_new_req___ns1__AddDeviceCheckData_(struct soap *soap) { struct __ns1__AddDeviceCheckData_ *_p = soap_instantiate___ns1__AddDeviceCheckData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddDeviceCheckData_(soap, _p); } return _p; }

inline struct __ns1__AddDeviceCheckData_ * soap_new_set___ns1__AddDeviceCheckData_(struct soap *soap, _ns1__AddDeviceCheckData *ns1__AddDeviceCheckData) { struct __ns1__AddDeviceCheckData_ *_p = soap_instantiate___ns1__AddDeviceCheckData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddDeviceCheckData_(soap, _p); _p->ns1__AddDeviceCheckData = ns1__AddDeviceCheckData; } return _p; }

inline void soap_delete___ns1__AddDeviceCheckData_(struct soap *soap, struct __ns1__AddDeviceCheckData_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddDeviceCheckData_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AddWGJCData_
#define SOAP_TYPE___ns1__AddWGJCData_ (104)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddWGJCData_(struct soap*, struct __ns1__AddWGJCData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddWGJCData_(struct soap*, const struct __ns1__AddWGJCData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddWGJCData_(struct soap*, const char*, int, const struct __ns1__AddWGJCData_ *, const char*);
SOAP_FMAC3 struct __ns1__AddWGJCData_ * SOAP_FMAC4 soap_in___ns1__AddWGJCData_(struct soap*, const char*, struct __ns1__AddWGJCData_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddWGJCData_(struct soap*, const struct __ns1__AddWGJCData_ *, const char*, const char*);

#ifndef soap_write___ns1__AddWGJCData_
#define soap_write___ns1__AddWGJCData_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__AddWGJCData_(soap, data),0) || soap_put___ns1__AddWGJCData_(soap, data, "-ns1:AddWGJCData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__AddWGJCData_ * SOAP_FMAC4 soap_get___ns1__AddWGJCData_(struct soap*, struct __ns1__AddWGJCData_ *, const char*, const char*);

#ifndef soap_read___ns1__AddWGJCData_
#define soap_read___ns1__AddWGJCData_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AddWGJCData_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__AddWGJCData_ * SOAP_FMAC2 soap_instantiate___ns1__AddWGJCData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddWGJCData_ * soap_new___ns1__AddWGJCData_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AddWGJCData_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AddWGJCData_ * soap_new_req___ns1__AddWGJCData_(struct soap *soap) { struct __ns1__AddWGJCData_ *_p = soap_instantiate___ns1__AddWGJCData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddWGJCData_(soap, _p); } return _p; }

inline struct __ns1__AddWGJCData_ * soap_new_set___ns1__AddWGJCData_(struct soap *soap, _ns1__AddWGJCData *ns1__AddWGJCData) { struct __ns1__AddWGJCData_ *_p = soap_instantiate___ns1__AddWGJCData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddWGJCData_(soap, _p); _p->ns1__AddWGJCData = ns1__AddWGJCData; } return _p; }

inline void soap_delete___ns1__AddWGJCData_(struct soap *soap, struct __ns1__AddWGJCData_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddWGJCData_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__LokeJudge_
#define SOAP_TYPE___ns1__LokeJudge_ (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__LokeJudge_(struct soap*, struct __ns1__LokeJudge_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__LokeJudge_(struct soap*, const struct __ns1__LokeJudge_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__LokeJudge_(struct soap*, const char*, int, const struct __ns1__LokeJudge_ *, const char*);
SOAP_FMAC3 struct __ns1__LokeJudge_ * SOAP_FMAC4 soap_in___ns1__LokeJudge_(struct soap*, const char*, struct __ns1__LokeJudge_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__LokeJudge_(struct soap*, const struct __ns1__LokeJudge_ *, const char*, const char*);

#ifndef soap_write___ns1__LokeJudge_
#define soap_write___ns1__LokeJudge_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__LokeJudge_(soap, data),0) || soap_put___ns1__LokeJudge_(soap, data, "-ns1:LokeJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__LokeJudge_ * SOAP_FMAC4 soap_get___ns1__LokeJudge_(struct soap*, struct __ns1__LokeJudge_ *, const char*, const char*);

#ifndef soap_read___ns1__LokeJudge_
#define soap_read___ns1__LokeJudge_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__LokeJudge_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__LokeJudge_ * SOAP_FMAC2 soap_instantiate___ns1__LokeJudge_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__LokeJudge_ * soap_new___ns1__LokeJudge_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__LokeJudge_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__LokeJudge_ * soap_new_req___ns1__LokeJudge_(struct soap *soap) { struct __ns1__LokeJudge_ *_p = soap_instantiate___ns1__LokeJudge_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__LokeJudge_(soap, _p); } return _p; }

inline struct __ns1__LokeJudge_ * soap_new_set___ns1__LokeJudge_(struct soap *soap, _ns1__LokeJudge *ns1__LokeJudge) { struct __ns1__LokeJudge_ *_p = soap_instantiate___ns1__LokeJudge_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__LokeJudge_(soap, _p); _p->ns1__LokeJudge = ns1__LokeJudge; } return _p; }

inline void soap_delete___ns1__LokeJudge_(struct soap *soap, struct __ns1__LokeJudge_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__LokeJudge_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__PrintUp_
#define SOAP_TYPE___ns1__PrintUp_ (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__PrintUp_(struct soap*, struct __ns1__PrintUp_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__PrintUp_(struct soap*, const struct __ns1__PrintUp_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__PrintUp_(struct soap*, const char*, int, const struct __ns1__PrintUp_ *, const char*);
SOAP_FMAC3 struct __ns1__PrintUp_ * SOAP_FMAC4 soap_in___ns1__PrintUp_(struct soap*, const char*, struct __ns1__PrintUp_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__PrintUp_(struct soap*, const struct __ns1__PrintUp_ *, const char*, const char*);

#ifndef soap_write___ns1__PrintUp_
#define soap_write___ns1__PrintUp_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__PrintUp_(soap, data),0) || soap_put___ns1__PrintUp_(soap, data, "-ns1:PrintUp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__PrintUp_ * SOAP_FMAC4 soap_get___ns1__PrintUp_(struct soap*, struct __ns1__PrintUp_ *, const char*, const char*);

#ifndef soap_read___ns1__PrintUp_
#define soap_read___ns1__PrintUp_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__PrintUp_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__PrintUp_ * SOAP_FMAC2 soap_instantiate___ns1__PrintUp_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__PrintUp_ * soap_new___ns1__PrintUp_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__PrintUp_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__PrintUp_ * soap_new_req___ns1__PrintUp_(struct soap *soap) { struct __ns1__PrintUp_ *_p = soap_instantiate___ns1__PrintUp_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__PrintUp_(soap, _p); } return _p; }

inline struct __ns1__PrintUp_ * soap_new_set___ns1__PrintUp_(struct soap *soap, _ns1__PrintUp *ns1__PrintUp) { struct __ns1__PrintUp_ *_p = soap_instantiate___ns1__PrintUp_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__PrintUp_(soap, _p); _p->ns1__PrintUp = ns1__PrintUp; } return _p; }

inline void soap_delete___ns1__PrintUp_(struct soap *soap, struct __ns1__PrintUp_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__PrintUp_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__PrintJudge_
#define SOAP_TYPE___ns1__PrintJudge_ (98)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__PrintJudge_(struct soap*, struct __ns1__PrintJudge_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__PrintJudge_(struct soap*, const struct __ns1__PrintJudge_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__PrintJudge_(struct soap*, const char*, int, const struct __ns1__PrintJudge_ *, const char*);
SOAP_FMAC3 struct __ns1__PrintJudge_ * SOAP_FMAC4 soap_in___ns1__PrintJudge_(struct soap*, const char*, struct __ns1__PrintJudge_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__PrintJudge_(struct soap*, const struct __ns1__PrintJudge_ *, const char*, const char*);

#ifndef soap_write___ns1__PrintJudge_
#define soap_write___ns1__PrintJudge_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__PrintJudge_(soap, data),0) || soap_put___ns1__PrintJudge_(soap, data, "-ns1:PrintJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__PrintJudge_ * SOAP_FMAC4 soap_get___ns1__PrintJudge_(struct soap*, struct __ns1__PrintJudge_ *, const char*, const char*);

#ifndef soap_read___ns1__PrintJudge_
#define soap_read___ns1__PrintJudge_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__PrintJudge_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__PrintJudge_ * SOAP_FMAC2 soap_instantiate___ns1__PrintJudge_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__PrintJudge_ * soap_new___ns1__PrintJudge_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__PrintJudge_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__PrintJudge_ * soap_new_req___ns1__PrintJudge_(struct soap *soap) { struct __ns1__PrintJudge_ *_p = soap_instantiate___ns1__PrintJudge_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__PrintJudge_(soap, _p); } return _p; }

inline struct __ns1__PrintJudge_ * soap_new_set___ns1__PrintJudge_(struct soap *soap, _ns1__PrintJudge *ns1__PrintJudge) { struct __ns1__PrintJudge_ *_p = soap_instantiate___ns1__PrintJudge_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__PrintJudge_(soap, _p); _p->ns1__PrintJudge = ns1__PrintJudge; } return _p; }

inline void soap_delete___ns1__PrintJudge_(struct soap *soap, struct __ns1__PrintJudge_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__PrintJudge_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AddVerify_
#define SOAP_TYPE___ns1__AddVerify_ (96)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddVerify_(struct soap*, struct __ns1__AddVerify_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddVerify_(struct soap*, const struct __ns1__AddVerify_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddVerify_(struct soap*, const char*, int, const struct __ns1__AddVerify_ *, const char*);
SOAP_FMAC3 struct __ns1__AddVerify_ * SOAP_FMAC4 soap_in___ns1__AddVerify_(struct soap*, const char*, struct __ns1__AddVerify_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddVerify_(struct soap*, const struct __ns1__AddVerify_ *, const char*, const char*);

#ifndef soap_write___ns1__AddVerify_
#define soap_write___ns1__AddVerify_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__AddVerify_(soap, data),0) || soap_put___ns1__AddVerify_(soap, data, "-ns1:AddVerify", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__AddVerify_ * SOAP_FMAC4 soap_get___ns1__AddVerify_(struct soap*, struct __ns1__AddVerify_ *, const char*, const char*);

#ifndef soap_read___ns1__AddVerify_
#define soap_read___ns1__AddVerify_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AddVerify_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__AddVerify_ * SOAP_FMAC2 soap_instantiate___ns1__AddVerify_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddVerify_ * soap_new___ns1__AddVerify_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AddVerify_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AddVerify_ * soap_new_req___ns1__AddVerify_(struct soap *soap) { struct __ns1__AddVerify_ *_p = soap_instantiate___ns1__AddVerify_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddVerify_(soap, _p); } return _p; }

inline struct __ns1__AddVerify_ * soap_new_set___ns1__AddVerify_(struct soap *soap, _ns1__AddVerify *ns1__AddVerify) { struct __ns1__AddVerify_ *_p = soap_instantiate___ns1__AddVerify_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddVerify_(soap, _p); _p->ns1__AddVerify = ns1__AddVerify; } return _p; }

inline void soap_delete___ns1__AddVerify_(struct soap *soap, struct __ns1__AddVerify_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddVerify_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__RyzfControl_
#define SOAP_TYPE___ns1__RyzfControl_ (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RyzfControl_(struct soap*, struct __ns1__RyzfControl_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RyzfControl_(struct soap*, const struct __ns1__RyzfControl_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RyzfControl_(struct soap*, const char*, int, const struct __ns1__RyzfControl_ *, const char*);
SOAP_FMAC3 struct __ns1__RyzfControl_ * SOAP_FMAC4 soap_in___ns1__RyzfControl_(struct soap*, const char*, struct __ns1__RyzfControl_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RyzfControl_(struct soap*, const struct __ns1__RyzfControl_ *, const char*, const char*);

#ifndef soap_write___ns1__RyzfControl_
#define soap_write___ns1__RyzfControl_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__RyzfControl_(soap, data),0) || soap_put___ns1__RyzfControl_(soap, data, "-ns1:RyzfControl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__RyzfControl_ * SOAP_FMAC4 soap_get___ns1__RyzfControl_(struct soap*, struct __ns1__RyzfControl_ *, const char*, const char*);

#ifndef soap_read___ns1__RyzfControl_
#define soap_read___ns1__RyzfControl_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__RyzfControl_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__RyzfControl_ * SOAP_FMAC2 soap_instantiate___ns1__RyzfControl_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__RyzfControl_ * soap_new___ns1__RyzfControl_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__RyzfControl_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__RyzfControl_ * soap_new_req___ns1__RyzfControl_(struct soap *soap) { struct __ns1__RyzfControl_ *_p = soap_instantiate___ns1__RyzfControl_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__RyzfControl_(soap, _p); } return _p; }

inline struct __ns1__RyzfControl_ * soap_new_set___ns1__RyzfControl_(struct soap *soap, _ns1__RyzfControl *ns1__RyzfControl) { struct __ns1__RyzfControl_ *_p = soap_instantiate___ns1__RyzfControl_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__RyzfControl_(soap, _p); _p->ns1__RyzfControl = ns1__RyzfControl; } return _p; }

inline void soap_delete___ns1__RyzfControl_(struct soap *soap, struct __ns1__RyzfControl_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RyzfControl_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AddIuprData_
#define SOAP_TYPE___ns1__AddIuprData_ (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddIuprData_(struct soap*, struct __ns1__AddIuprData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddIuprData_(struct soap*, const struct __ns1__AddIuprData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddIuprData_(struct soap*, const char*, int, const struct __ns1__AddIuprData_ *, const char*);
SOAP_FMAC3 struct __ns1__AddIuprData_ * SOAP_FMAC4 soap_in___ns1__AddIuprData_(struct soap*, const char*, struct __ns1__AddIuprData_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddIuprData_(struct soap*, const struct __ns1__AddIuprData_ *, const char*, const char*);

#ifndef soap_write___ns1__AddIuprData_
#define soap_write___ns1__AddIuprData_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__AddIuprData_(soap, data),0) || soap_put___ns1__AddIuprData_(soap, data, "-ns1:AddIuprData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__AddIuprData_ * SOAP_FMAC4 soap_get___ns1__AddIuprData_(struct soap*, struct __ns1__AddIuprData_ *, const char*, const char*);

#ifndef soap_read___ns1__AddIuprData_
#define soap_read___ns1__AddIuprData_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AddIuprData_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__AddIuprData_ * SOAP_FMAC2 soap_instantiate___ns1__AddIuprData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddIuprData_ * soap_new___ns1__AddIuprData_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AddIuprData_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AddIuprData_ * soap_new_req___ns1__AddIuprData_(struct soap *soap) { struct __ns1__AddIuprData_ *_p = soap_instantiate___ns1__AddIuprData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddIuprData_(soap, _p); } return _p; }

inline struct __ns1__AddIuprData_ * soap_new_set___ns1__AddIuprData_(struct soap *soap, _ns1__AddIuprData *ns1__AddIuprData) { struct __ns1__AddIuprData_ *_p = soap_instantiate___ns1__AddIuprData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddIuprData_(soap, _p); _p->ns1__AddIuprData = ns1__AddIuprData; } return _p; }

inline void soap_delete___ns1__AddIuprData_(struct soap *soap, struct __ns1__AddIuprData_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddIuprData_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AddObdData_
#define SOAP_TYPE___ns1__AddObdData_ (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddObdData_(struct soap*, struct __ns1__AddObdData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddObdData_(struct soap*, const struct __ns1__AddObdData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddObdData_(struct soap*, const char*, int, const struct __ns1__AddObdData_ *, const char*);
SOAP_FMAC3 struct __ns1__AddObdData_ * SOAP_FMAC4 soap_in___ns1__AddObdData_(struct soap*, const char*, struct __ns1__AddObdData_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddObdData_(struct soap*, const struct __ns1__AddObdData_ *, const char*, const char*);

#ifndef soap_write___ns1__AddObdData_
#define soap_write___ns1__AddObdData_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__AddObdData_(soap, data),0) || soap_put___ns1__AddObdData_(soap, data, "-ns1:AddObdData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__AddObdData_ * SOAP_FMAC4 soap_get___ns1__AddObdData_(struct soap*, struct __ns1__AddObdData_ *, const char*, const char*);

#ifndef soap_read___ns1__AddObdData_
#define soap_read___ns1__AddObdData_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AddObdData_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__AddObdData_ * SOAP_FMAC2 soap_instantiate___ns1__AddObdData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddObdData_ * soap_new___ns1__AddObdData_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AddObdData_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AddObdData_ * soap_new_req___ns1__AddObdData_(struct soap *soap) { struct __ns1__AddObdData_ *_p = soap_instantiate___ns1__AddObdData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddObdData_(soap, _p); } return _p; }

inline struct __ns1__AddObdData_ * soap_new_set___ns1__AddObdData_(struct soap *soap, _ns1__AddObdData *ns1__AddObdData) { struct __ns1__AddObdData_ *_p = soap_instantiate___ns1__AddObdData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddObdData_(soap, _p); _p->ns1__AddObdData = ns1__AddObdData; } return _p; }

inline void soap_delete___ns1__AddObdData_(struct soap *soap, struct __ns1__AddObdData_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddObdData_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AddCheckData_
#define SOAP_TYPE___ns1__AddCheckData_ (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddCheckData_(struct soap*, struct __ns1__AddCheckData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddCheckData_(struct soap*, const struct __ns1__AddCheckData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddCheckData_(struct soap*, const char*, int, const struct __ns1__AddCheckData_ *, const char*);
SOAP_FMAC3 struct __ns1__AddCheckData_ * SOAP_FMAC4 soap_in___ns1__AddCheckData_(struct soap*, const char*, struct __ns1__AddCheckData_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddCheckData_(struct soap*, const struct __ns1__AddCheckData_ *, const char*, const char*);

#ifndef soap_write___ns1__AddCheckData_
#define soap_write___ns1__AddCheckData_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__AddCheckData_(soap, data),0) || soap_put___ns1__AddCheckData_(soap, data, "-ns1:AddCheckData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__AddCheckData_ * SOAP_FMAC4 soap_get___ns1__AddCheckData_(struct soap*, struct __ns1__AddCheckData_ *, const char*, const char*);

#ifndef soap_read___ns1__AddCheckData_
#define soap_read___ns1__AddCheckData_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AddCheckData_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__AddCheckData_ * SOAP_FMAC2 soap_instantiate___ns1__AddCheckData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddCheckData_ * soap_new___ns1__AddCheckData_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AddCheckData_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AddCheckData_ * soap_new_req___ns1__AddCheckData_(struct soap *soap) { struct __ns1__AddCheckData_ *_p = soap_instantiate___ns1__AddCheckData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddCheckData_(soap, _p); } return _p; }

inline struct __ns1__AddCheckData_ * soap_new_set___ns1__AddCheckData_(struct soap *soap, _ns1__AddCheckData *ns1__AddCheckData) { struct __ns1__AddCheckData_ *_p = soap_instantiate___ns1__AddCheckData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddCheckData_(soap, _p); _p->ns1__AddCheckData = ns1__AddCheckData; } return _p; }

inline void soap_delete___ns1__AddCheckData_(struct soap *soap, struct __ns1__AddCheckData_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddCheckData_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__OnlineJudge_
#define SOAP_TYPE___ns1__OnlineJudge_ (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__OnlineJudge_(struct soap*, struct __ns1__OnlineJudge_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__OnlineJudge_(struct soap*, const struct __ns1__OnlineJudge_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__OnlineJudge_(struct soap*, const char*, int, const struct __ns1__OnlineJudge_ *, const char*);
SOAP_FMAC3 struct __ns1__OnlineJudge_ * SOAP_FMAC4 soap_in___ns1__OnlineJudge_(struct soap*, const char*, struct __ns1__OnlineJudge_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__OnlineJudge_(struct soap*, const struct __ns1__OnlineJudge_ *, const char*, const char*);

#ifndef soap_write___ns1__OnlineJudge_
#define soap_write___ns1__OnlineJudge_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__OnlineJudge_(soap, data),0) || soap_put___ns1__OnlineJudge_(soap, data, "-ns1:OnlineJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__OnlineJudge_ * SOAP_FMAC4 soap_get___ns1__OnlineJudge_(struct soap*, struct __ns1__OnlineJudge_ *, const char*, const char*);

#ifndef soap_read___ns1__OnlineJudge_
#define soap_read___ns1__OnlineJudge_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__OnlineJudge_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__OnlineJudge_ * SOAP_FMAC2 soap_instantiate___ns1__OnlineJudge_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__OnlineJudge_ * soap_new___ns1__OnlineJudge_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__OnlineJudge_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__OnlineJudge_ * soap_new_req___ns1__OnlineJudge_(struct soap *soap) { struct __ns1__OnlineJudge_ *_p = soap_instantiate___ns1__OnlineJudge_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__OnlineJudge_(soap, _p); } return _p; }

inline struct __ns1__OnlineJudge_ * soap_new_set___ns1__OnlineJudge_(struct soap *soap, _ns1__OnlineJudge *ns1__OnlineJudge) { struct __ns1__OnlineJudge_ *_p = soap_instantiate___ns1__OnlineJudge_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__OnlineJudge_(soap, _p); _p->ns1__OnlineJudge = ns1__OnlineJudge; } return _p; }

inline void soap_delete___ns1__OnlineJudge_(struct soap *soap, struct __ns1__OnlineJudge_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__OnlineJudge_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__VehicleRegJudge_
#define SOAP_TYPE___ns1__VehicleRegJudge_ (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__VehicleRegJudge_(struct soap*, struct __ns1__VehicleRegJudge_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__VehicleRegJudge_(struct soap*, const struct __ns1__VehicleRegJudge_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__VehicleRegJudge_(struct soap*, const char*, int, const struct __ns1__VehicleRegJudge_ *, const char*);
SOAP_FMAC3 struct __ns1__VehicleRegJudge_ * SOAP_FMAC4 soap_in___ns1__VehicleRegJudge_(struct soap*, const char*, struct __ns1__VehicleRegJudge_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__VehicleRegJudge_(struct soap*, const struct __ns1__VehicleRegJudge_ *, const char*, const char*);

#ifndef soap_write___ns1__VehicleRegJudge_
#define soap_write___ns1__VehicleRegJudge_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__VehicleRegJudge_(soap, data),0) || soap_put___ns1__VehicleRegJudge_(soap, data, "-ns1:VehicleRegJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__VehicleRegJudge_ * SOAP_FMAC4 soap_get___ns1__VehicleRegJudge_(struct soap*, struct __ns1__VehicleRegJudge_ *, const char*, const char*);

#ifndef soap_read___ns1__VehicleRegJudge_
#define soap_read___ns1__VehicleRegJudge_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__VehicleRegJudge_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__VehicleRegJudge_ * SOAP_FMAC2 soap_instantiate___ns1__VehicleRegJudge_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__VehicleRegJudge_ * soap_new___ns1__VehicleRegJudge_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__VehicleRegJudge_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__VehicleRegJudge_ * soap_new_req___ns1__VehicleRegJudge_(struct soap *soap) { struct __ns1__VehicleRegJudge_ *_p = soap_instantiate___ns1__VehicleRegJudge_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__VehicleRegJudge_(soap, _p); } return _p; }

inline struct __ns1__VehicleRegJudge_ * soap_new_set___ns1__VehicleRegJudge_(struct soap *soap, _ns1__VehicleRegJudge *ns1__VehicleRegJudge) { struct __ns1__VehicleRegJudge_ *_p = soap_instantiate___ns1__VehicleRegJudge_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__VehicleRegJudge_(soap, _p); _p->ns1__VehicleRegJudge = ns1__VehicleRegJudge; } return _p; }

inline void soap_delete___ns1__VehicleRegJudge_(struct soap *soap, struct __ns1__VehicleRegJudge_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__VehicleRegJudge_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AddDeviceCheckData
#define SOAP_TYPE___ns1__AddDeviceCheckData (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddDeviceCheckData(struct soap*, struct __ns1__AddDeviceCheckData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddDeviceCheckData(struct soap*, const struct __ns1__AddDeviceCheckData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddDeviceCheckData(struct soap*, const char*, int, const struct __ns1__AddDeviceCheckData *, const char*);
SOAP_FMAC3 struct __ns1__AddDeviceCheckData * SOAP_FMAC4 soap_in___ns1__AddDeviceCheckData(struct soap*, const char*, struct __ns1__AddDeviceCheckData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddDeviceCheckData(struct soap*, const struct __ns1__AddDeviceCheckData *, const char*, const char*);

#ifndef soap_write___ns1__AddDeviceCheckData
#define soap_write___ns1__AddDeviceCheckData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__AddDeviceCheckData(soap, data),0) || soap_put___ns1__AddDeviceCheckData(soap, data, "-ns1:AddDeviceCheckData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__AddDeviceCheckData * SOAP_FMAC4 soap_get___ns1__AddDeviceCheckData(struct soap*, struct __ns1__AddDeviceCheckData *, const char*, const char*);

#ifndef soap_read___ns1__AddDeviceCheckData
#define soap_read___ns1__AddDeviceCheckData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AddDeviceCheckData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__AddDeviceCheckData * SOAP_FMAC2 soap_instantiate___ns1__AddDeviceCheckData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddDeviceCheckData * soap_new___ns1__AddDeviceCheckData(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AddDeviceCheckData(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AddDeviceCheckData * soap_new_req___ns1__AddDeviceCheckData(struct soap *soap) { struct __ns1__AddDeviceCheckData *_p = soap_instantiate___ns1__AddDeviceCheckData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddDeviceCheckData(soap, _p); } return _p; }

inline struct __ns1__AddDeviceCheckData * soap_new_set___ns1__AddDeviceCheckData(struct soap *soap, _ns1__AddDeviceCheckData *ns1__AddDeviceCheckData) { struct __ns1__AddDeviceCheckData *_p = soap_instantiate___ns1__AddDeviceCheckData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddDeviceCheckData(soap, _p); _p->ns1__AddDeviceCheckData = ns1__AddDeviceCheckData; } return _p; }

inline void soap_delete___ns1__AddDeviceCheckData(struct soap *soap, struct __ns1__AddDeviceCheckData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddDeviceCheckData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AddWGJCData
#define SOAP_TYPE___ns1__AddWGJCData (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddWGJCData(struct soap*, struct __ns1__AddWGJCData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddWGJCData(struct soap*, const struct __ns1__AddWGJCData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddWGJCData(struct soap*, const char*, int, const struct __ns1__AddWGJCData *, const char*);
SOAP_FMAC3 struct __ns1__AddWGJCData * SOAP_FMAC4 soap_in___ns1__AddWGJCData(struct soap*, const char*, struct __ns1__AddWGJCData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddWGJCData(struct soap*, const struct __ns1__AddWGJCData *, const char*, const char*);

#ifndef soap_write___ns1__AddWGJCData
#define soap_write___ns1__AddWGJCData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__AddWGJCData(soap, data),0) || soap_put___ns1__AddWGJCData(soap, data, "-ns1:AddWGJCData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__AddWGJCData * SOAP_FMAC4 soap_get___ns1__AddWGJCData(struct soap*, struct __ns1__AddWGJCData *, const char*, const char*);

#ifndef soap_read___ns1__AddWGJCData
#define soap_read___ns1__AddWGJCData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AddWGJCData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__AddWGJCData * SOAP_FMAC2 soap_instantiate___ns1__AddWGJCData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddWGJCData * soap_new___ns1__AddWGJCData(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AddWGJCData(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AddWGJCData * soap_new_req___ns1__AddWGJCData(struct soap *soap) { struct __ns1__AddWGJCData *_p = soap_instantiate___ns1__AddWGJCData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddWGJCData(soap, _p); } return _p; }

inline struct __ns1__AddWGJCData * soap_new_set___ns1__AddWGJCData(struct soap *soap, _ns1__AddWGJCData *ns1__AddWGJCData) { struct __ns1__AddWGJCData *_p = soap_instantiate___ns1__AddWGJCData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddWGJCData(soap, _p); _p->ns1__AddWGJCData = ns1__AddWGJCData; } return _p; }

inline void soap_delete___ns1__AddWGJCData(struct soap *soap, struct __ns1__AddWGJCData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddWGJCData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__LokeJudge
#define SOAP_TYPE___ns1__LokeJudge (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__LokeJudge(struct soap*, struct __ns1__LokeJudge *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__LokeJudge(struct soap*, const struct __ns1__LokeJudge *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__LokeJudge(struct soap*, const char*, int, const struct __ns1__LokeJudge *, const char*);
SOAP_FMAC3 struct __ns1__LokeJudge * SOAP_FMAC4 soap_in___ns1__LokeJudge(struct soap*, const char*, struct __ns1__LokeJudge *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__LokeJudge(struct soap*, const struct __ns1__LokeJudge *, const char*, const char*);

#ifndef soap_write___ns1__LokeJudge
#define soap_write___ns1__LokeJudge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__LokeJudge(soap, data),0) || soap_put___ns1__LokeJudge(soap, data, "-ns1:LokeJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__LokeJudge * SOAP_FMAC4 soap_get___ns1__LokeJudge(struct soap*, struct __ns1__LokeJudge *, const char*, const char*);

#ifndef soap_read___ns1__LokeJudge
#define soap_read___ns1__LokeJudge(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__LokeJudge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__LokeJudge * SOAP_FMAC2 soap_instantiate___ns1__LokeJudge(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__LokeJudge * soap_new___ns1__LokeJudge(struct soap *soap, int n = -1) { return soap_instantiate___ns1__LokeJudge(soap, n, NULL, NULL, NULL); }

inline struct __ns1__LokeJudge * soap_new_req___ns1__LokeJudge(struct soap *soap) { struct __ns1__LokeJudge *_p = soap_instantiate___ns1__LokeJudge(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__LokeJudge(soap, _p); } return _p; }

inline struct __ns1__LokeJudge * soap_new_set___ns1__LokeJudge(struct soap *soap, _ns1__LokeJudge *ns1__LokeJudge) { struct __ns1__LokeJudge *_p = soap_instantiate___ns1__LokeJudge(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__LokeJudge(soap, _p); _p->ns1__LokeJudge = ns1__LokeJudge; } return _p; }

inline void soap_delete___ns1__LokeJudge(struct soap *soap, struct __ns1__LokeJudge *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__LokeJudge(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__PrintUp
#define SOAP_TYPE___ns1__PrintUp (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__PrintUp(struct soap*, struct __ns1__PrintUp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__PrintUp(struct soap*, const struct __ns1__PrintUp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__PrintUp(struct soap*, const char*, int, const struct __ns1__PrintUp *, const char*);
SOAP_FMAC3 struct __ns1__PrintUp * SOAP_FMAC4 soap_in___ns1__PrintUp(struct soap*, const char*, struct __ns1__PrintUp *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__PrintUp(struct soap*, const struct __ns1__PrintUp *, const char*, const char*);

#ifndef soap_write___ns1__PrintUp
#define soap_write___ns1__PrintUp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__PrintUp(soap, data),0) || soap_put___ns1__PrintUp(soap, data, "-ns1:PrintUp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__PrintUp * SOAP_FMAC4 soap_get___ns1__PrintUp(struct soap*, struct __ns1__PrintUp *, const char*, const char*);

#ifndef soap_read___ns1__PrintUp
#define soap_read___ns1__PrintUp(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__PrintUp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__PrintUp * SOAP_FMAC2 soap_instantiate___ns1__PrintUp(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__PrintUp * soap_new___ns1__PrintUp(struct soap *soap, int n = -1) { return soap_instantiate___ns1__PrintUp(soap, n, NULL, NULL, NULL); }

inline struct __ns1__PrintUp * soap_new_req___ns1__PrintUp(struct soap *soap) { struct __ns1__PrintUp *_p = soap_instantiate___ns1__PrintUp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__PrintUp(soap, _p); } return _p; }

inline struct __ns1__PrintUp * soap_new_set___ns1__PrintUp(struct soap *soap, _ns1__PrintUp *ns1__PrintUp) { struct __ns1__PrintUp *_p = soap_instantiate___ns1__PrintUp(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__PrintUp(soap, _p); _p->ns1__PrintUp = ns1__PrintUp; } return _p; }

inline void soap_delete___ns1__PrintUp(struct soap *soap, struct __ns1__PrintUp *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__PrintUp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__PrintJudge
#define SOAP_TYPE___ns1__PrintJudge (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__PrintJudge(struct soap*, struct __ns1__PrintJudge *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__PrintJudge(struct soap*, const struct __ns1__PrintJudge *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__PrintJudge(struct soap*, const char*, int, const struct __ns1__PrintJudge *, const char*);
SOAP_FMAC3 struct __ns1__PrintJudge * SOAP_FMAC4 soap_in___ns1__PrintJudge(struct soap*, const char*, struct __ns1__PrintJudge *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__PrintJudge(struct soap*, const struct __ns1__PrintJudge *, const char*, const char*);

#ifndef soap_write___ns1__PrintJudge
#define soap_write___ns1__PrintJudge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__PrintJudge(soap, data),0) || soap_put___ns1__PrintJudge(soap, data, "-ns1:PrintJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__PrintJudge * SOAP_FMAC4 soap_get___ns1__PrintJudge(struct soap*, struct __ns1__PrintJudge *, const char*, const char*);

#ifndef soap_read___ns1__PrintJudge
#define soap_read___ns1__PrintJudge(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__PrintJudge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__PrintJudge * SOAP_FMAC2 soap_instantiate___ns1__PrintJudge(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__PrintJudge * soap_new___ns1__PrintJudge(struct soap *soap, int n = -1) { return soap_instantiate___ns1__PrintJudge(soap, n, NULL, NULL, NULL); }

inline struct __ns1__PrintJudge * soap_new_req___ns1__PrintJudge(struct soap *soap) { struct __ns1__PrintJudge *_p = soap_instantiate___ns1__PrintJudge(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__PrintJudge(soap, _p); } return _p; }

inline struct __ns1__PrintJudge * soap_new_set___ns1__PrintJudge(struct soap *soap, _ns1__PrintJudge *ns1__PrintJudge) { struct __ns1__PrintJudge *_p = soap_instantiate___ns1__PrintJudge(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__PrintJudge(soap, _p); _p->ns1__PrintJudge = ns1__PrintJudge; } return _p; }

inline void soap_delete___ns1__PrintJudge(struct soap *soap, struct __ns1__PrintJudge *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__PrintJudge(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AddVerify
#define SOAP_TYPE___ns1__AddVerify (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddVerify(struct soap*, struct __ns1__AddVerify *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddVerify(struct soap*, const struct __ns1__AddVerify *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddVerify(struct soap*, const char*, int, const struct __ns1__AddVerify *, const char*);
SOAP_FMAC3 struct __ns1__AddVerify * SOAP_FMAC4 soap_in___ns1__AddVerify(struct soap*, const char*, struct __ns1__AddVerify *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddVerify(struct soap*, const struct __ns1__AddVerify *, const char*, const char*);

#ifndef soap_write___ns1__AddVerify
#define soap_write___ns1__AddVerify(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__AddVerify(soap, data),0) || soap_put___ns1__AddVerify(soap, data, "-ns1:AddVerify", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__AddVerify * SOAP_FMAC4 soap_get___ns1__AddVerify(struct soap*, struct __ns1__AddVerify *, const char*, const char*);

#ifndef soap_read___ns1__AddVerify
#define soap_read___ns1__AddVerify(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AddVerify(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__AddVerify * SOAP_FMAC2 soap_instantiate___ns1__AddVerify(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddVerify * soap_new___ns1__AddVerify(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AddVerify(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AddVerify * soap_new_req___ns1__AddVerify(struct soap *soap) { struct __ns1__AddVerify *_p = soap_instantiate___ns1__AddVerify(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddVerify(soap, _p); } return _p; }

inline struct __ns1__AddVerify * soap_new_set___ns1__AddVerify(struct soap *soap, _ns1__AddVerify *ns1__AddVerify) { struct __ns1__AddVerify *_p = soap_instantiate___ns1__AddVerify(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddVerify(soap, _p); _p->ns1__AddVerify = ns1__AddVerify; } return _p; }

inline void soap_delete___ns1__AddVerify(struct soap *soap, struct __ns1__AddVerify *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddVerify(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__RyzfControl
#define SOAP_TYPE___ns1__RyzfControl (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__RyzfControl(struct soap*, struct __ns1__RyzfControl *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__RyzfControl(struct soap*, const struct __ns1__RyzfControl *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__RyzfControl(struct soap*, const char*, int, const struct __ns1__RyzfControl *, const char*);
SOAP_FMAC3 struct __ns1__RyzfControl * SOAP_FMAC4 soap_in___ns1__RyzfControl(struct soap*, const char*, struct __ns1__RyzfControl *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__RyzfControl(struct soap*, const struct __ns1__RyzfControl *, const char*, const char*);

#ifndef soap_write___ns1__RyzfControl
#define soap_write___ns1__RyzfControl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__RyzfControl(soap, data),0) || soap_put___ns1__RyzfControl(soap, data, "-ns1:RyzfControl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__RyzfControl * SOAP_FMAC4 soap_get___ns1__RyzfControl(struct soap*, struct __ns1__RyzfControl *, const char*, const char*);

#ifndef soap_read___ns1__RyzfControl
#define soap_read___ns1__RyzfControl(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__RyzfControl(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__RyzfControl * SOAP_FMAC2 soap_instantiate___ns1__RyzfControl(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__RyzfControl * soap_new___ns1__RyzfControl(struct soap *soap, int n = -1) { return soap_instantiate___ns1__RyzfControl(soap, n, NULL, NULL, NULL); }

inline struct __ns1__RyzfControl * soap_new_req___ns1__RyzfControl(struct soap *soap) { struct __ns1__RyzfControl *_p = soap_instantiate___ns1__RyzfControl(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__RyzfControl(soap, _p); } return _p; }

inline struct __ns1__RyzfControl * soap_new_set___ns1__RyzfControl(struct soap *soap, _ns1__RyzfControl *ns1__RyzfControl) { struct __ns1__RyzfControl *_p = soap_instantiate___ns1__RyzfControl(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__RyzfControl(soap, _p); _p->ns1__RyzfControl = ns1__RyzfControl; } return _p; }

inline void soap_delete___ns1__RyzfControl(struct soap *soap, struct __ns1__RyzfControl *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__RyzfControl(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AddIuprData
#define SOAP_TYPE___ns1__AddIuprData (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddIuprData(struct soap*, struct __ns1__AddIuprData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddIuprData(struct soap*, const struct __ns1__AddIuprData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddIuprData(struct soap*, const char*, int, const struct __ns1__AddIuprData *, const char*);
SOAP_FMAC3 struct __ns1__AddIuprData * SOAP_FMAC4 soap_in___ns1__AddIuprData(struct soap*, const char*, struct __ns1__AddIuprData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddIuprData(struct soap*, const struct __ns1__AddIuprData *, const char*, const char*);

#ifndef soap_write___ns1__AddIuprData
#define soap_write___ns1__AddIuprData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__AddIuprData(soap, data),0) || soap_put___ns1__AddIuprData(soap, data, "-ns1:AddIuprData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__AddIuprData * SOAP_FMAC4 soap_get___ns1__AddIuprData(struct soap*, struct __ns1__AddIuprData *, const char*, const char*);

#ifndef soap_read___ns1__AddIuprData
#define soap_read___ns1__AddIuprData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AddIuprData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__AddIuprData * SOAP_FMAC2 soap_instantiate___ns1__AddIuprData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddIuprData * soap_new___ns1__AddIuprData(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AddIuprData(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AddIuprData * soap_new_req___ns1__AddIuprData(struct soap *soap) { struct __ns1__AddIuprData *_p = soap_instantiate___ns1__AddIuprData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddIuprData(soap, _p); } return _p; }

inline struct __ns1__AddIuprData * soap_new_set___ns1__AddIuprData(struct soap *soap, _ns1__AddIuprData *ns1__AddIuprData) { struct __ns1__AddIuprData *_p = soap_instantiate___ns1__AddIuprData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddIuprData(soap, _p); _p->ns1__AddIuprData = ns1__AddIuprData; } return _p; }

inline void soap_delete___ns1__AddIuprData(struct soap *soap, struct __ns1__AddIuprData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddIuprData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AddObdData
#define SOAP_TYPE___ns1__AddObdData (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddObdData(struct soap*, struct __ns1__AddObdData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddObdData(struct soap*, const struct __ns1__AddObdData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddObdData(struct soap*, const char*, int, const struct __ns1__AddObdData *, const char*);
SOAP_FMAC3 struct __ns1__AddObdData * SOAP_FMAC4 soap_in___ns1__AddObdData(struct soap*, const char*, struct __ns1__AddObdData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddObdData(struct soap*, const struct __ns1__AddObdData *, const char*, const char*);

#ifndef soap_write___ns1__AddObdData
#define soap_write___ns1__AddObdData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__AddObdData(soap, data),0) || soap_put___ns1__AddObdData(soap, data, "-ns1:AddObdData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__AddObdData * SOAP_FMAC4 soap_get___ns1__AddObdData(struct soap*, struct __ns1__AddObdData *, const char*, const char*);

#ifndef soap_read___ns1__AddObdData
#define soap_read___ns1__AddObdData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AddObdData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__AddObdData * SOAP_FMAC2 soap_instantiate___ns1__AddObdData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddObdData * soap_new___ns1__AddObdData(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AddObdData(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AddObdData * soap_new_req___ns1__AddObdData(struct soap *soap) { struct __ns1__AddObdData *_p = soap_instantiate___ns1__AddObdData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddObdData(soap, _p); } return _p; }

inline struct __ns1__AddObdData * soap_new_set___ns1__AddObdData(struct soap *soap, _ns1__AddObdData *ns1__AddObdData) { struct __ns1__AddObdData *_p = soap_instantiate___ns1__AddObdData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddObdData(soap, _p); _p->ns1__AddObdData = ns1__AddObdData; } return _p; }

inline void soap_delete___ns1__AddObdData(struct soap *soap, struct __ns1__AddObdData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddObdData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__AddCheckData
#define SOAP_TYPE___ns1__AddCheckData (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__AddCheckData(struct soap*, struct __ns1__AddCheckData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__AddCheckData(struct soap*, const struct __ns1__AddCheckData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__AddCheckData(struct soap*, const char*, int, const struct __ns1__AddCheckData *, const char*);
SOAP_FMAC3 struct __ns1__AddCheckData * SOAP_FMAC4 soap_in___ns1__AddCheckData(struct soap*, const char*, struct __ns1__AddCheckData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__AddCheckData(struct soap*, const struct __ns1__AddCheckData *, const char*, const char*);

#ifndef soap_write___ns1__AddCheckData
#define soap_write___ns1__AddCheckData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__AddCheckData(soap, data),0) || soap_put___ns1__AddCheckData(soap, data, "-ns1:AddCheckData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__AddCheckData * SOAP_FMAC4 soap_get___ns1__AddCheckData(struct soap*, struct __ns1__AddCheckData *, const char*, const char*);

#ifndef soap_read___ns1__AddCheckData
#define soap_read___ns1__AddCheckData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__AddCheckData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__AddCheckData * SOAP_FMAC2 soap_instantiate___ns1__AddCheckData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__AddCheckData * soap_new___ns1__AddCheckData(struct soap *soap, int n = -1) { return soap_instantiate___ns1__AddCheckData(soap, n, NULL, NULL, NULL); }

inline struct __ns1__AddCheckData * soap_new_req___ns1__AddCheckData(struct soap *soap) { struct __ns1__AddCheckData *_p = soap_instantiate___ns1__AddCheckData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddCheckData(soap, _p); } return _p; }

inline struct __ns1__AddCheckData * soap_new_set___ns1__AddCheckData(struct soap *soap, _ns1__AddCheckData *ns1__AddCheckData) { struct __ns1__AddCheckData *_p = soap_instantiate___ns1__AddCheckData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__AddCheckData(soap, _p); _p->ns1__AddCheckData = ns1__AddCheckData; } return _p; }

inline void soap_delete___ns1__AddCheckData(struct soap *soap, struct __ns1__AddCheckData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__AddCheckData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__OnlineJudge
#define SOAP_TYPE___ns1__OnlineJudge (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__OnlineJudge(struct soap*, struct __ns1__OnlineJudge *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__OnlineJudge(struct soap*, const struct __ns1__OnlineJudge *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__OnlineJudge(struct soap*, const char*, int, const struct __ns1__OnlineJudge *, const char*);
SOAP_FMAC3 struct __ns1__OnlineJudge * SOAP_FMAC4 soap_in___ns1__OnlineJudge(struct soap*, const char*, struct __ns1__OnlineJudge *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__OnlineJudge(struct soap*, const struct __ns1__OnlineJudge *, const char*, const char*);

#ifndef soap_write___ns1__OnlineJudge
#define soap_write___ns1__OnlineJudge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__OnlineJudge(soap, data),0) || soap_put___ns1__OnlineJudge(soap, data, "-ns1:OnlineJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__OnlineJudge * SOAP_FMAC4 soap_get___ns1__OnlineJudge(struct soap*, struct __ns1__OnlineJudge *, const char*, const char*);

#ifndef soap_read___ns1__OnlineJudge
#define soap_read___ns1__OnlineJudge(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__OnlineJudge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__OnlineJudge * SOAP_FMAC2 soap_instantiate___ns1__OnlineJudge(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__OnlineJudge * soap_new___ns1__OnlineJudge(struct soap *soap, int n = -1) { return soap_instantiate___ns1__OnlineJudge(soap, n, NULL, NULL, NULL); }

inline struct __ns1__OnlineJudge * soap_new_req___ns1__OnlineJudge(struct soap *soap) { struct __ns1__OnlineJudge *_p = soap_instantiate___ns1__OnlineJudge(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__OnlineJudge(soap, _p); } return _p; }

inline struct __ns1__OnlineJudge * soap_new_set___ns1__OnlineJudge(struct soap *soap, _ns1__OnlineJudge *ns1__OnlineJudge) { struct __ns1__OnlineJudge *_p = soap_instantiate___ns1__OnlineJudge(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__OnlineJudge(soap, _p); _p->ns1__OnlineJudge = ns1__OnlineJudge; } return _p; }

inline void soap_delete___ns1__OnlineJudge(struct soap *soap, struct __ns1__OnlineJudge *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__OnlineJudge(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__VehicleRegJudge
#define SOAP_TYPE___ns1__VehicleRegJudge (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__VehicleRegJudge(struct soap*, struct __ns1__VehicleRegJudge *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__VehicleRegJudge(struct soap*, const struct __ns1__VehicleRegJudge *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__VehicleRegJudge(struct soap*, const char*, int, const struct __ns1__VehicleRegJudge *, const char*);
SOAP_FMAC3 struct __ns1__VehicleRegJudge * SOAP_FMAC4 soap_in___ns1__VehicleRegJudge(struct soap*, const char*, struct __ns1__VehicleRegJudge *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__VehicleRegJudge(struct soap*, const struct __ns1__VehicleRegJudge *, const char*, const char*);

#ifndef soap_write___ns1__VehicleRegJudge
#define soap_write___ns1__VehicleRegJudge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__VehicleRegJudge(soap, data),0) || soap_put___ns1__VehicleRegJudge(soap, data, "-ns1:VehicleRegJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__VehicleRegJudge * SOAP_FMAC4 soap_get___ns1__VehicleRegJudge(struct soap*, struct __ns1__VehicleRegJudge *, const char*, const char*);

#ifndef soap_read___ns1__VehicleRegJudge
#define soap_read___ns1__VehicleRegJudge(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__VehicleRegJudge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__VehicleRegJudge * SOAP_FMAC2 soap_instantiate___ns1__VehicleRegJudge(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__VehicleRegJudge * soap_new___ns1__VehicleRegJudge(struct soap *soap, int n = -1) { return soap_instantiate___ns1__VehicleRegJudge(soap, n, NULL, NULL, NULL); }

inline struct __ns1__VehicleRegJudge * soap_new_req___ns1__VehicleRegJudge(struct soap *soap) { struct __ns1__VehicleRegJudge *_p = soap_instantiate___ns1__VehicleRegJudge(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__VehicleRegJudge(soap, _p); } return _p; }

inline struct __ns1__VehicleRegJudge * soap_new_set___ns1__VehicleRegJudge(struct soap *soap, _ns1__VehicleRegJudge *ns1__VehicleRegJudge) { struct __ns1__VehicleRegJudge *_p = soap_instantiate___ns1__VehicleRegJudge(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__VehicleRegJudge(soap, _p); _p->ns1__VehicleRegJudge = ns1__VehicleRegJudge; } return _p; }

inline void soap_delete___ns1__VehicleRegJudge(struct soap *soap, struct __ns1__VehicleRegJudge *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__VehicleRegJudge(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (116)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (109)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__AddDeviceCheckData
#define SOAP_TYPE_PointerTo_ns1__AddDeviceCheckData (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AddDeviceCheckData(struct soap*, _ns1__AddDeviceCheckData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AddDeviceCheckData(struct soap*, const char *, int, _ns1__AddDeviceCheckData *const*, const char *);
SOAP_FMAC3 _ns1__AddDeviceCheckData ** SOAP_FMAC4 soap_in_PointerTo_ns1__AddDeviceCheckData(struct soap*, const char*, _ns1__AddDeviceCheckData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AddDeviceCheckData(struct soap*, _ns1__AddDeviceCheckData *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__AddDeviceCheckData
#define soap_write_PointerTo_ns1__AddDeviceCheckData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__AddDeviceCheckData(soap, data),0) || soap_put_PointerTo_ns1__AddDeviceCheckData(soap, data, "ns1:AddDeviceCheckData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddDeviceCheckData ** SOAP_FMAC4 soap_get_PointerTo_ns1__AddDeviceCheckData(struct soap*, _ns1__AddDeviceCheckData **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__AddDeviceCheckData
#define soap_read_PointerTo_ns1__AddDeviceCheckData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__AddDeviceCheckData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__AddWGJCData
#define SOAP_TYPE_PointerTo_ns1__AddWGJCData (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AddWGJCData(struct soap*, _ns1__AddWGJCData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AddWGJCData(struct soap*, const char *, int, _ns1__AddWGJCData *const*, const char *);
SOAP_FMAC3 _ns1__AddWGJCData ** SOAP_FMAC4 soap_in_PointerTo_ns1__AddWGJCData(struct soap*, const char*, _ns1__AddWGJCData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AddWGJCData(struct soap*, _ns1__AddWGJCData *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__AddWGJCData
#define soap_write_PointerTo_ns1__AddWGJCData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__AddWGJCData(soap, data),0) || soap_put_PointerTo_ns1__AddWGJCData(soap, data, "ns1:AddWGJCData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddWGJCData ** SOAP_FMAC4 soap_get_PointerTo_ns1__AddWGJCData(struct soap*, _ns1__AddWGJCData **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__AddWGJCData
#define soap_read_PointerTo_ns1__AddWGJCData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__AddWGJCData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__LokeJudge
#define SOAP_TYPE_PointerTo_ns1__LokeJudge (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__LokeJudge(struct soap*, _ns1__LokeJudge *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__LokeJudge(struct soap*, const char *, int, _ns1__LokeJudge *const*, const char *);
SOAP_FMAC3 _ns1__LokeJudge ** SOAP_FMAC4 soap_in_PointerTo_ns1__LokeJudge(struct soap*, const char*, _ns1__LokeJudge **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__LokeJudge(struct soap*, _ns1__LokeJudge *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__LokeJudge
#define soap_write_PointerTo_ns1__LokeJudge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__LokeJudge(soap, data),0) || soap_put_PointerTo_ns1__LokeJudge(soap, data, "ns1:LokeJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LokeJudge ** SOAP_FMAC4 soap_get_PointerTo_ns1__LokeJudge(struct soap*, _ns1__LokeJudge **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__LokeJudge
#define soap_read_PointerTo_ns1__LokeJudge(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__LokeJudge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__PrintUp
#define SOAP_TYPE_PointerTo_ns1__PrintUp (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__PrintUp(struct soap*, _ns1__PrintUp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__PrintUp(struct soap*, const char *, int, _ns1__PrintUp *const*, const char *);
SOAP_FMAC3 _ns1__PrintUp ** SOAP_FMAC4 soap_in_PointerTo_ns1__PrintUp(struct soap*, const char*, _ns1__PrintUp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__PrintUp(struct soap*, _ns1__PrintUp *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__PrintUp
#define soap_write_PointerTo_ns1__PrintUp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__PrintUp(soap, data),0) || soap_put_PointerTo_ns1__PrintUp(soap, data, "ns1:PrintUp", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__PrintUp ** SOAP_FMAC4 soap_get_PointerTo_ns1__PrintUp(struct soap*, _ns1__PrintUp **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__PrintUp
#define soap_read_PointerTo_ns1__PrintUp(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__PrintUp(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__PrintJudge
#define SOAP_TYPE_PointerTo_ns1__PrintJudge (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__PrintJudge(struct soap*, _ns1__PrintJudge *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__PrintJudge(struct soap*, const char *, int, _ns1__PrintJudge *const*, const char *);
SOAP_FMAC3 _ns1__PrintJudge ** SOAP_FMAC4 soap_in_PointerTo_ns1__PrintJudge(struct soap*, const char*, _ns1__PrintJudge **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__PrintJudge(struct soap*, _ns1__PrintJudge *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__PrintJudge
#define soap_write_PointerTo_ns1__PrintJudge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__PrintJudge(soap, data),0) || soap_put_PointerTo_ns1__PrintJudge(soap, data, "ns1:PrintJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__PrintJudge ** SOAP_FMAC4 soap_get_PointerTo_ns1__PrintJudge(struct soap*, _ns1__PrintJudge **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__PrintJudge
#define soap_read_PointerTo_ns1__PrintJudge(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__PrintJudge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__AddVerify
#define SOAP_TYPE_PointerTo_ns1__AddVerify (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AddVerify(struct soap*, _ns1__AddVerify *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AddVerify(struct soap*, const char *, int, _ns1__AddVerify *const*, const char *);
SOAP_FMAC3 _ns1__AddVerify ** SOAP_FMAC4 soap_in_PointerTo_ns1__AddVerify(struct soap*, const char*, _ns1__AddVerify **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AddVerify(struct soap*, _ns1__AddVerify *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__AddVerify
#define soap_write_PointerTo_ns1__AddVerify(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__AddVerify(soap, data),0) || soap_put_PointerTo_ns1__AddVerify(soap, data, "ns1:AddVerify", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddVerify ** SOAP_FMAC4 soap_get_PointerTo_ns1__AddVerify(struct soap*, _ns1__AddVerify **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__AddVerify
#define soap_read_PointerTo_ns1__AddVerify(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__AddVerify(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__RyzfControl
#define SOAP_TYPE_PointerTo_ns1__RyzfControl (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__RyzfControl(struct soap*, _ns1__RyzfControl *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__RyzfControl(struct soap*, const char *, int, _ns1__RyzfControl *const*, const char *);
SOAP_FMAC3 _ns1__RyzfControl ** SOAP_FMAC4 soap_in_PointerTo_ns1__RyzfControl(struct soap*, const char*, _ns1__RyzfControl **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__RyzfControl(struct soap*, _ns1__RyzfControl *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__RyzfControl
#define soap_write_PointerTo_ns1__RyzfControl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__RyzfControl(soap, data),0) || soap_put_PointerTo_ns1__RyzfControl(soap, data, "ns1:RyzfControl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__RyzfControl ** SOAP_FMAC4 soap_get_PointerTo_ns1__RyzfControl(struct soap*, _ns1__RyzfControl **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__RyzfControl
#define soap_read_PointerTo_ns1__RyzfControl(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__RyzfControl(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__AddIuprData
#define SOAP_TYPE_PointerTo_ns1__AddIuprData (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AddIuprData(struct soap*, _ns1__AddIuprData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AddIuprData(struct soap*, const char *, int, _ns1__AddIuprData *const*, const char *);
SOAP_FMAC3 _ns1__AddIuprData ** SOAP_FMAC4 soap_in_PointerTo_ns1__AddIuprData(struct soap*, const char*, _ns1__AddIuprData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AddIuprData(struct soap*, _ns1__AddIuprData *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__AddIuprData
#define soap_write_PointerTo_ns1__AddIuprData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__AddIuprData(soap, data),0) || soap_put_PointerTo_ns1__AddIuprData(soap, data, "ns1:AddIuprData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddIuprData ** SOAP_FMAC4 soap_get_PointerTo_ns1__AddIuprData(struct soap*, _ns1__AddIuprData **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__AddIuprData
#define soap_read_PointerTo_ns1__AddIuprData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__AddIuprData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__AddObdData
#define SOAP_TYPE_PointerTo_ns1__AddObdData (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AddObdData(struct soap*, _ns1__AddObdData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AddObdData(struct soap*, const char *, int, _ns1__AddObdData *const*, const char *);
SOAP_FMAC3 _ns1__AddObdData ** SOAP_FMAC4 soap_in_PointerTo_ns1__AddObdData(struct soap*, const char*, _ns1__AddObdData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AddObdData(struct soap*, _ns1__AddObdData *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__AddObdData
#define soap_write_PointerTo_ns1__AddObdData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__AddObdData(soap, data),0) || soap_put_PointerTo_ns1__AddObdData(soap, data, "ns1:AddObdData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddObdData ** SOAP_FMAC4 soap_get_PointerTo_ns1__AddObdData(struct soap*, _ns1__AddObdData **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__AddObdData
#define soap_read_PointerTo_ns1__AddObdData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__AddObdData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__AddCheckData
#define SOAP_TYPE_PointerTo_ns1__AddCheckData (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AddCheckData(struct soap*, _ns1__AddCheckData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AddCheckData(struct soap*, const char *, int, _ns1__AddCheckData *const*, const char *);
SOAP_FMAC3 _ns1__AddCheckData ** SOAP_FMAC4 soap_in_PointerTo_ns1__AddCheckData(struct soap*, const char*, _ns1__AddCheckData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AddCheckData(struct soap*, _ns1__AddCheckData *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__AddCheckData
#define soap_write_PointerTo_ns1__AddCheckData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__AddCheckData(soap, data),0) || soap_put_PointerTo_ns1__AddCheckData(soap, data, "ns1:AddCheckData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__AddCheckData ** SOAP_FMAC4 soap_get_PointerTo_ns1__AddCheckData(struct soap*, _ns1__AddCheckData **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__AddCheckData
#define soap_read_PointerTo_ns1__AddCheckData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__AddCheckData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__OnlineJudge
#define SOAP_TYPE_PointerTo_ns1__OnlineJudge (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__OnlineJudge(struct soap*, _ns1__OnlineJudge *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__OnlineJudge(struct soap*, const char *, int, _ns1__OnlineJudge *const*, const char *);
SOAP_FMAC3 _ns1__OnlineJudge ** SOAP_FMAC4 soap_in_PointerTo_ns1__OnlineJudge(struct soap*, const char*, _ns1__OnlineJudge **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__OnlineJudge(struct soap*, _ns1__OnlineJudge *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__OnlineJudge
#define soap_write_PointerTo_ns1__OnlineJudge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__OnlineJudge(soap, data),0) || soap_put_PointerTo_ns1__OnlineJudge(soap, data, "ns1:OnlineJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__OnlineJudge ** SOAP_FMAC4 soap_get_PointerTo_ns1__OnlineJudge(struct soap*, _ns1__OnlineJudge **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__OnlineJudge
#define soap_read_PointerTo_ns1__OnlineJudge(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__OnlineJudge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__VehicleRegJudge
#define SOAP_TYPE_PointerTo_ns1__VehicleRegJudge (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__VehicleRegJudge(struct soap*, _ns1__VehicleRegJudge *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__VehicleRegJudge(struct soap*, const char *, int, _ns1__VehicleRegJudge *const*, const char *);
SOAP_FMAC3 _ns1__VehicleRegJudge ** SOAP_FMAC4 soap_in_PointerTo_ns1__VehicleRegJudge(struct soap*, const char*, _ns1__VehicleRegJudge **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__VehicleRegJudge(struct soap*, _ns1__VehicleRegJudge *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__VehicleRegJudge
#define soap_write_PointerTo_ns1__VehicleRegJudge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__VehicleRegJudge(soap, data),0) || soap_put_PointerTo_ns1__VehicleRegJudge(soap, data, "ns1:VehicleRegJudge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__VehicleRegJudge ** SOAP_FMAC4 soap_get_PointerTo_ns1__VehicleRegJudge(struct soap*, _ns1__VehicleRegJudge **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__VehicleRegJudge
#define soap_read_PointerTo_ns1__VehicleRegJudge(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__VehicleRegJudge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__wstring
#define SOAP_TYPE_PointerTostd__wstring (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__wstring(struct soap*, std::wstring *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__wstring(struct soap*, const char *, int, std::wstring *const*, const char *);
SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_in_PointerTostd__wstring(struct soap*, const char*, std::wstring **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__wstring(struct soap*, std::wstring *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__wstring
#define soap_write_PointerTostd__wstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__wstring(soap, data),0) || soap_put_PointerTostd__wstring(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_get_PointerTostd__wstring(struct soap*, std::wstring **, const char*, const char*);

#ifndef soap_read_PointerTostd__wstring
#define soap_read_PointerTostd__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__wstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
