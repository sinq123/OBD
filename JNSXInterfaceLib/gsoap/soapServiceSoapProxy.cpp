/* soapServiceSoapProxy.cpp
   Generated by gSOAP 2.8.21 from service[1].h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapServiceSoapProxy.h"

ServiceSoapProxy::ServiceSoapProxy()
{	ServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ServiceSoapProxy::ServiceSoapProxy(const struct soap &_soap) : soap(_soap)
{ }

ServiceSoapProxy::ServiceSoapProxy(const char *url)
{	ServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

ServiceSoapProxy::ServiceSoapProxy(soap_mode iomode)
{	ServiceSoapProxy_init(iomode, iomode);
}

ServiceSoapProxy::ServiceSoapProxy(const char *url, soap_mode iomode)
{	ServiceSoapProxy_init(iomode, iomode);
	soap_endpoint = url;
}

ServiceSoapProxy::ServiceSoapProxy(soap_mode imode, soap_mode omode)
{	ServiceSoapProxy_init(imode, omode);
}

ServiceSoapProxy::~ServiceSoapProxy()
{ }

void ServiceSoapProxy::ServiceSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://www.gc8848.com/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void ServiceSoapProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void ServiceSoapProxy::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	ServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void ServiceSoapProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *ServiceSoapProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *ServiceSoapProxy::soap_fault()
{	return this->fault;
}

const char *ServiceSoapProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *ServiceSoapProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int ServiceSoapProxy::soap_close_socket()
{	return soap_closesock(this);
}

int ServiceSoapProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void ServiceSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ServiceSoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *ServiceSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int ServiceSoapProxy::Sync(const char *endpoint, const char *soap_action, _ns1__Sync *ns1__Sync, _ns1__SyncResponse &ns1__SyncResponse)
{	struct soap *soap = this;
	struct __ns1__Sync soap_tmp___ns1__Sync;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/Sync";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Sync.ns1__Sync = ns1__Sync;
	soap_serializeheader(soap);
	soap_serialize___ns1__Sync(soap, &soap_tmp___ns1__Sync);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Sync(soap, &soap_tmp___ns1__Sync, "-ns1:Sync", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Sync(soap, &soap_tmp___ns1__Sync, "-ns1:Sync", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SyncResponse)
		return soap_closesock(soap);
	ns1__SyncResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SyncResponse.soap_get(soap, "ns1:SyncResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetInspectQueueByDate(const char *endpoint, const char *soap_action, _ns1__GetInspectQueueByDate *ns1__GetInspectQueueByDate, _ns1__GetInspectQueueByDateResponse &ns1__GetInspectQueueByDateResponse)
{	struct soap *soap = this;
	struct __ns1__GetInspectQueueByDate soap_tmp___ns1__GetInspectQueueByDate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetInspectQueueByDate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetInspectQueueByDate.ns1__GetInspectQueueByDate = ns1__GetInspectQueueByDate;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetInspectQueueByDate(soap, &soap_tmp___ns1__GetInspectQueueByDate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetInspectQueueByDate(soap, &soap_tmp___ns1__GetInspectQueueByDate, "-ns1:GetInspectQueueByDate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetInspectQueueByDate(soap, &soap_tmp___ns1__GetInspectQueueByDate, "-ns1:GetInspectQueueByDate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetInspectQueueByDateResponse)
		return soap_closesock(soap);
	ns1__GetInspectQueueByDateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetInspectQueueByDateResponse.soap_get(soap, "ns1:GetInspectQueueByDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetInspectQueueByPlateID(const char *endpoint, const char *soap_action, _ns1__GetInspectQueueByPlateID *ns1__GetInspectQueueByPlateID, _ns1__GetInspectQueueByPlateIDResponse &ns1__GetInspectQueueByPlateIDResponse)
{	struct soap *soap = this;
	struct __ns1__GetInspectQueueByPlateID soap_tmp___ns1__GetInspectQueueByPlateID;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetInspectQueueByPlateID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetInspectQueueByPlateID.ns1__GetInspectQueueByPlateID = ns1__GetInspectQueueByPlateID;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetInspectQueueByPlateID(soap, &soap_tmp___ns1__GetInspectQueueByPlateID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetInspectQueueByPlateID(soap, &soap_tmp___ns1__GetInspectQueueByPlateID, "-ns1:GetInspectQueueByPlateID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetInspectQueueByPlateID(soap, &soap_tmp___ns1__GetInspectQueueByPlateID, "-ns1:GetInspectQueueByPlateID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetInspectQueueByPlateIDResponse)
		return soap_closesock(soap);
	ns1__GetInspectQueueByPlateIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetInspectQueueByPlateIDResponse.soap_get(soap, "ns1:GetInspectQueueByPlateIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::AbortInspect(const char *endpoint, const char *soap_action, _ns1__AbortInspect *ns1__AbortInspect, _ns1__AbortInspectResponse &ns1__AbortInspectResponse)
{	struct soap *soap = this;
	struct __ns1__AbortInspect soap_tmp___ns1__AbortInspect;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/AbortInspect";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AbortInspect.ns1__AbortInspect = ns1__AbortInspect;
	soap_serializeheader(soap);
	soap_serialize___ns1__AbortInspect(soap, &soap_tmp___ns1__AbortInspect);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AbortInspect(soap, &soap_tmp___ns1__AbortInspect, "-ns1:AbortInspect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AbortInspect(soap, &soap_tmp___ns1__AbortInspect, "-ns1:AbortInspect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AbortInspectResponse)
		return soap_closesock(soap);
	ns1__AbortInspectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AbortInspectResponse.soap_get(soap, "ns1:AbortInspectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::BeginRecord(const char *endpoint, const char *soap_action, _ns1__BeginRecord *ns1__BeginRecord, _ns1__BeginRecordResponse &ns1__BeginRecordResponse)
{	struct soap *soap = this;
	struct __ns1__BeginRecord soap_tmp___ns1__BeginRecord;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/BeginRecord";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__BeginRecord.ns1__BeginRecord = ns1__BeginRecord;
	soap_serializeheader(soap);
	soap_serialize___ns1__BeginRecord(soap, &soap_tmp___ns1__BeginRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BeginRecord(soap, &soap_tmp___ns1__BeginRecord, "-ns1:BeginRecord", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BeginRecord(soap, &soap_tmp___ns1__BeginRecord, "-ns1:BeginRecord", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__BeginRecordResponse)
		return soap_closesock(soap);
	ns1__BeginRecordResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BeginRecordResponse.soap_get(soap, "ns1:BeginRecordResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::EndRecord(const char *endpoint, const char *soap_action, _ns1__EndRecord *ns1__EndRecord, _ns1__EndRecordResponse &ns1__EndRecordResponse)
{	struct soap *soap = this;
	struct __ns1__EndRecord soap_tmp___ns1__EndRecord;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/EndRecord";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__EndRecord.ns1__EndRecord = ns1__EndRecord;
	soap_serializeheader(soap);
	soap_serialize___ns1__EndRecord(soap, &soap_tmp___ns1__EndRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__EndRecord(soap, &soap_tmp___ns1__EndRecord, "-ns1:EndRecord", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__EndRecord(soap, &soap_tmp___ns1__EndRecord, "-ns1:EndRecord", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__EndRecordResponse)
		return soap_closesock(soap);
	ns1__EndRecordResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__EndRecordResponse.soap_get(soap, "ns1:EndRecordResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::BeginInspect(const char *endpoint, const char *soap_action, _ns1__BeginInspect *ns1__BeginInspect, _ns1__BeginInspectResponse &ns1__BeginInspectResponse)
{	struct soap *soap = this;
	struct __ns1__BeginInspect soap_tmp___ns1__BeginInspect;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/BeginInspect";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__BeginInspect.ns1__BeginInspect = ns1__BeginInspect;
	soap_serializeheader(soap);
	soap_serialize___ns1__BeginInspect(soap, &soap_tmp___ns1__BeginInspect);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BeginInspect(soap, &soap_tmp___ns1__BeginInspect, "-ns1:BeginInspect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BeginInspect(soap, &soap_tmp___ns1__BeginInspect, "-ns1:BeginInspect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__BeginInspectResponse)
		return soap_closesock(soap);
	ns1__BeginInspectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BeginInspectResponse.soap_get(soap, "ns1:BeginInspectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetLimit(const char *endpoint, const char *soap_action, _ns1__GetLimit *ns1__GetLimit, _ns1__GetLimitResponse &ns1__GetLimitResponse)
{	struct soap *soap = this;
	struct __ns1__GetLimit soap_tmp___ns1__GetLimit;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetLimit";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLimit.ns1__GetLimit = ns1__GetLimit;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLimit(soap, &soap_tmp___ns1__GetLimit);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLimit(soap, &soap_tmp___ns1__GetLimit, "-ns1:GetLimit", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLimit(soap, &soap_tmp___ns1__GetLimit, "-ns1:GetLimit", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLimitResponse)
		return soap_closesock(soap);
	ns1__GetLimitResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLimitResponse.soap_get(soap, "ns1:GetLimitResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::TakePhoto(const char *endpoint, const char *soap_action, _ns1__TakePhoto *ns1__TakePhoto, _ns1__TakePhotoResponse &ns1__TakePhotoResponse)
{	struct soap *soap = this;
	struct __ns1__TakePhoto soap_tmp___ns1__TakePhoto;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/TakePhoto";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__TakePhoto.ns1__TakePhoto = ns1__TakePhoto;
	soap_serializeheader(soap);
	soap_serialize___ns1__TakePhoto(soap, &soap_tmp___ns1__TakePhoto);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__TakePhoto(soap, &soap_tmp___ns1__TakePhoto, "-ns1:TakePhoto", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__TakePhoto(soap, &soap_tmp___ns1__TakePhoto, "-ns1:TakePhoto", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__TakePhotoResponse)
		return soap_closesock(soap);
	ns1__TakePhotoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__TakePhotoResponse.soap_get(soap, "ns1:TakePhotoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::WJTakePhoto(const char *endpoint, const char *soap_action, _ns1__WJTakePhoto *ns1__WJTakePhoto, _ns1__WJTakePhotoResponse &ns1__WJTakePhotoResponse)
{	struct soap *soap = this;
	struct __ns1__WJTakePhoto soap_tmp___ns1__WJTakePhoto;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/WJTakePhoto";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__WJTakePhoto.ns1__WJTakePhoto = ns1__WJTakePhoto;
	soap_serializeheader(soap);
	soap_serialize___ns1__WJTakePhoto(soap, &soap_tmp___ns1__WJTakePhoto);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__WJTakePhoto(soap, &soap_tmp___ns1__WJTakePhoto, "-ns1:WJTakePhoto", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__WJTakePhoto(soap, &soap_tmp___ns1__WJTakePhoto, "-ns1:WJTakePhoto", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__WJTakePhotoResponse)
		return soap_closesock(soap);
	ns1__WJTakePhotoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__WJTakePhotoResponse.soap_get(soap, "ns1:WJTakePhotoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::StopInspect(const char *endpoint, const char *soap_action, _ns1__StopInspect *ns1__StopInspect, _ns1__StopInspectResponse &ns1__StopInspectResponse)
{	struct soap *soap = this;
	struct __ns1__StopInspect soap_tmp___ns1__StopInspect;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/StopInspect";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__StopInspect.ns1__StopInspect = ns1__StopInspect;
	soap_serializeheader(soap);
	soap_serialize___ns1__StopInspect(soap, &soap_tmp___ns1__StopInspect);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__StopInspect(soap, &soap_tmp___ns1__StopInspect, "-ns1:StopInspect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__StopInspect(soap, &soap_tmp___ns1__StopInspect, "-ns1:StopInspect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__StopInspectResponse)
		return soap_closesock(soap);
	ns1__StopInspectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StopInspectResponse.soap_get(soap, "ns1:StopInspectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::EndInspect(const char *endpoint, const char *soap_action, _ns1__EndInspect *ns1__EndInspect, _ns1__EndInspectResponse &ns1__EndInspectResponse)
{	struct soap *soap = this;
	struct __ns1__EndInspect soap_tmp___ns1__EndInspect;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/EndInspect";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__EndInspect.ns1__EndInspect = ns1__EndInspect;
	soap_serializeheader(soap);
	soap_serialize___ns1__EndInspect(soap, &soap_tmp___ns1__EndInspect);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__EndInspect(soap, &soap_tmp___ns1__EndInspect, "-ns1:EndInspect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__EndInspect(soap, &soap_tmp___ns1__EndInspect, "-ns1:EndInspect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__EndInspectResponse)
		return soap_closesock(soap);
	ns1__EndInspectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__EndInspectResponse.soap_get(soap, "ns1:EndInspectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::UploadSelfTestData(const char *endpoint, const char *soap_action, _ns1__UploadSelfTestData *ns1__UploadSelfTestData, _ns1__UploadSelfTestDataResponse &ns1__UploadSelfTestDataResponse)
{	struct soap *soap = this;
	struct __ns1__UploadSelfTestData soap_tmp___ns1__UploadSelfTestData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/UploadSelfTestData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadSelfTestData.ns1__UploadSelfTestData = ns1__UploadSelfTestData;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadSelfTestData(soap, &soap_tmp___ns1__UploadSelfTestData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadSelfTestData(soap, &soap_tmp___ns1__UploadSelfTestData, "-ns1:UploadSelfTestData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadSelfTestData(soap, &soap_tmp___ns1__UploadSelfTestData, "-ns1:UploadSelfTestData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UploadSelfTestDataResponse)
		return soap_closesock(soap);
	ns1__UploadSelfTestDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadSelfTestDataResponse.soap_get(soap, "ns1:UploadSelfTestDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::UploadRealtimeData(const char *endpoint, const char *soap_action, _ns1__UploadRealtimeData *ns1__UploadRealtimeData, _ns1__UploadRealtimeDataResponse &ns1__UploadRealtimeDataResponse)
{	struct soap *soap = this;
	struct __ns1__UploadRealtimeData soap_tmp___ns1__UploadRealtimeData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/UploadRealtimeData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadRealtimeData.ns1__UploadRealtimeData = ns1__UploadRealtimeData;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadRealtimeData(soap, &soap_tmp___ns1__UploadRealtimeData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadRealtimeData(soap, &soap_tmp___ns1__UploadRealtimeData, "-ns1:UploadRealtimeData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadRealtimeData(soap, &soap_tmp___ns1__UploadRealtimeData, "-ns1:UploadRealtimeData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UploadRealtimeDataResponse)
		return soap_closesock(soap);
	ns1__UploadRealtimeDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadRealtimeDataResponse.soap_get(soap, "ns1:UploadRealtimeDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetInspectionInfo(const char *endpoint, const char *soap_action, _ns1__GetInspectionInfo *ns1__GetInspectionInfo, _ns1__GetInspectionInfoResponse &ns1__GetInspectionInfoResponse)
{	struct soap *soap = this;
	struct __ns1__GetInspectionInfo soap_tmp___ns1__GetInspectionInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetInspectionInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetInspectionInfo.ns1__GetInspectionInfo = ns1__GetInspectionInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetInspectionInfo(soap, &soap_tmp___ns1__GetInspectionInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetInspectionInfo(soap, &soap_tmp___ns1__GetInspectionInfo, "-ns1:GetInspectionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetInspectionInfo(soap, &soap_tmp___ns1__GetInspectionInfo, "-ns1:GetInspectionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetInspectionInfoResponse)
		return soap_closesock(soap);
	ns1__GetInspectionInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetInspectionInfoResponse.soap_get(soap, "ns1:GetInspectionInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::BeginCalibrate(const char *endpoint, const char *soap_action, _ns1__BeginCalibrate *ns1__BeginCalibrate, _ns1__BeginCalibrateResponse &ns1__BeginCalibrateResponse)
{	struct soap *soap = this;
	struct __ns1__BeginCalibrate soap_tmp___ns1__BeginCalibrate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/BeginCalibrate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__BeginCalibrate.ns1__BeginCalibrate = ns1__BeginCalibrate;
	soap_serializeheader(soap);
	soap_serialize___ns1__BeginCalibrate(soap, &soap_tmp___ns1__BeginCalibrate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BeginCalibrate(soap, &soap_tmp___ns1__BeginCalibrate, "-ns1:BeginCalibrate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BeginCalibrate(soap, &soap_tmp___ns1__BeginCalibrate, "-ns1:BeginCalibrate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__BeginCalibrateResponse)
		return soap_closesock(soap);
	ns1__BeginCalibrateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BeginCalibrateResponse.soap_get(soap, "ns1:BeginCalibrateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::UploadCalibrateData(const char *endpoint, const char *soap_action, _ns1__UploadCalibrateData *ns1__UploadCalibrateData, _ns1__UploadCalibrateDataResponse &ns1__UploadCalibrateDataResponse)
{	struct soap *soap = this;
	struct __ns1__UploadCalibrateData soap_tmp___ns1__UploadCalibrateData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/UploadCalibrateData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadCalibrateData.ns1__UploadCalibrateData = ns1__UploadCalibrateData;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadCalibrateData(soap, &soap_tmp___ns1__UploadCalibrateData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadCalibrateData(soap, &soap_tmp___ns1__UploadCalibrateData, "-ns1:UploadCalibrateData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadCalibrateData(soap, &soap_tmp___ns1__UploadCalibrateData, "-ns1:UploadCalibrateData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UploadCalibrateDataResponse)
		return soap_closesock(soap);
	ns1__UploadCalibrateDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadCalibrateDataResponse.soap_get(soap, "ns1:UploadCalibrateDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::EndCalibrate(const char *endpoint, const char *soap_action, _ns1__EndCalibrate *ns1__EndCalibrate, _ns1__EndCalibrateResponse &ns1__EndCalibrateResponse)
{	struct soap *soap = this;
	struct __ns1__EndCalibrate soap_tmp___ns1__EndCalibrate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/EndCalibrate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__EndCalibrate.ns1__EndCalibrate = ns1__EndCalibrate;
	soap_serializeheader(soap);
	soap_serialize___ns1__EndCalibrate(soap, &soap_tmp___ns1__EndCalibrate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__EndCalibrate(soap, &soap_tmp___ns1__EndCalibrate, "-ns1:EndCalibrate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__EndCalibrate(soap, &soap_tmp___ns1__EndCalibrate, "-ns1:EndCalibrate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__EndCalibrateResponse)
		return soap_closesock(soap);
	ns1__EndCalibrateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__EndCalibrateResponse.soap_get(soap, "ns1:EndCalibrateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::TestPhoto(const char *endpoint, const char *soap_action, _ns1__TestPhoto *ns1__TestPhoto, _ns1__TestPhotoResponse &ns1__TestPhotoResponse)
{	struct soap *soap = this;
	struct __ns1__TestPhoto soap_tmp___ns1__TestPhoto;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/TestPhoto";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__TestPhoto.ns1__TestPhoto = ns1__TestPhoto;
	soap_serializeheader(soap);
	soap_serialize___ns1__TestPhoto(soap, &soap_tmp___ns1__TestPhoto);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__TestPhoto(soap, &soap_tmp___ns1__TestPhoto, "-ns1:TestPhoto", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__TestPhoto(soap, &soap_tmp___ns1__TestPhoto, "-ns1:TestPhoto", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__TestPhotoResponse)
		return soap_closesock(soap);
	ns1__TestPhotoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__TestPhotoResponse.soap_get(soap, "ns1:TestPhotoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::FuelEvaporationInspect(const char *endpoint, const char *soap_action, _ns1__FuelEvaporationInspect *ns1__FuelEvaporationInspect, _ns1__FuelEvaporationInspectResponse &ns1__FuelEvaporationInspectResponse)
{	struct soap *soap = this;
	struct __ns1__FuelEvaporationInspect soap_tmp___ns1__FuelEvaporationInspect;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/FuelEvaporationInspect";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__FuelEvaporationInspect.ns1__FuelEvaporationInspect = ns1__FuelEvaporationInspect;
	soap_serializeheader(soap);
	soap_serialize___ns1__FuelEvaporationInspect(soap, &soap_tmp___ns1__FuelEvaporationInspect);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__FuelEvaporationInspect(soap, &soap_tmp___ns1__FuelEvaporationInspect, "-ns1:FuelEvaporationInspect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__FuelEvaporationInspect(soap, &soap_tmp___ns1__FuelEvaporationInspect, "-ns1:FuelEvaporationInspect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__FuelEvaporationInspectResponse)
		return soap_closesock(soap);
	ns1__FuelEvaporationInspectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__FuelEvaporationInspectResponse.soap_get(soap, "ns1:FuelEvaporationInspectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetInspectParams(const char *endpoint, const char *soap_action, _ns1__GetInspectParams *ns1__GetInspectParams, _ns1__GetInspectParamsResponse &ns1__GetInspectParamsResponse)
{	struct soap *soap = this;
	struct __ns1__GetInspectParams soap_tmp___ns1__GetInspectParams;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetInspectParams";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetInspectParams.ns1__GetInspectParams = ns1__GetInspectParams;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetInspectParams(soap, &soap_tmp___ns1__GetInspectParams);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetInspectParams(soap, &soap_tmp___ns1__GetInspectParams, "-ns1:GetInspectParams", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetInspectParams(soap, &soap_tmp___ns1__GetInspectParams, "-ns1:GetInspectParams", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetInspectParamsResponse)
		return soap_closesock(soap);
	ns1__GetInspectParamsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetInspectParamsResponse.soap_get(soap, "ns1:GetInspectParamsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetOtherInspectQueueByPlateID(const char *endpoint, const char *soap_action, _ns1__GetOtherInspectQueueByPlateID *ns1__GetOtherInspectQueueByPlateID, _ns1__GetOtherInspectQueueByPlateIDResponse &ns1__GetOtherInspectQueueByPlateIDResponse)
{	struct soap *soap = this;
	struct __ns1__GetOtherInspectQueueByPlateID soap_tmp___ns1__GetOtherInspectQueueByPlateID;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetOtherInspectQueueByPlateID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetOtherInspectQueueByPlateID.ns1__GetOtherInspectQueueByPlateID = ns1__GetOtherInspectQueueByPlateID;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetOtherInspectQueueByPlateID(soap, &soap_tmp___ns1__GetOtherInspectQueueByPlateID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetOtherInspectQueueByPlateID(soap, &soap_tmp___ns1__GetOtherInspectQueueByPlateID, "-ns1:GetOtherInspectQueueByPlateID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetOtherInspectQueueByPlateID(soap, &soap_tmp___ns1__GetOtherInspectQueueByPlateID, "-ns1:GetOtherInspectQueueByPlateID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetOtherInspectQueueByPlateIDResponse)
		return soap_closesock(soap);
	ns1__GetOtherInspectQueueByPlateIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetOtherInspectQueueByPlateIDResponse.soap_get(soap, "ns1:GetOtherInspectQueueByPlateIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetOtherInspectQueueByDate(const char *endpoint, const char *soap_action, _ns1__GetOtherInspectQueueByDate *ns1__GetOtherInspectQueueByDate, _ns1__GetOtherInspectQueueByDateResponse &ns1__GetOtherInspectQueueByDateResponse)
{	struct soap *soap = this;
	struct __ns1__GetOtherInspectQueueByDate soap_tmp___ns1__GetOtherInspectQueueByDate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetOtherInspectQueueByDate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetOtherInspectQueueByDate.ns1__GetOtherInspectQueueByDate = ns1__GetOtherInspectQueueByDate;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetOtherInspectQueueByDate(soap, &soap_tmp___ns1__GetOtherInspectQueueByDate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetOtherInspectQueueByDate(soap, &soap_tmp___ns1__GetOtherInspectQueueByDate, "-ns1:GetOtherInspectQueueByDate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetOtherInspectQueueByDate(soap, &soap_tmp___ns1__GetOtherInspectQueueByDate, "-ns1:GetOtherInspectQueueByDate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetOtherInspectQueueByDateResponse)
		return soap_closesock(soap);
	ns1__GetOtherInspectQueueByDateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetOtherInspectQueueByDateResponse.soap_get(soap, "ns1:GetOtherInspectQueueByDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::OBDInspect(const char *endpoint, const char *soap_action, _ns1__OBDInspect *ns1__OBDInspect, _ns1__OBDInspectResponse &ns1__OBDInspectResponse)
{	struct soap *soap = this;
	struct __ns1__OBDInspect soap_tmp___ns1__OBDInspect;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/OBDInspect";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__OBDInspect.ns1__OBDInspect = ns1__OBDInspect;
	soap_serializeheader(soap);
	soap_serialize___ns1__OBDInspect(soap, &soap_tmp___ns1__OBDInspect);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OBDInspect(soap, &soap_tmp___ns1__OBDInspect, "-ns1:OBDInspect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OBDInspect(soap, &soap_tmp___ns1__OBDInspect, "-ns1:OBDInspect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__OBDInspectResponse)
		return soap_closesock(soap);
	ns1__OBDInspectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OBDInspectResponse.soap_get(soap, "ns1:OBDInspectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::OBDTXCheck(const char *endpoint, const char *soap_action, _ns1__OBDTXCheck *ns1__OBDTXCheck, _ns1__OBDTXCheckResponse &ns1__OBDTXCheckResponse)
{	struct soap *soap = this;
	struct __ns1__OBDTXCheck soap_tmp___ns1__OBDTXCheck;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/OBDTXCheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__OBDTXCheck.ns1__OBDTXCheck = ns1__OBDTXCheck;
	soap_serializeheader(soap);
	soap_serialize___ns1__OBDTXCheck(soap, &soap_tmp___ns1__OBDTXCheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OBDTXCheck(soap, &soap_tmp___ns1__OBDTXCheck, "-ns1:OBDTXCheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OBDTXCheck(soap, &soap_tmp___ns1__OBDTXCheck, "-ns1:OBDTXCheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__OBDTXCheckResponse)
		return soap_closesock(soap);
	ns1__OBDTXCheckResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OBDTXCheckResponse.soap_get(soap, "ns1:OBDTXCheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::Sync_(const char *endpoint, const char *soap_action, _ns1__Sync *ns1__Sync, _ns1__SyncResponse &ns1__SyncResponse)
{	struct soap *soap = this;
	struct __ns1__Sync_ soap_tmp___ns1__Sync_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/Sync";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Sync_.ns1__Sync = ns1__Sync;
	soap_serializeheader(soap);
	soap_serialize___ns1__Sync_(soap, &soap_tmp___ns1__Sync_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Sync_(soap, &soap_tmp___ns1__Sync_, "-ns1:Sync", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Sync_(soap, &soap_tmp___ns1__Sync_, "-ns1:Sync", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SyncResponse)
		return soap_closesock(soap);
	ns1__SyncResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SyncResponse.soap_get(soap, "ns1:SyncResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetInspectQueueByDate_(const char *endpoint, const char *soap_action, _ns1__GetInspectQueueByDate *ns1__GetInspectQueueByDate, _ns1__GetInspectQueueByDateResponse &ns1__GetInspectQueueByDateResponse)
{	struct soap *soap = this;
	struct __ns1__GetInspectQueueByDate_ soap_tmp___ns1__GetInspectQueueByDate_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetInspectQueueByDate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetInspectQueueByDate_.ns1__GetInspectQueueByDate = ns1__GetInspectQueueByDate;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetInspectQueueByDate_(soap, &soap_tmp___ns1__GetInspectQueueByDate_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetInspectQueueByDate_(soap, &soap_tmp___ns1__GetInspectQueueByDate_, "-ns1:GetInspectQueueByDate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetInspectQueueByDate_(soap, &soap_tmp___ns1__GetInspectQueueByDate_, "-ns1:GetInspectQueueByDate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetInspectQueueByDateResponse)
		return soap_closesock(soap);
	ns1__GetInspectQueueByDateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetInspectQueueByDateResponse.soap_get(soap, "ns1:GetInspectQueueByDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetInspectQueueByPlateID_(const char *endpoint, const char *soap_action, _ns1__GetInspectQueueByPlateID *ns1__GetInspectQueueByPlateID, _ns1__GetInspectQueueByPlateIDResponse &ns1__GetInspectQueueByPlateIDResponse)
{	struct soap *soap = this;
	struct __ns1__GetInspectQueueByPlateID_ soap_tmp___ns1__GetInspectQueueByPlateID_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetInspectQueueByPlateID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetInspectQueueByPlateID_.ns1__GetInspectQueueByPlateID = ns1__GetInspectQueueByPlateID;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetInspectQueueByPlateID_(soap, &soap_tmp___ns1__GetInspectQueueByPlateID_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetInspectQueueByPlateID_(soap, &soap_tmp___ns1__GetInspectQueueByPlateID_, "-ns1:GetInspectQueueByPlateID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetInspectQueueByPlateID_(soap, &soap_tmp___ns1__GetInspectQueueByPlateID_, "-ns1:GetInspectQueueByPlateID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetInspectQueueByPlateIDResponse)
		return soap_closesock(soap);
	ns1__GetInspectQueueByPlateIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetInspectQueueByPlateIDResponse.soap_get(soap, "ns1:GetInspectQueueByPlateIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::AbortInspect_(const char *endpoint, const char *soap_action, _ns1__AbortInspect *ns1__AbortInspect, _ns1__AbortInspectResponse &ns1__AbortInspectResponse)
{	struct soap *soap = this;
	struct __ns1__AbortInspect_ soap_tmp___ns1__AbortInspect_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/AbortInspect";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AbortInspect_.ns1__AbortInspect = ns1__AbortInspect;
	soap_serializeheader(soap);
	soap_serialize___ns1__AbortInspect_(soap, &soap_tmp___ns1__AbortInspect_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AbortInspect_(soap, &soap_tmp___ns1__AbortInspect_, "-ns1:AbortInspect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AbortInspect_(soap, &soap_tmp___ns1__AbortInspect_, "-ns1:AbortInspect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AbortInspectResponse)
		return soap_closesock(soap);
	ns1__AbortInspectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AbortInspectResponse.soap_get(soap, "ns1:AbortInspectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::BeginRecord_(const char *endpoint, const char *soap_action, _ns1__BeginRecord *ns1__BeginRecord, _ns1__BeginRecordResponse &ns1__BeginRecordResponse)
{	struct soap *soap = this;
	struct __ns1__BeginRecord_ soap_tmp___ns1__BeginRecord_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/BeginRecord";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__BeginRecord_.ns1__BeginRecord = ns1__BeginRecord;
	soap_serializeheader(soap);
	soap_serialize___ns1__BeginRecord_(soap, &soap_tmp___ns1__BeginRecord_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BeginRecord_(soap, &soap_tmp___ns1__BeginRecord_, "-ns1:BeginRecord", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BeginRecord_(soap, &soap_tmp___ns1__BeginRecord_, "-ns1:BeginRecord", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__BeginRecordResponse)
		return soap_closesock(soap);
	ns1__BeginRecordResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BeginRecordResponse.soap_get(soap, "ns1:BeginRecordResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::EndRecord_(const char *endpoint, const char *soap_action, _ns1__EndRecord *ns1__EndRecord, _ns1__EndRecordResponse &ns1__EndRecordResponse)
{	struct soap *soap = this;
	struct __ns1__EndRecord_ soap_tmp___ns1__EndRecord_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/EndRecord";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__EndRecord_.ns1__EndRecord = ns1__EndRecord;
	soap_serializeheader(soap);
	soap_serialize___ns1__EndRecord_(soap, &soap_tmp___ns1__EndRecord_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__EndRecord_(soap, &soap_tmp___ns1__EndRecord_, "-ns1:EndRecord", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__EndRecord_(soap, &soap_tmp___ns1__EndRecord_, "-ns1:EndRecord", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__EndRecordResponse)
		return soap_closesock(soap);
	ns1__EndRecordResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__EndRecordResponse.soap_get(soap, "ns1:EndRecordResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::BeginInspect_(const char *endpoint, const char *soap_action, _ns1__BeginInspect *ns1__BeginInspect, _ns1__BeginInspectResponse &ns1__BeginInspectResponse)
{	struct soap *soap = this;
	struct __ns1__BeginInspect_ soap_tmp___ns1__BeginInspect_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/BeginInspect";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__BeginInspect_.ns1__BeginInspect = ns1__BeginInspect;
	soap_serializeheader(soap);
	soap_serialize___ns1__BeginInspect_(soap, &soap_tmp___ns1__BeginInspect_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BeginInspect_(soap, &soap_tmp___ns1__BeginInspect_, "-ns1:BeginInspect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BeginInspect_(soap, &soap_tmp___ns1__BeginInspect_, "-ns1:BeginInspect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__BeginInspectResponse)
		return soap_closesock(soap);
	ns1__BeginInspectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BeginInspectResponse.soap_get(soap, "ns1:BeginInspectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetLimit_(const char *endpoint, const char *soap_action, _ns1__GetLimit *ns1__GetLimit, _ns1__GetLimitResponse &ns1__GetLimitResponse)
{	struct soap *soap = this;
	struct __ns1__GetLimit_ soap_tmp___ns1__GetLimit_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetLimit";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLimit_.ns1__GetLimit = ns1__GetLimit;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLimit_(soap, &soap_tmp___ns1__GetLimit_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLimit_(soap, &soap_tmp___ns1__GetLimit_, "-ns1:GetLimit", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLimit_(soap, &soap_tmp___ns1__GetLimit_, "-ns1:GetLimit", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLimitResponse)
		return soap_closesock(soap);
	ns1__GetLimitResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLimitResponse.soap_get(soap, "ns1:GetLimitResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::TakePhoto_(const char *endpoint, const char *soap_action, _ns1__TakePhoto *ns1__TakePhoto, _ns1__TakePhotoResponse &ns1__TakePhotoResponse)
{	struct soap *soap = this;
	struct __ns1__TakePhoto_ soap_tmp___ns1__TakePhoto_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/TakePhoto";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__TakePhoto_.ns1__TakePhoto = ns1__TakePhoto;
	soap_serializeheader(soap);
	soap_serialize___ns1__TakePhoto_(soap, &soap_tmp___ns1__TakePhoto_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__TakePhoto_(soap, &soap_tmp___ns1__TakePhoto_, "-ns1:TakePhoto", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__TakePhoto_(soap, &soap_tmp___ns1__TakePhoto_, "-ns1:TakePhoto", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__TakePhotoResponse)
		return soap_closesock(soap);
	ns1__TakePhotoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__TakePhotoResponse.soap_get(soap, "ns1:TakePhotoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::WJTakePhoto_(const char *endpoint, const char *soap_action, _ns1__WJTakePhoto *ns1__WJTakePhoto, _ns1__WJTakePhotoResponse &ns1__WJTakePhotoResponse)
{	struct soap *soap = this;
	struct __ns1__WJTakePhoto_ soap_tmp___ns1__WJTakePhoto_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/WJTakePhoto";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__WJTakePhoto_.ns1__WJTakePhoto = ns1__WJTakePhoto;
	soap_serializeheader(soap);
	soap_serialize___ns1__WJTakePhoto_(soap, &soap_tmp___ns1__WJTakePhoto_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__WJTakePhoto_(soap, &soap_tmp___ns1__WJTakePhoto_, "-ns1:WJTakePhoto", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__WJTakePhoto_(soap, &soap_tmp___ns1__WJTakePhoto_, "-ns1:WJTakePhoto", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__WJTakePhotoResponse)
		return soap_closesock(soap);
	ns1__WJTakePhotoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__WJTakePhotoResponse.soap_get(soap, "ns1:WJTakePhotoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::StopInspect_(const char *endpoint, const char *soap_action, _ns1__StopInspect *ns1__StopInspect, _ns1__StopInspectResponse &ns1__StopInspectResponse)
{	struct soap *soap = this;
	struct __ns1__StopInspect_ soap_tmp___ns1__StopInspect_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/StopInspect";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__StopInspect_.ns1__StopInspect = ns1__StopInspect;
	soap_serializeheader(soap);
	soap_serialize___ns1__StopInspect_(soap, &soap_tmp___ns1__StopInspect_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__StopInspect_(soap, &soap_tmp___ns1__StopInspect_, "-ns1:StopInspect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__StopInspect_(soap, &soap_tmp___ns1__StopInspect_, "-ns1:StopInspect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__StopInspectResponse)
		return soap_closesock(soap);
	ns1__StopInspectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__StopInspectResponse.soap_get(soap, "ns1:StopInspectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::EndInspect_(const char *endpoint, const char *soap_action, _ns1__EndInspect *ns1__EndInspect, _ns1__EndInspectResponse &ns1__EndInspectResponse)
{	struct soap *soap = this;
	struct __ns1__EndInspect_ soap_tmp___ns1__EndInspect_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/EndInspect";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__EndInspect_.ns1__EndInspect = ns1__EndInspect;
	soap_serializeheader(soap);
	soap_serialize___ns1__EndInspect_(soap, &soap_tmp___ns1__EndInspect_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__EndInspect_(soap, &soap_tmp___ns1__EndInspect_, "-ns1:EndInspect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__EndInspect_(soap, &soap_tmp___ns1__EndInspect_, "-ns1:EndInspect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__EndInspectResponse)
		return soap_closesock(soap);
	ns1__EndInspectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__EndInspectResponse.soap_get(soap, "ns1:EndInspectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::UploadSelfTestData_(const char *endpoint, const char *soap_action, _ns1__UploadSelfTestData *ns1__UploadSelfTestData, _ns1__UploadSelfTestDataResponse &ns1__UploadSelfTestDataResponse)
{	struct soap *soap = this;
	struct __ns1__UploadSelfTestData_ soap_tmp___ns1__UploadSelfTestData_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/UploadSelfTestData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadSelfTestData_.ns1__UploadSelfTestData = ns1__UploadSelfTestData;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadSelfTestData_(soap, &soap_tmp___ns1__UploadSelfTestData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadSelfTestData_(soap, &soap_tmp___ns1__UploadSelfTestData_, "-ns1:UploadSelfTestData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadSelfTestData_(soap, &soap_tmp___ns1__UploadSelfTestData_, "-ns1:UploadSelfTestData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UploadSelfTestDataResponse)
		return soap_closesock(soap);
	ns1__UploadSelfTestDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadSelfTestDataResponse.soap_get(soap, "ns1:UploadSelfTestDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::UploadRealtimeData_(const char *endpoint, const char *soap_action, _ns1__UploadRealtimeData *ns1__UploadRealtimeData, _ns1__UploadRealtimeDataResponse &ns1__UploadRealtimeDataResponse)
{	struct soap *soap = this;
	struct __ns1__UploadRealtimeData_ soap_tmp___ns1__UploadRealtimeData_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/UploadRealtimeData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadRealtimeData_.ns1__UploadRealtimeData = ns1__UploadRealtimeData;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadRealtimeData_(soap, &soap_tmp___ns1__UploadRealtimeData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadRealtimeData_(soap, &soap_tmp___ns1__UploadRealtimeData_, "-ns1:UploadRealtimeData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadRealtimeData_(soap, &soap_tmp___ns1__UploadRealtimeData_, "-ns1:UploadRealtimeData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UploadRealtimeDataResponse)
		return soap_closesock(soap);
	ns1__UploadRealtimeDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadRealtimeDataResponse.soap_get(soap, "ns1:UploadRealtimeDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetInspectionInfo_(const char *endpoint, const char *soap_action, _ns1__GetInspectionInfo *ns1__GetInspectionInfo, _ns1__GetInspectionInfoResponse &ns1__GetInspectionInfoResponse)
{	struct soap *soap = this;
	struct __ns1__GetInspectionInfo_ soap_tmp___ns1__GetInspectionInfo_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetInspectionInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetInspectionInfo_.ns1__GetInspectionInfo = ns1__GetInspectionInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetInspectionInfo_(soap, &soap_tmp___ns1__GetInspectionInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetInspectionInfo_(soap, &soap_tmp___ns1__GetInspectionInfo_, "-ns1:GetInspectionInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetInspectionInfo_(soap, &soap_tmp___ns1__GetInspectionInfo_, "-ns1:GetInspectionInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetInspectionInfoResponse)
		return soap_closesock(soap);
	ns1__GetInspectionInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetInspectionInfoResponse.soap_get(soap, "ns1:GetInspectionInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::BeginCalibrate_(const char *endpoint, const char *soap_action, _ns1__BeginCalibrate *ns1__BeginCalibrate, _ns1__BeginCalibrateResponse &ns1__BeginCalibrateResponse)
{	struct soap *soap = this;
	struct __ns1__BeginCalibrate_ soap_tmp___ns1__BeginCalibrate_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/BeginCalibrate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__BeginCalibrate_.ns1__BeginCalibrate = ns1__BeginCalibrate;
	soap_serializeheader(soap);
	soap_serialize___ns1__BeginCalibrate_(soap, &soap_tmp___ns1__BeginCalibrate_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__BeginCalibrate_(soap, &soap_tmp___ns1__BeginCalibrate_, "-ns1:BeginCalibrate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__BeginCalibrate_(soap, &soap_tmp___ns1__BeginCalibrate_, "-ns1:BeginCalibrate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__BeginCalibrateResponse)
		return soap_closesock(soap);
	ns1__BeginCalibrateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__BeginCalibrateResponse.soap_get(soap, "ns1:BeginCalibrateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::UploadCalibrateData_(const char *endpoint, const char *soap_action, _ns1__UploadCalibrateData *ns1__UploadCalibrateData, _ns1__UploadCalibrateDataResponse &ns1__UploadCalibrateDataResponse)
{	struct soap *soap = this;
	struct __ns1__UploadCalibrateData_ soap_tmp___ns1__UploadCalibrateData_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/UploadCalibrateData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadCalibrateData_.ns1__UploadCalibrateData = ns1__UploadCalibrateData;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadCalibrateData_(soap, &soap_tmp___ns1__UploadCalibrateData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadCalibrateData_(soap, &soap_tmp___ns1__UploadCalibrateData_, "-ns1:UploadCalibrateData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadCalibrateData_(soap, &soap_tmp___ns1__UploadCalibrateData_, "-ns1:UploadCalibrateData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UploadCalibrateDataResponse)
		return soap_closesock(soap);
	ns1__UploadCalibrateDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadCalibrateDataResponse.soap_get(soap, "ns1:UploadCalibrateDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::EndCalibrate_(const char *endpoint, const char *soap_action, _ns1__EndCalibrate *ns1__EndCalibrate, _ns1__EndCalibrateResponse &ns1__EndCalibrateResponse)
{	struct soap *soap = this;
	struct __ns1__EndCalibrate_ soap_tmp___ns1__EndCalibrate_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/EndCalibrate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__EndCalibrate_.ns1__EndCalibrate = ns1__EndCalibrate;
	soap_serializeheader(soap);
	soap_serialize___ns1__EndCalibrate_(soap, &soap_tmp___ns1__EndCalibrate_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__EndCalibrate_(soap, &soap_tmp___ns1__EndCalibrate_, "-ns1:EndCalibrate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__EndCalibrate_(soap, &soap_tmp___ns1__EndCalibrate_, "-ns1:EndCalibrate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__EndCalibrateResponse)
		return soap_closesock(soap);
	ns1__EndCalibrateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__EndCalibrateResponse.soap_get(soap, "ns1:EndCalibrateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::TestPhoto_(const char *endpoint, const char *soap_action, _ns1__TestPhoto *ns1__TestPhoto, _ns1__TestPhotoResponse &ns1__TestPhotoResponse)
{	struct soap *soap = this;
	struct __ns1__TestPhoto_ soap_tmp___ns1__TestPhoto_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/TestPhoto";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__TestPhoto_.ns1__TestPhoto = ns1__TestPhoto;
	soap_serializeheader(soap);
	soap_serialize___ns1__TestPhoto_(soap, &soap_tmp___ns1__TestPhoto_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__TestPhoto_(soap, &soap_tmp___ns1__TestPhoto_, "-ns1:TestPhoto", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__TestPhoto_(soap, &soap_tmp___ns1__TestPhoto_, "-ns1:TestPhoto", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__TestPhotoResponse)
		return soap_closesock(soap);
	ns1__TestPhotoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__TestPhotoResponse.soap_get(soap, "ns1:TestPhotoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::FuelEvaporationInspect_(const char *endpoint, const char *soap_action, _ns1__FuelEvaporationInspect *ns1__FuelEvaporationInspect, _ns1__FuelEvaporationInspectResponse &ns1__FuelEvaporationInspectResponse)
{	struct soap *soap = this;
	struct __ns1__FuelEvaporationInspect_ soap_tmp___ns1__FuelEvaporationInspect_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/FuelEvaporationInspect";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__FuelEvaporationInspect_.ns1__FuelEvaporationInspect = ns1__FuelEvaporationInspect;
	soap_serializeheader(soap);
	soap_serialize___ns1__FuelEvaporationInspect_(soap, &soap_tmp___ns1__FuelEvaporationInspect_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__FuelEvaporationInspect_(soap, &soap_tmp___ns1__FuelEvaporationInspect_, "-ns1:FuelEvaporationInspect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__FuelEvaporationInspect_(soap, &soap_tmp___ns1__FuelEvaporationInspect_, "-ns1:FuelEvaporationInspect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__FuelEvaporationInspectResponse)
		return soap_closesock(soap);
	ns1__FuelEvaporationInspectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__FuelEvaporationInspectResponse.soap_get(soap, "ns1:FuelEvaporationInspectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetInspectParams_(const char *endpoint, const char *soap_action, _ns1__GetInspectParams *ns1__GetInspectParams, _ns1__GetInspectParamsResponse &ns1__GetInspectParamsResponse)
{	struct soap *soap = this;
	struct __ns1__GetInspectParams_ soap_tmp___ns1__GetInspectParams_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetInspectParams";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetInspectParams_.ns1__GetInspectParams = ns1__GetInspectParams;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetInspectParams_(soap, &soap_tmp___ns1__GetInspectParams_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetInspectParams_(soap, &soap_tmp___ns1__GetInspectParams_, "-ns1:GetInspectParams", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetInspectParams_(soap, &soap_tmp___ns1__GetInspectParams_, "-ns1:GetInspectParams", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetInspectParamsResponse)
		return soap_closesock(soap);
	ns1__GetInspectParamsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetInspectParamsResponse.soap_get(soap, "ns1:GetInspectParamsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetOtherInspectQueueByPlateID_(const char *endpoint, const char *soap_action, _ns1__GetOtherInspectQueueByPlateID *ns1__GetOtherInspectQueueByPlateID, _ns1__GetOtherInspectQueueByPlateIDResponse &ns1__GetOtherInspectQueueByPlateIDResponse)
{	struct soap *soap = this;
	struct __ns1__GetOtherInspectQueueByPlateID_ soap_tmp___ns1__GetOtherInspectQueueByPlateID_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetOtherInspectQueueByPlateID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetOtherInspectQueueByPlateID_.ns1__GetOtherInspectQueueByPlateID = ns1__GetOtherInspectQueueByPlateID;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetOtherInspectQueueByPlateID_(soap, &soap_tmp___ns1__GetOtherInspectQueueByPlateID_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetOtherInspectQueueByPlateID_(soap, &soap_tmp___ns1__GetOtherInspectQueueByPlateID_, "-ns1:GetOtherInspectQueueByPlateID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetOtherInspectQueueByPlateID_(soap, &soap_tmp___ns1__GetOtherInspectQueueByPlateID_, "-ns1:GetOtherInspectQueueByPlateID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetOtherInspectQueueByPlateIDResponse)
		return soap_closesock(soap);
	ns1__GetOtherInspectQueueByPlateIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetOtherInspectQueueByPlateIDResponse.soap_get(soap, "ns1:GetOtherInspectQueueByPlateIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::GetOtherInspectQueueByDate_(const char *endpoint, const char *soap_action, _ns1__GetOtherInspectQueueByDate *ns1__GetOtherInspectQueueByDate, _ns1__GetOtherInspectQueueByDateResponse &ns1__GetOtherInspectQueueByDateResponse)
{	struct soap *soap = this;
	struct __ns1__GetOtherInspectQueueByDate_ soap_tmp___ns1__GetOtherInspectQueueByDate_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/GetOtherInspectQueueByDate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetOtherInspectQueueByDate_.ns1__GetOtherInspectQueueByDate = ns1__GetOtherInspectQueueByDate;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetOtherInspectQueueByDate_(soap, &soap_tmp___ns1__GetOtherInspectQueueByDate_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetOtherInspectQueueByDate_(soap, &soap_tmp___ns1__GetOtherInspectQueueByDate_, "-ns1:GetOtherInspectQueueByDate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetOtherInspectQueueByDate_(soap, &soap_tmp___ns1__GetOtherInspectQueueByDate_, "-ns1:GetOtherInspectQueueByDate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetOtherInspectQueueByDateResponse)
		return soap_closesock(soap);
	ns1__GetOtherInspectQueueByDateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetOtherInspectQueueByDateResponse.soap_get(soap, "ns1:GetOtherInspectQueueByDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::OBDInspect_(const char *endpoint, const char *soap_action, _ns1__OBDInspect *ns1__OBDInspect, _ns1__OBDInspectResponse &ns1__OBDInspectResponse)
{	struct soap *soap = this;
	struct __ns1__OBDInspect_ soap_tmp___ns1__OBDInspect_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/OBDInspect";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__OBDInspect_.ns1__OBDInspect = ns1__OBDInspect;
	soap_serializeheader(soap);
	soap_serialize___ns1__OBDInspect_(soap, &soap_tmp___ns1__OBDInspect_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OBDInspect_(soap, &soap_tmp___ns1__OBDInspect_, "-ns1:OBDInspect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OBDInspect_(soap, &soap_tmp___ns1__OBDInspect_, "-ns1:OBDInspect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__OBDInspectResponse)
		return soap_closesock(soap);
	ns1__OBDInspectResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OBDInspectResponse.soap_get(soap, "ns1:OBDInspectResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ServiceSoapProxy::OBDTXCheck_(const char *endpoint, const char *soap_action, _ns1__OBDTXCheck *ns1__OBDTXCheck, _ns1__OBDTXCheckResponse &ns1__OBDTXCheckResponse)
{	struct soap *soap = this;
	struct __ns1__OBDTXCheck_ soap_tmp___ns1__OBDTXCheck_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.40.2:9002/gcservice/service.asmx";
	if (soap_action == NULL)
		soap_action = "http://www.gc8848.com/OBDTXCheck";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__OBDTXCheck_.ns1__OBDTXCheck = ns1__OBDTXCheck;
	soap_serializeheader(soap);
	soap_serialize___ns1__OBDTXCheck_(soap, &soap_tmp___ns1__OBDTXCheck_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__OBDTXCheck_(soap, &soap_tmp___ns1__OBDTXCheck_, "-ns1:OBDTXCheck", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__OBDTXCheck_(soap, &soap_tmp___ns1__OBDTXCheck_, "-ns1:OBDTXCheck", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__OBDTXCheckResponse)
		return soap_closesock(soap);
	ns1__OBDTXCheckResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__OBDTXCheckResponse.soap_get(soap, "ns1:OBDTXCheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
