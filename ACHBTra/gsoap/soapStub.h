/* soapStub.h
   Generated by gSOAP 2.8.21 from onvif.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#define SOAP_NAMESPACE_OF_ns1	"http://tempuri.org/"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20821
# error "GSOAP VERSION 20821 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__ns1__query
#define SOAP_TYPE__ns1__query (8)
/* ns1:query */
class SOAP_CMAC _ns1__query
{
public:
	std::wstring *xmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique type id SOAP_TYPE__ns1__query */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__query() { _ns1__query::soap_default(NULL); }
	virtual ~_ns1__query() { }
};
#endif

#ifndef SOAP_TYPE__ns1__queryResponse
#define SOAP_TYPE__ns1__queryResponse (9)
/* ns1:queryResponse */
class SOAP_CMAC _ns1__queryResponse
{
public:
	std::wstring *queryResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique type id SOAP_TYPE__ns1__queryResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__queryResponse() { _ns1__queryResponse::soap_default(NULL); }
	virtual ~_ns1__queryResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__write
#define SOAP_TYPE__ns1__write (10)
/* ns1:write */
class SOAP_CMAC _ns1__write
{
public:
	std::wstring *xmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique type id SOAP_TYPE__ns1__write */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__write() { _ns1__write::soap_default(NULL); }
	virtual ~_ns1__write() { }
};
#endif

#ifndef SOAP_TYPE__ns1__writeResponse
#define SOAP_TYPE__ns1__writeResponse (11)
/* ns1:writeResponse */
class SOAP_CMAC _ns1__writeResponse
{
public:
	std::wstring *writeResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique type id SOAP_TYPE__ns1__writeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__writeResponse() { _ns1__writeResponse::soap_default(NULL); }
	virtual ~_ns1__writeResponse() { }
};
#endif

#ifndef SOAP_TYPE___ns1__query
#define SOAP_TYPE___ns1__query (18)
/* Operation wrapper: */
struct __ns1__query
{
public:
	_ns1__query *ns1__query;	/* optional element of type ns1:query */
public:
	int soap_type() const { return 18; } /* = unique type id SOAP_TYPE___ns1__query */
};
#endif

#ifndef SOAP_TYPE___ns1__write
#define SOAP_TYPE___ns1__write (22)
/* Operation wrapper: */
struct __ns1__write
{
public:
	_ns1__write *ns1__write;	/* optional element of type ns1:write */
public:
	int soap_type() const { return 22; } /* = unique type id SOAP_TYPE___ns1__write */
};
#endif

#ifndef SOAP_TYPE___ns1__query_
#define SOAP_TYPE___ns1__query_ (24)
/* Operation wrapper: */
struct __ns1__query_
{
public:
	_ns1__query *ns1__query;	/* optional element of type ns1:query */
public:
	int soap_type() const { return 24; } /* = unique type id SOAP_TYPE___ns1__query_ */
};
#endif

#ifndef SOAP_TYPE___ns1__write_
#define SOAP_TYPE___ns1__write_ (26)
/* Operation wrapper: */
struct __ns1__write_
{
public:
	_ns1__write *ns1__write;	/* optional element of type ns1:write */
public:
	int soap_type() const { return 26; } /* = unique type id SOAP_TYPE___ns1__write_ */
};
#endif

#ifndef SOAP_TYPE___ns1__query__
#define SOAP_TYPE___ns1__query__ (28)
/* Operation wrapper: */
struct __ns1__query__
{
public:
	_ns1__query *ns1__query;	/* optional element of type ns1:query */
public:
	int soap_type() const { return 28; } /* = unique type id SOAP_TYPE___ns1__query__ */
};
#endif

#ifndef SOAP_TYPE___ns1__write__
#define SOAP_TYPE___ns1__write__ (30)
/* Operation wrapper: */
struct __ns1__write__
{
public:
	_ns1__write *ns1__write;	/* optional element of type ns1:write */
public:
	int soap_type() const { return 30; } /* = unique type id SOAP_TYPE___ns1__write__ */
};
#endif

#ifndef SOAP_TYPE___ns1__query___
#define SOAP_TYPE___ns1__query___ (32)
/* Operation wrapper: */
struct __ns1__query___
{
public:
	_ns1__query *ns1__query;	/* optional element of type ns1:query */
public:
	int soap_type() const { return 32; } /* = unique type id SOAP_TYPE___ns1__query___ */
};
#endif

#ifndef SOAP_TYPE___ns1__write___
#define SOAP_TYPE___ns1__write___ (34)
/* Operation wrapper: */
struct __ns1__write___
{
public:
	_ns1__write *ns1__write;	/* optional element of type ns1:write */
public:
	int soap_type() const { return 34; } /* = unique type id SOAP_TYPE___ns1__write___ */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (35)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 35; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (36)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 36; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (38)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 38; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (41)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 41; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (42)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 42; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 __ns1__query(struct soap*, _ns1__query *ns1__query, _ns1__queryResponse &ns1__queryResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__write(struct soap*, _ns1__write *ns1__write, _ns1__writeResponse &ns1__writeResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__query_(struct soap*, _ns1__query *ns1__query, _ns1__queryResponse &ns1__queryResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__write_(struct soap*, _ns1__write *ns1__write, _ns1__writeResponse &ns1__writeResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__query__(struct soap*, _ns1__query *ns1__query, _ns1__queryResponse &ns1__queryResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__write__(struct soap*, _ns1__write *ns1__write, _ns1__writeResponse &ns1__writeResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__query___(struct soap*, _ns1__query *ns1__query, _ns1__queryResponse &ns1__queryResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__write___(struct soap*, _ns1__write *ns1__write, _ns1__writeResponse &ns1__writeResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__query(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__write(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__query_(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__write_(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__query__(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__write__(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__query___(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__write___(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__query(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__query *ns1__query, _ns1__queryResponse &ns1__queryResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__write(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__write *ns1__write, _ns1__writeResponse &ns1__writeResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__query_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__query *ns1__query, _ns1__queryResponse &ns1__queryResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__write_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__write *ns1__write, _ns1__writeResponse &ns1__writeResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__query__(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__query *ns1__query, _ns1__queryResponse &ns1__queryResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__write__(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__write *ns1__write, _ns1__writeResponse &ns1__writeResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__query___(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__query *ns1__query, _ns1__queryResponse &ns1__queryResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__write___(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__write *ns1__write, _ns1__writeResponse &ns1__writeResponse);

#endif

/* End of soapStub.h */
