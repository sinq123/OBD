/* soapH.h
   Generated by gSOAP 2.8.21 from DataInterface.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__wstring
#define SOAP_TYPE_std__wstring (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__wstring(struct soap*, std::wstring *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__wstring(struct soap*, const std::wstring *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__wstring(struct soap*, const char*, int, const std::wstring*, const char*);
SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_in_std__wstring(struct soap*, const char*, std::wstring*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__wstring(struct soap*, const std::wstring *, const char*, const char*);

#ifndef soap_write_std__wstring
#define soap_write_std__wstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_std__wstring(soap, data),0) || soap_put_std__wstring(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_get_std__wstring(struct soap*, std::wstring *, const char*, const char*);

#ifndef soap_read_std__wstring
#define soap_read_std__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_std__wstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::wstring * SOAP_FMAC2 soap_instantiate_std__wstring(struct soap*, int, const char*, const char*, size_t*);

inline std::wstring * soap_new_std__wstring(struct soap *soap, int n = -1) { return soap_instantiate_std__wstring(soap, n, NULL, NULL, NULL); }

inline std::wstring * soap_new_req_std__wstring(struct soap *soap) { std::wstring *_p = soap_instantiate_std__wstring(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__wstring(soap, _p); } return _p; }

inline std::wstring * soap_new_set_std__wstring(struct soap *soap) { std::wstring *_p = soap_instantiate_std__wstring(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__wstring(soap, _p); } return _p; }

inline void soap_delete_std__wstring(struct soap *soap, std::wstring *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__wstring(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetOBDDeviceIdResponse
#define SOAP_TYPE__ns1__GetOBDDeviceIdResponse (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetOBDDeviceIdResponse(struct soap*, const char*, int, const _ns1__GetOBDDeviceIdResponse *, const char*);
SOAP_FMAC3 _ns1__GetOBDDeviceIdResponse * SOAP_FMAC4 soap_in__ns1__GetOBDDeviceIdResponse(struct soap*, const char*, _ns1__GetOBDDeviceIdResponse *, const char*);

#ifndef soap_write__ns1__GetOBDDeviceIdResponse
#define soap_write__ns1__GetOBDDeviceIdResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetOBDDeviceIdResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetOBDDeviceIdResponse * SOAP_FMAC4 soap_get__ns1__GetOBDDeviceIdResponse(struct soap*, _ns1__GetOBDDeviceIdResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetOBDDeviceIdResponse
#define soap_read__ns1__GetOBDDeviceIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetOBDDeviceIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetOBDDeviceIdResponse * SOAP_FMAC2 soap_instantiate__ns1__GetOBDDeviceIdResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetOBDDeviceIdResponse * soap_new__ns1__GetOBDDeviceIdResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetOBDDeviceIdResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetOBDDeviceIdResponse * soap_new_req__ns1__GetOBDDeviceIdResponse(struct soap *soap) { _ns1__GetOBDDeviceIdResponse *_p = soap_instantiate__ns1__GetOBDDeviceIdResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetOBDDeviceIdResponse * soap_new_set__ns1__GetOBDDeviceIdResponse(struct soap *soap, ns1__ArrayOfOBDInfoModel *GetOBDDeviceIdResult) { _ns1__GetOBDDeviceIdResponse *_p = soap_instantiate__ns1__GetOBDDeviceIdResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetOBDDeviceIdResponse::GetOBDDeviceIdResult = GetOBDDeviceIdResult; } return _p; }

inline void soap_delete__ns1__GetOBDDeviceIdResponse(struct soap *soap, _ns1__GetOBDDeviceIdResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetOBDDeviceIdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetOBDDeviceId
#define SOAP_TYPE__ns1__GetOBDDeviceId (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetOBDDeviceId(struct soap*, const char*, int, const _ns1__GetOBDDeviceId *, const char*);
SOAP_FMAC3 _ns1__GetOBDDeviceId * SOAP_FMAC4 soap_in__ns1__GetOBDDeviceId(struct soap*, const char*, _ns1__GetOBDDeviceId *, const char*);

#ifndef soap_write__ns1__GetOBDDeviceId
#define soap_write__ns1__GetOBDDeviceId(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetOBDDeviceId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetOBDDeviceId * SOAP_FMAC4 soap_get__ns1__GetOBDDeviceId(struct soap*, _ns1__GetOBDDeviceId *, const char*, const char*);

#ifndef soap_read__ns1__GetOBDDeviceId
#define soap_read__ns1__GetOBDDeviceId(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetOBDDeviceId(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetOBDDeviceId * SOAP_FMAC2 soap_instantiate__ns1__GetOBDDeviceId(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetOBDDeviceId * soap_new__ns1__GetOBDDeviceId(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetOBDDeviceId(soap, n, NULL, NULL, NULL); }

inline _ns1__GetOBDDeviceId * soap_new_req__ns1__GetOBDDeviceId(struct soap *soap) { _ns1__GetOBDDeviceId *_p = soap_instantiate__ns1__GetOBDDeviceId(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetOBDDeviceId * soap_new_set__ns1__GetOBDDeviceId(struct soap *soap, std::wstring *lineNo) { _ns1__GetOBDDeviceId *_p = soap_instantiate__ns1__GetOBDDeviceId(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetOBDDeviceId::lineNo = lineNo; } return _p; }

inline void soap_delete__ns1__GetOBDDeviceId(struct soap *soap, _ns1__GetOBDDeviceId *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetOBDDeviceId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UploadAppearanceDataResponse
#define SOAP_TYPE__ns1__UploadAppearanceDataResponse (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UploadAppearanceDataResponse(struct soap*, const char*, int, const _ns1__UploadAppearanceDataResponse *, const char*);
SOAP_FMAC3 _ns1__UploadAppearanceDataResponse * SOAP_FMAC4 soap_in__ns1__UploadAppearanceDataResponse(struct soap*, const char*, _ns1__UploadAppearanceDataResponse *, const char*);

#ifndef soap_write__ns1__UploadAppearanceDataResponse
#define soap_write__ns1__UploadAppearanceDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:UploadAppearanceDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UploadAppearanceDataResponse * SOAP_FMAC4 soap_get__ns1__UploadAppearanceDataResponse(struct soap*, _ns1__UploadAppearanceDataResponse *, const char*, const char*);

#ifndef soap_read__ns1__UploadAppearanceDataResponse
#define soap_read__ns1__UploadAppearanceDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UploadAppearanceDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UploadAppearanceDataResponse * SOAP_FMAC2 soap_instantiate__ns1__UploadAppearanceDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UploadAppearanceDataResponse * soap_new__ns1__UploadAppearanceDataResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UploadAppearanceDataResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__UploadAppearanceDataResponse * soap_new_req__ns1__UploadAppearanceDataResponse(struct soap *soap) { _ns1__UploadAppearanceDataResponse *_p = soap_instantiate__ns1__UploadAppearanceDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UploadAppearanceDataResponse * soap_new_set__ns1__UploadAppearanceDataResponse(struct soap *soap, std::wstring *UploadAppearanceDataResult) { _ns1__UploadAppearanceDataResponse *_p = soap_instantiate__ns1__UploadAppearanceDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UploadAppearanceDataResponse::UploadAppearanceDataResult = UploadAppearanceDataResult; } return _p; }

inline void soap_delete__ns1__UploadAppearanceDataResponse(struct soap *soap, _ns1__UploadAppearanceDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UploadAppearanceDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UploadAppearanceData
#define SOAP_TYPE__ns1__UploadAppearanceData (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UploadAppearanceData(struct soap*, const char*, int, const _ns1__UploadAppearanceData *, const char*);
SOAP_FMAC3 _ns1__UploadAppearanceData * SOAP_FMAC4 soap_in__ns1__UploadAppearanceData(struct soap*, const char*, _ns1__UploadAppearanceData *, const char*);

#ifndef soap_write__ns1__UploadAppearanceData
#define soap_write__ns1__UploadAppearanceData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:UploadAppearanceData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UploadAppearanceData * SOAP_FMAC4 soap_get__ns1__UploadAppearanceData(struct soap*, _ns1__UploadAppearanceData *, const char*, const char*);

#ifndef soap_read__ns1__UploadAppearanceData
#define soap_read__ns1__UploadAppearanceData(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UploadAppearanceData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__UploadAppearanceData * SOAP_FMAC2 soap_instantiate__ns1__UploadAppearanceData(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__UploadAppearanceData * soap_new__ns1__UploadAppearanceData(struct soap *soap, int n = -1) { return soap_instantiate__ns1__UploadAppearanceData(soap, n, NULL, NULL, NULL); }

inline _ns1__UploadAppearanceData * soap_new_req__ns1__UploadAppearanceData(struct soap *soap) { _ns1__UploadAppearanceData *_p = soap_instantiate__ns1__UploadAppearanceData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__UploadAppearanceData * soap_new_set__ns1__UploadAppearanceData(struct soap *soap, std::wstring *jsonParam, std::wstring *userName, std::wstring *passWord, std::wstring *appearancePicture, std::wstring *pic2, std::wstring *pic3, std::wstring *pic4, std::wstring *pic5, std::wstring *pic6, std::wstring *pic7, std::wstring *pic8) { _ns1__UploadAppearanceData *_p = soap_instantiate__ns1__UploadAppearanceData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__UploadAppearanceData::jsonParam = jsonParam; _p->_ns1__UploadAppearanceData::userName = userName; _p->_ns1__UploadAppearanceData::passWord = passWord; _p->_ns1__UploadAppearanceData::appearancePicture = appearancePicture; _p->_ns1__UploadAppearanceData::pic2 = pic2; _p->_ns1__UploadAppearanceData::pic3 = pic3; _p->_ns1__UploadAppearanceData::pic4 = pic4; _p->_ns1__UploadAppearanceData::pic5 = pic5; _p->_ns1__UploadAppearanceData::pic6 = pic6; _p->_ns1__UploadAppearanceData::pic7 = pic7; _p->_ns1__UploadAppearanceData::pic8 = pic8; } return _p; }

inline void soap_delete__ns1__UploadAppearanceData(struct soap *soap, _ns1__UploadAppearanceData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UploadAppearanceData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CommonResponse
#define SOAP_TYPE__ns1__CommonResponse (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CommonResponse(struct soap*, const char*, int, const _ns1__CommonResponse *, const char*);
SOAP_FMAC3 _ns1__CommonResponse * SOAP_FMAC4 soap_in__ns1__CommonResponse(struct soap*, const char*, _ns1__CommonResponse *, const char*);

#ifndef soap_write__ns1__CommonResponse
#define soap_write__ns1__CommonResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:CommonResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__CommonResponse * SOAP_FMAC4 soap_get__ns1__CommonResponse(struct soap*, _ns1__CommonResponse *, const char*, const char*);

#ifndef soap_read__ns1__CommonResponse
#define soap_read__ns1__CommonResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CommonResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__CommonResponse * SOAP_FMAC2 soap_instantiate__ns1__CommonResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CommonResponse * soap_new__ns1__CommonResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__CommonResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__CommonResponse * soap_new_req__ns1__CommonResponse(struct soap *soap) { _ns1__CommonResponse *_p = soap_instantiate__ns1__CommonResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__CommonResponse * soap_new_set__ns1__CommonResponse(struct soap *soap, std::wstring *CommonResult) { _ns1__CommonResponse *_p = soap_instantiate__ns1__CommonResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__CommonResponse::CommonResult = CommonResult; } return _p; }

inline void soap_delete__ns1__CommonResponse(struct soap *soap, _ns1__CommonResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CommonResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Common
#define SOAP_TYPE__ns1__Common (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Common(struct soap*, const char*, int, const _ns1__Common *, const char*);
SOAP_FMAC3 _ns1__Common * SOAP_FMAC4 soap_in__ns1__Common(struct soap*, const char*, _ns1__Common *, const char*);

#ifndef soap_write__ns1__Common
#define soap_write__ns1__Common(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:Common", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Common * SOAP_FMAC4 soap_get__ns1__Common(struct soap*, _ns1__Common *, const char*, const char*);

#ifndef soap_read__ns1__Common
#define soap_read__ns1__Common(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Common(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__Common * SOAP_FMAC2 soap_instantiate__ns1__Common(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Common * soap_new__ns1__Common(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Common(soap, n, NULL, NULL, NULL); }

inline _ns1__Common * soap_new_req__ns1__Common(struct soap *soap) { _ns1__Common *_p = soap_instantiate__ns1__Common(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__Common * soap_new_set__ns1__Common(struct soap *soap, std::wstring *methodName, std::wstring *jsonParam, std::wstring *ResultData, std::wstring *SourceData, std::wstring *SourceDataMS, std::wstring *OBDSourceData, std::wstring *userName, std::wstring *passWord) { _ns1__Common *_p = soap_instantiate__ns1__Common(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Common::methodName = methodName; _p->_ns1__Common::jsonParam = jsonParam; _p->_ns1__Common::ResultData = ResultData; _p->_ns1__Common::SourceData = SourceData; _p->_ns1__Common::SourceDataMS = SourceDataMS; _p->_ns1__Common::OBDSourceData = OBDSourceData; _p->_ns1__Common::userName = userName; _p->_ns1__Common::passWord = passWord; } return _p; }

inline void soap_delete__ns1__Common(struct soap *soap, _ns1__Common *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Common(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__OBDInfoModel
#define SOAP_TYPE_ns1__OBDInfoModel (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__OBDInfoModel(struct soap*, const char*, int, const ns1__OBDInfoModel *, const char*);
SOAP_FMAC3 ns1__OBDInfoModel * SOAP_FMAC4 soap_in_ns1__OBDInfoModel(struct soap*, const char*, ns1__OBDInfoModel *, const char*);

#ifndef soap_write_ns1__OBDInfoModel
#define soap_write_ns1__OBDInfoModel(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:OBDInfoModel", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__OBDInfoModel * SOAP_FMAC4 soap_get_ns1__OBDInfoModel(struct soap*, ns1__OBDInfoModel *, const char*, const char*);

#ifndef soap_read_ns1__OBDInfoModel
#define soap_read_ns1__OBDInfoModel(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__OBDInfoModel(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__OBDInfoModel * SOAP_FMAC2 soap_instantiate_ns1__OBDInfoModel(struct soap*, int, const char*, const char*, size_t*);

inline ns1__OBDInfoModel * soap_new_ns1__OBDInfoModel(struct soap *soap, int n = -1) { return soap_instantiate_ns1__OBDInfoModel(soap, n, NULL, NULL, NULL); }

inline ns1__OBDInfoModel * soap_new_req_ns1__OBDInfoModel(struct soap *soap) { ns1__OBDInfoModel *_p = soap_instantiate_ns1__OBDInfoModel(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__OBDInfoModel * soap_new_set_ns1__OBDInfoModel(struct soap *soap, std::wstring *TESTLINENO, std::wstring *IP) { ns1__OBDInfoModel *_p = soap_instantiate_ns1__OBDInfoModel(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__OBDInfoModel::TESTLINENO = TESTLINENO; _p->ns1__OBDInfoModel::IP = IP; } return _p; }

inline void soap_delete_ns1__OBDInfoModel(struct soap *soap, ns1__OBDInfoModel *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__OBDInfoModel(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ArrayOfOBDInfoModel
#define SOAP_TYPE_ns1__ArrayOfOBDInfoModel (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ArrayOfOBDInfoModel(struct soap*, const char*, int, const ns1__ArrayOfOBDInfoModel *, const char*);
SOAP_FMAC3 ns1__ArrayOfOBDInfoModel * SOAP_FMAC4 soap_in_ns1__ArrayOfOBDInfoModel(struct soap*, const char*, ns1__ArrayOfOBDInfoModel *, const char*);

#ifndef soap_write_ns1__ArrayOfOBDInfoModel
#define soap_write_ns1__ArrayOfOBDInfoModel(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:ArrayOfOBDInfoModel", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ArrayOfOBDInfoModel * SOAP_FMAC4 soap_get_ns1__ArrayOfOBDInfoModel(struct soap*, ns1__ArrayOfOBDInfoModel *, const char*, const char*);

#ifndef soap_read_ns1__ArrayOfOBDInfoModel
#define soap_read_ns1__ArrayOfOBDInfoModel(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ArrayOfOBDInfoModel(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__ArrayOfOBDInfoModel * SOAP_FMAC2 soap_instantiate_ns1__ArrayOfOBDInfoModel(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ArrayOfOBDInfoModel * soap_new_ns1__ArrayOfOBDInfoModel(struct soap *soap, int n = -1) { return soap_instantiate_ns1__ArrayOfOBDInfoModel(soap, n, NULL, NULL, NULL); }

inline ns1__ArrayOfOBDInfoModel * soap_new_req_ns1__ArrayOfOBDInfoModel(struct soap *soap) { ns1__ArrayOfOBDInfoModel *_p = soap_instantiate_ns1__ArrayOfOBDInfoModel(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__ArrayOfOBDInfoModel * soap_new_set_ns1__ArrayOfOBDInfoModel(struct soap *soap, std::vector<ns1__OBDInfoModel * >& OBDInfoModel) { ns1__ArrayOfOBDInfoModel *_p = soap_instantiate_ns1__ArrayOfOBDInfoModel(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ArrayOfOBDInfoModel::OBDInfoModel = OBDInfoModel; } return _p; }

inline void soap_delete_ns1__ArrayOfOBDInfoModel(struct soap *soap, ns1__ArrayOfOBDInfoModel *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ArrayOfOBDInfoModel(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__GetOBDDeviceId_
#define SOAP_TYPE___ns1__GetOBDDeviceId_ (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetOBDDeviceId_(struct soap*, struct __ns1__GetOBDDeviceId_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetOBDDeviceId_(struct soap*, const struct __ns1__GetOBDDeviceId_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetOBDDeviceId_(struct soap*, const char*, int, const struct __ns1__GetOBDDeviceId_ *, const char*);
SOAP_FMAC3 struct __ns1__GetOBDDeviceId_ * SOAP_FMAC4 soap_in___ns1__GetOBDDeviceId_(struct soap*, const char*, struct __ns1__GetOBDDeviceId_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetOBDDeviceId_(struct soap*, const struct __ns1__GetOBDDeviceId_ *, const char*, const char*);

#ifndef soap_write___ns1__GetOBDDeviceId_
#define soap_write___ns1__GetOBDDeviceId_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetOBDDeviceId_(soap, data),0) || soap_put___ns1__GetOBDDeviceId_(soap, data, "-ns1:GetOBDDeviceId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetOBDDeviceId_ * SOAP_FMAC4 soap_get___ns1__GetOBDDeviceId_(struct soap*, struct __ns1__GetOBDDeviceId_ *, const char*, const char*);

#ifndef soap_read___ns1__GetOBDDeviceId_
#define soap_read___ns1__GetOBDDeviceId_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetOBDDeviceId_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetOBDDeviceId_ * SOAP_FMAC2 soap_instantiate___ns1__GetOBDDeviceId_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetOBDDeviceId_ * soap_new___ns1__GetOBDDeviceId_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetOBDDeviceId_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetOBDDeviceId_ * soap_new_req___ns1__GetOBDDeviceId_(struct soap *soap) { struct __ns1__GetOBDDeviceId_ *_p = soap_instantiate___ns1__GetOBDDeviceId_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetOBDDeviceId_(soap, _p); } return _p; }

inline struct __ns1__GetOBDDeviceId_ * soap_new_set___ns1__GetOBDDeviceId_(struct soap *soap, _ns1__GetOBDDeviceId *ns1__GetOBDDeviceId) { struct __ns1__GetOBDDeviceId_ *_p = soap_instantiate___ns1__GetOBDDeviceId_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetOBDDeviceId_(soap, _p); _p->ns1__GetOBDDeviceId = ns1__GetOBDDeviceId; } return _p; }

inline void soap_delete___ns1__GetOBDDeviceId_(struct soap *soap, struct __ns1__GetOBDDeviceId_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetOBDDeviceId_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UploadAppearanceData_
#define SOAP_TYPE___ns1__UploadAppearanceData_ (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UploadAppearanceData_(struct soap*, struct __ns1__UploadAppearanceData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UploadAppearanceData_(struct soap*, const struct __ns1__UploadAppearanceData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UploadAppearanceData_(struct soap*, const char*, int, const struct __ns1__UploadAppearanceData_ *, const char*);
SOAP_FMAC3 struct __ns1__UploadAppearanceData_ * SOAP_FMAC4 soap_in___ns1__UploadAppearanceData_(struct soap*, const char*, struct __ns1__UploadAppearanceData_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UploadAppearanceData_(struct soap*, const struct __ns1__UploadAppearanceData_ *, const char*, const char*);

#ifndef soap_write___ns1__UploadAppearanceData_
#define soap_write___ns1__UploadAppearanceData_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UploadAppearanceData_(soap, data),0) || soap_put___ns1__UploadAppearanceData_(soap, data, "-ns1:UploadAppearanceData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UploadAppearanceData_ * SOAP_FMAC4 soap_get___ns1__UploadAppearanceData_(struct soap*, struct __ns1__UploadAppearanceData_ *, const char*, const char*);

#ifndef soap_read___ns1__UploadAppearanceData_
#define soap_read___ns1__UploadAppearanceData_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UploadAppearanceData_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UploadAppearanceData_ * SOAP_FMAC2 soap_instantiate___ns1__UploadAppearanceData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UploadAppearanceData_ * soap_new___ns1__UploadAppearanceData_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UploadAppearanceData_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UploadAppearanceData_ * soap_new_req___ns1__UploadAppearanceData_(struct soap *soap) { struct __ns1__UploadAppearanceData_ *_p = soap_instantiate___ns1__UploadAppearanceData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UploadAppearanceData_(soap, _p); } return _p; }

inline struct __ns1__UploadAppearanceData_ * soap_new_set___ns1__UploadAppearanceData_(struct soap *soap, _ns1__UploadAppearanceData *ns1__UploadAppearanceData) { struct __ns1__UploadAppearanceData_ *_p = soap_instantiate___ns1__UploadAppearanceData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UploadAppearanceData_(soap, _p); _p->ns1__UploadAppearanceData = ns1__UploadAppearanceData; } return _p; }

inline void soap_delete___ns1__UploadAppearanceData_(struct soap *soap, struct __ns1__UploadAppearanceData_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UploadAppearanceData_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Common_
#define SOAP_TYPE___ns1__Common_ (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Common_(struct soap*, struct __ns1__Common_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Common_(struct soap*, const struct __ns1__Common_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Common_(struct soap*, const char*, int, const struct __ns1__Common_ *, const char*);
SOAP_FMAC3 struct __ns1__Common_ * SOAP_FMAC4 soap_in___ns1__Common_(struct soap*, const char*, struct __ns1__Common_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Common_(struct soap*, const struct __ns1__Common_ *, const char*, const char*);

#ifndef soap_write___ns1__Common_
#define soap_write___ns1__Common_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__Common_(soap, data),0) || soap_put___ns1__Common_(soap, data, "-ns1:Common", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Common_ * SOAP_FMAC4 soap_get___ns1__Common_(struct soap*, struct __ns1__Common_ *, const char*, const char*);

#ifndef soap_read___ns1__Common_
#define soap_read___ns1__Common_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Common_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__Common_ * SOAP_FMAC2 soap_instantiate___ns1__Common_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Common_ * soap_new___ns1__Common_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Common_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Common_ * soap_new_req___ns1__Common_(struct soap *soap) { struct __ns1__Common_ *_p = soap_instantiate___ns1__Common_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Common_(soap, _p); } return _p; }

inline struct __ns1__Common_ * soap_new_set___ns1__Common_(struct soap *soap, _ns1__Common *ns1__Common) { struct __ns1__Common_ *_p = soap_instantiate___ns1__Common_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Common_(soap, _p); _p->ns1__Common = ns1__Common; } return _p; }

inline void soap_delete___ns1__Common_(struct soap *soap, struct __ns1__Common_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Common_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetOBDDeviceId
#define SOAP_TYPE___ns1__GetOBDDeviceId (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetOBDDeviceId(struct soap*, struct __ns1__GetOBDDeviceId *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetOBDDeviceId(struct soap*, const struct __ns1__GetOBDDeviceId *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetOBDDeviceId(struct soap*, const char*, int, const struct __ns1__GetOBDDeviceId *, const char*);
SOAP_FMAC3 struct __ns1__GetOBDDeviceId * SOAP_FMAC4 soap_in___ns1__GetOBDDeviceId(struct soap*, const char*, struct __ns1__GetOBDDeviceId *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetOBDDeviceId(struct soap*, const struct __ns1__GetOBDDeviceId *, const char*, const char*);

#ifndef soap_write___ns1__GetOBDDeviceId
#define soap_write___ns1__GetOBDDeviceId(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetOBDDeviceId(soap, data),0) || soap_put___ns1__GetOBDDeviceId(soap, data, "-ns1:GetOBDDeviceId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetOBDDeviceId * SOAP_FMAC4 soap_get___ns1__GetOBDDeviceId(struct soap*, struct __ns1__GetOBDDeviceId *, const char*, const char*);

#ifndef soap_read___ns1__GetOBDDeviceId
#define soap_read___ns1__GetOBDDeviceId(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetOBDDeviceId(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetOBDDeviceId * SOAP_FMAC2 soap_instantiate___ns1__GetOBDDeviceId(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetOBDDeviceId * soap_new___ns1__GetOBDDeviceId(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetOBDDeviceId(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetOBDDeviceId * soap_new_req___ns1__GetOBDDeviceId(struct soap *soap) { struct __ns1__GetOBDDeviceId *_p = soap_instantiate___ns1__GetOBDDeviceId(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetOBDDeviceId(soap, _p); } return _p; }

inline struct __ns1__GetOBDDeviceId * soap_new_set___ns1__GetOBDDeviceId(struct soap *soap, _ns1__GetOBDDeviceId *ns1__GetOBDDeviceId) { struct __ns1__GetOBDDeviceId *_p = soap_instantiate___ns1__GetOBDDeviceId(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetOBDDeviceId(soap, _p); _p->ns1__GetOBDDeviceId = ns1__GetOBDDeviceId; } return _p; }

inline void soap_delete___ns1__GetOBDDeviceId(struct soap *soap, struct __ns1__GetOBDDeviceId *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetOBDDeviceId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__UploadAppearanceData
#define SOAP_TYPE___ns1__UploadAppearanceData (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__UploadAppearanceData(struct soap*, struct __ns1__UploadAppearanceData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__UploadAppearanceData(struct soap*, const struct __ns1__UploadAppearanceData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__UploadAppearanceData(struct soap*, const char*, int, const struct __ns1__UploadAppearanceData *, const char*);
SOAP_FMAC3 struct __ns1__UploadAppearanceData * SOAP_FMAC4 soap_in___ns1__UploadAppearanceData(struct soap*, const char*, struct __ns1__UploadAppearanceData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__UploadAppearanceData(struct soap*, const struct __ns1__UploadAppearanceData *, const char*, const char*);

#ifndef soap_write___ns1__UploadAppearanceData
#define soap_write___ns1__UploadAppearanceData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__UploadAppearanceData(soap, data),0) || soap_put___ns1__UploadAppearanceData(soap, data, "-ns1:UploadAppearanceData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__UploadAppearanceData * SOAP_FMAC4 soap_get___ns1__UploadAppearanceData(struct soap*, struct __ns1__UploadAppearanceData *, const char*, const char*);

#ifndef soap_read___ns1__UploadAppearanceData
#define soap_read___ns1__UploadAppearanceData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__UploadAppearanceData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__UploadAppearanceData * SOAP_FMAC2 soap_instantiate___ns1__UploadAppearanceData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__UploadAppearanceData * soap_new___ns1__UploadAppearanceData(struct soap *soap, int n = -1) { return soap_instantiate___ns1__UploadAppearanceData(soap, n, NULL, NULL, NULL); }

inline struct __ns1__UploadAppearanceData * soap_new_req___ns1__UploadAppearanceData(struct soap *soap) { struct __ns1__UploadAppearanceData *_p = soap_instantiate___ns1__UploadAppearanceData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UploadAppearanceData(soap, _p); } return _p; }

inline struct __ns1__UploadAppearanceData * soap_new_set___ns1__UploadAppearanceData(struct soap *soap, _ns1__UploadAppearanceData *ns1__UploadAppearanceData) { struct __ns1__UploadAppearanceData *_p = soap_instantiate___ns1__UploadAppearanceData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__UploadAppearanceData(soap, _p); _p->ns1__UploadAppearanceData = ns1__UploadAppearanceData; } return _p; }

inline void soap_delete___ns1__UploadAppearanceData(struct soap *soap, struct __ns1__UploadAppearanceData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__UploadAppearanceData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Common
#define SOAP_TYPE___ns1__Common (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Common(struct soap*, struct __ns1__Common *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Common(struct soap*, const struct __ns1__Common *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Common(struct soap*, const char*, int, const struct __ns1__Common *, const char*);
SOAP_FMAC3 struct __ns1__Common * SOAP_FMAC4 soap_in___ns1__Common(struct soap*, const char*, struct __ns1__Common *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Common(struct soap*, const struct __ns1__Common *, const char*, const char*);

#ifndef soap_write___ns1__Common
#define soap_write___ns1__Common(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__Common(soap, data),0) || soap_put___ns1__Common(soap, data, "-ns1:Common", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Common * SOAP_FMAC4 soap_get___ns1__Common(struct soap*, struct __ns1__Common *, const char*, const char*);

#ifndef soap_read___ns1__Common
#define soap_read___ns1__Common(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Common(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__Common * SOAP_FMAC2 soap_instantiate___ns1__Common(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Common * soap_new___ns1__Common(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Common(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Common * soap_new_req___ns1__Common(struct soap *soap) { struct __ns1__Common *_p = soap_instantiate___ns1__Common(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Common(soap, _p); } return _p; }

inline struct __ns1__Common * soap_new_set___ns1__Common(struct soap *soap, _ns1__Common *ns1__Common) { struct __ns1__Common *_p = soap_instantiate___ns1__Common(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Common(soap, _p); _p->ns1__Common = ns1__Common; } return _p; }

inline void soap_delete___ns1__Common(struct soap *soap, struct __ns1__Common *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Common(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__GetOBDDeviceId
#define SOAP_TYPE_PointerTo_ns1__GetOBDDeviceId (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetOBDDeviceId(struct soap*, _ns1__GetOBDDeviceId *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetOBDDeviceId(struct soap*, const char *, int, _ns1__GetOBDDeviceId *const*, const char *);
SOAP_FMAC3 _ns1__GetOBDDeviceId ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetOBDDeviceId(struct soap*, const char*, _ns1__GetOBDDeviceId **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetOBDDeviceId(struct soap*, _ns1__GetOBDDeviceId *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetOBDDeviceId
#define soap_write_PointerTo_ns1__GetOBDDeviceId(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetOBDDeviceId(soap, data),0) || soap_put_PointerTo_ns1__GetOBDDeviceId(soap, data, "ns1:GetOBDDeviceId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetOBDDeviceId ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetOBDDeviceId(struct soap*, _ns1__GetOBDDeviceId **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetOBDDeviceId
#define soap_read_PointerTo_ns1__GetOBDDeviceId(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetOBDDeviceId(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__UploadAppearanceData
#define SOAP_TYPE_PointerTo_ns1__UploadAppearanceData (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UploadAppearanceData(struct soap*, _ns1__UploadAppearanceData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UploadAppearanceData(struct soap*, const char *, int, _ns1__UploadAppearanceData *const*, const char *);
SOAP_FMAC3 _ns1__UploadAppearanceData ** SOAP_FMAC4 soap_in_PointerTo_ns1__UploadAppearanceData(struct soap*, const char*, _ns1__UploadAppearanceData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UploadAppearanceData(struct soap*, _ns1__UploadAppearanceData *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__UploadAppearanceData
#define soap_write_PointerTo_ns1__UploadAppearanceData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UploadAppearanceData(soap, data),0) || soap_put_PointerTo_ns1__UploadAppearanceData(soap, data, "ns1:UploadAppearanceData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__UploadAppearanceData ** SOAP_FMAC4 soap_get_PointerTo_ns1__UploadAppearanceData(struct soap*, _ns1__UploadAppearanceData **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UploadAppearanceData
#define soap_read_PointerTo_ns1__UploadAppearanceData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UploadAppearanceData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Common
#define SOAP_TYPE_PointerTo_ns1__Common (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Common(struct soap*, _ns1__Common *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Common(struct soap*, const char *, int, _ns1__Common *const*, const char *);
SOAP_FMAC3 _ns1__Common ** SOAP_FMAC4 soap_in_PointerTo_ns1__Common(struct soap*, const char*, _ns1__Common **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Common(struct soap*, _ns1__Common *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Common
#define soap_write_PointerTo_ns1__Common(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__Common(soap, data),0) || soap_put_PointerTo_ns1__Common(soap, data, "ns1:Common", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Common ** SOAP_FMAC4 soap_get_PointerTo_ns1__Common(struct soap*, _ns1__Common **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Common
#define soap_read_PointerTo_ns1__Common(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Common(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__ArrayOfOBDInfoModel
#define SOAP_TYPE_PointerTons1__ArrayOfOBDInfoModel (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ArrayOfOBDInfoModel(struct soap*, ns1__ArrayOfOBDInfoModel *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ArrayOfOBDInfoModel(struct soap*, const char *, int, ns1__ArrayOfOBDInfoModel *const*, const char *);
SOAP_FMAC3 ns1__ArrayOfOBDInfoModel ** SOAP_FMAC4 soap_in_PointerTons1__ArrayOfOBDInfoModel(struct soap*, const char*, ns1__ArrayOfOBDInfoModel **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ArrayOfOBDInfoModel(struct soap*, ns1__ArrayOfOBDInfoModel *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__ArrayOfOBDInfoModel
#define soap_write_PointerTons1__ArrayOfOBDInfoModel(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__ArrayOfOBDInfoModel(soap, data),0) || soap_put_PointerTons1__ArrayOfOBDInfoModel(soap, data, "ns1:ArrayOfOBDInfoModel", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ArrayOfOBDInfoModel ** SOAP_FMAC4 soap_get_PointerTons1__ArrayOfOBDInfoModel(struct soap*, ns1__ArrayOfOBDInfoModel **, const char*, const char*);

#ifndef soap_read_PointerTons1__ArrayOfOBDInfoModel
#define soap_read_PointerTons1__ArrayOfOBDInfoModel(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__ArrayOfOBDInfoModel(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__wstring
#define SOAP_TYPE_PointerTostd__wstring (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__wstring(struct soap*, std::wstring *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__wstring(struct soap*, const char *, int, std::wstring *const*, const char *);
SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_in_PointerTostd__wstring(struct soap*, const char*, std::wstring **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__wstring(struct soap*, std::wstring *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__wstring
#define soap_write_PointerTostd__wstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__wstring(soap, data),0) || soap_put_PointerTostd__wstring(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_get_PointerTostd__wstring(struct soap*, std::wstring **, const char*, const char*);

#ifndef soap_read_PointerTostd__wstring
#define soap_read_PointerTostd__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__wstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__OBDInfoModel
#define SOAP_TYPE_PointerTons1__OBDInfoModel (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__OBDInfoModel(struct soap*, ns1__OBDInfoModel *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__OBDInfoModel(struct soap*, const char *, int, ns1__OBDInfoModel *const*, const char *);
SOAP_FMAC3 ns1__OBDInfoModel ** SOAP_FMAC4 soap_in_PointerTons1__OBDInfoModel(struct soap*, const char*, ns1__OBDInfoModel **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__OBDInfoModel(struct soap*, ns1__OBDInfoModel *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__OBDInfoModel
#define soap_write_PointerTons1__OBDInfoModel(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__OBDInfoModel(soap, data),0) || soap_put_PointerTons1__OBDInfoModel(soap, data, "ns1:OBDInfoModel", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__OBDInfoModel ** SOAP_FMAC4 soap_get_PointerTons1__OBDInfoModel(struct soap*, ns1__OBDInfoModel **, const char*, const char*);

#ifndef soap_read_PointerTons1__OBDInfoModel
#define soap_read_PointerTons1__OBDInfoModel(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__OBDInfoModel(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__OBDInfoModel
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__OBDInfoModel (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__OBDInfoModel(struct soap*, std::vector<ns1__OBDInfoModel * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__OBDInfoModel(struct soap*, const std::vector<ns1__OBDInfoModel * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__OBDInfoModel(struct soap*, const char*, int, const std::vector<ns1__OBDInfoModel * >*, const char*);
SOAP_FMAC3 std::vector<ns1__OBDInfoModel * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__OBDInfoModel(struct soap*, const char*, std::vector<ns1__OBDInfoModel * >*, const char*);
SOAP_FMAC1 std::vector<ns1__OBDInfoModel * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__OBDInfoModel(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns1__OBDInfoModel * > * soap_new_std__vectorTemplateOfPointerTons1__OBDInfoModel(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons1__OBDInfoModel(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons1__OBDInfoModel(struct soap *soap, std::vector<ns1__OBDInfoModel * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__OBDInfoModel(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
