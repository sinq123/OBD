/* soapH.h
   Generated by gSOAP 2.8.21 from onvif.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_double(soap, data),0) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_bool(soap, data),0) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__wstring
#define SOAP_TYPE_std__wstring (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__wstring(struct soap*, std::wstring *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__wstring(struct soap*, const std::wstring *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__wstring(struct soap*, const char*, int, const std::wstring*, const char*);
SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_in_std__wstring(struct soap*, const char*, std::wstring*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__wstring(struct soap*, const std::wstring *, const char*, const char*);

#ifndef soap_write_std__wstring
#define soap_write_std__wstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_std__wstring(soap, data),0) || soap_put_std__wstring(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_get_std__wstring(struct soap*, std::wstring *, const char*, const char*);

#ifndef soap_read_std__wstring
#define soap_read_std__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_std__wstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::wstring * SOAP_FMAC2 soap_instantiate_std__wstring(struct soap*, int, const char*, const char*, size_t*);

inline std::wstring * soap_new_std__wstring(struct soap *soap, int n = -1) { return soap_instantiate_std__wstring(soap, n, NULL, NULL, NULL); }

inline std::wstring * soap_new_req_std__wstring(struct soap *soap) { std::wstring *_p = soap_instantiate_std__wstring(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__wstring(soap, _p); } return _p; }

inline std::wstring * soap_new_set_std__wstring(struct soap *soap) { std::wstring *_p = soap_instantiate_std__wstring(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__wstring(soap, _p); } return _p; }

inline void soap_delete_std__wstring(struct soap *soap, std::wstring *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__wstring(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cgjLSPSelfcheckResponse
#define SOAP_TYPE_ns1__cgjLSPSelfcheckResponse (82)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cgjLSPSelfcheckResponse(struct soap*, const char*, int, const ns1__cgjLSPSelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__cgjLSPSelfcheckResponse * SOAP_FMAC4 soap_in_ns1__cgjLSPSelfcheckResponse(struct soap*, const char*, ns1__cgjLSPSelfcheckResponse *, const char*);

#ifndef soap_write_ns1__cgjLSPSelfcheckResponse
#define soap_write_ns1__cgjLSPSelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:cgjLSPSelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjLSPSelfcheckResponse * SOAP_FMAC4 soap_get_ns1__cgjLSPSelfcheckResponse(struct soap*, ns1__cgjLSPSelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__cgjLSPSelfcheckResponse
#define soap_read_ns1__cgjLSPSelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cgjLSPSelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__cgjLSPSelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__cgjLSPSelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__cgjLSPSelfcheckResponse * soap_new_ns1__cgjLSPSelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cgjLSPSelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__cgjLSPSelfcheckResponse * soap_new_req_ns1__cgjLSPSelfcheckResponse(struct soap *soap, bool return_) { ns1__cgjLSPSelfcheckResponse *_p = soap_instantiate_ns1__cgjLSPSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjLSPSelfcheckResponse::return_ = return_; } return _p; }

inline ns1__cgjLSPSelfcheckResponse * soap_new_set_ns1__cgjLSPSelfcheckResponse(struct soap *soap, bool return_) { ns1__cgjLSPSelfcheckResponse *_p = soap_instantiate_ns1__cgjLSPSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjLSPSelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__cgjLSPSelfcheckResponse(struct soap *soap, ns1__cgjLSPSelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cgjLSPSelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cgjLSPSelfcheck
#define SOAP_TYPE_ns1__cgjLSPSelfcheck (81)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cgjLSPSelfcheck(struct soap*, const char*, int, const ns1__cgjLSPSelfcheck *, const char*);
SOAP_FMAC3 ns1__cgjLSPSelfcheck * SOAP_FMAC4 soap_in_ns1__cgjLSPSelfcheck(struct soap*, const char*, ns1__cgjLSPSelfcheck *, const char*);

#ifndef soap_write_ns1__cgjLSPSelfcheck
#define soap_write_ns1__cgjLSPSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:cgjLSPSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjLSPSelfcheck * SOAP_FMAC4 soap_get_ns1__cgjLSPSelfcheck(struct soap*, ns1__cgjLSPSelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__cgjLSPSelfcheck
#define soap_read_ns1__cgjLSPSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cgjLSPSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__cgjLSPSelfcheck * SOAP_FMAC2 soap_instantiate_ns1__cgjLSPSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__cgjLSPSelfcheck * soap_new_ns1__cgjLSPSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cgjLSPSelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__cgjLSPSelfcheck * soap_new_req_ns1__cgjLSPSelfcheck(struct soap *soap, double AvitualTime, double ArealTime, double BvitualTime, double BrealTime, double CvitualTime, double CrealTime, double DvitualTime, double DrealTime, double ALSpower, double BLSpower, double CLSpower, double DLSpower) { ns1__cgjLSPSelfcheck *_p = soap_instantiate_ns1__cgjLSPSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjLSPSelfcheck::AvitualTime = AvitualTime; _p->ns1__cgjLSPSelfcheck::ArealTime = ArealTime; _p->ns1__cgjLSPSelfcheck::BvitualTime = BvitualTime; _p->ns1__cgjLSPSelfcheck::BrealTime = BrealTime; _p->ns1__cgjLSPSelfcheck::CvitualTime = CvitualTime; _p->ns1__cgjLSPSelfcheck::CrealTime = CrealTime; _p->ns1__cgjLSPSelfcheck::DvitualTime = DvitualTime; _p->ns1__cgjLSPSelfcheck::DrealTime = DrealTime; _p->ns1__cgjLSPSelfcheck::ALSpower = ALSpower; _p->ns1__cgjLSPSelfcheck::BLSpower = BLSpower; _p->ns1__cgjLSPSelfcheck::CLSpower = CLSpower; _p->ns1__cgjLSPSelfcheck::DLSpower = DLSpower; } return _p; }

inline ns1__cgjLSPSelfcheck * soap_new_set_ns1__cgjLSPSelfcheck(struct soap *soap, std::wstring *registCode, double AvitualTime, double ArealTime, double BvitualTime, double BrealTime, double CvitualTime, double CrealTime, double DvitualTime, double DrealTime, double ALSpower, double BLSpower, double CLSpower, double DLSpower, std::wstring *checkResult, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__cgjLSPSelfcheck *_p = soap_instantiate_ns1__cgjLSPSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjLSPSelfcheck::registCode = registCode; _p->ns1__cgjLSPSelfcheck::AvitualTime = AvitualTime; _p->ns1__cgjLSPSelfcheck::ArealTime = ArealTime; _p->ns1__cgjLSPSelfcheck::BvitualTime = BvitualTime; _p->ns1__cgjLSPSelfcheck::BrealTime = BrealTime; _p->ns1__cgjLSPSelfcheck::CvitualTime = CvitualTime; _p->ns1__cgjLSPSelfcheck::CrealTime = CrealTime; _p->ns1__cgjLSPSelfcheck::DvitualTime = DvitualTime; _p->ns1__cgjLSPSelfcheck::DrealTime = DrealTime; _p->ns1__cgjLSPSelfcheck::ALSpower = ALSpower; _p->ns1__cgjLSPSelfcheck::BLSpower = BLSpower; _p->ns1__cgjLSPSelfcheck::CLSpower = CLSpower; _p->ns1__cgjLSPSelfcheck::DLSpower = DLSpower; _p->ns1__cgjLSPSelfcheck::checkResult = checkResult; _p->ns1__cgjLSPSelfcheck::checkTimeStart = checkTimeStart; _p->ns1__cgjLSPSelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__cgjLSPSelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__cgjLSPSelfcheck(struct soap *soap, ns1__cgjLSPSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cgjLSPSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__lljSelfcheckResponse
#define SOAP_TYPE_ns1__lljSelfcheckResponse (80)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__lljSelfcheckResponse(struct soap*, const char*, int, const ns1__lljSelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__lljSelfcheckResponse * SOAP_FMAC4 soap_in_ns1__lljSelfcheckResponse(struct soap*, const char*, ns1__lljSelfcheckResponse *, const char*);

#ifndef soap_write_ns1__lljSelfcheckResponse
#define soap_write_ns1__lljSelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:lljSelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lljSelfcheckResponse * SOAP_FMAC4 soap_get_ns1__lljSelfcheckResponse(struct soap*, ns1__lljSelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__lljSelfcheckResponse
#define soap_read_ns1__lljSelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__lljSelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__lljSelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__lljSelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__lljSelfcheckResponse * soap_new_ns1__lljSelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__lljSelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__lljSelfcheckResponse * soap_new_req_ns1__lljSelfcheckResponse(struct soap *soap, bool return_) { ns1__lljSelfcheckResponse *_p = soap_instantiate_ns1__lljSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lljSelfcheckResponse::return_ = return_; } return _p; }

inline ns1__lljSelfcheckResponse * soap_new_set_ns1__lljSelfcheckResponse(struct soap *soap, bool return_) { ns1__lljSelfcheckResponse *_p = soap_instantiate_ns1__lljSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lljSelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__lljSelfcheckResponse(struct soap *soap, ns1__lljSelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__lljSelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__lljSelfcheck
#define SOAP_TYPE_ns1__lljSelfcheck (79)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__lljSelfcheck(struct soap*, const char*, int, const ns1__lljSelfcheck *, const char*);
SOAP_FMAC3 ns1__lljSelfcheck * SOAP_FMAC4 soap_in_ns1__lljSelfcheck(struct soap*, const char*, ns1__lljSelfcheck *, const char*);

#ifndef soap_write_ns1__lljSelfcheck
#define soap_write_ns1__lljSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:lljSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lljSelfcheck * SOAP_FMAC4 soap_get_ns1__lljSelfcheck(struct soap*, ns1__lljSelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__lljSelfcheck
#define soap_read_ns1__lljSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__lljSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__lljSelfcheck * SOAP_FMAC2 soap_instantiate_ns1__lljSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__lljSelfcheck * soap_new_ns1__lljSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__lljSelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__lljSelfcheck * soap_new_req_ns1__lljSelfcheck(struct soap *soap, double avgFlow, double O2Avg) { ns1__lljSelfcheck *_p = soap_instantiate_ns1__lljSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lljSelfcheck::avgFlow = avgFlow; _p->ns1__lljSelfcheck::O2Avg = O2Avg; } return _p; }

inline ns1__lljSelfcheck * soap_new_set_ns1__lljSelfcheck(struct soap *soap, std::wstring *registCode, double avgFlow, double O2Avg, std::wstring *checkResult, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__lljSelfcheck *_p = soap_instantiate_ns1__lljSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lljSelfcheck::registCode = registCode; _p->ns1__lljSelfcheck::avgFlow = avgFlow; _p->ns1__lljSelfcheck::O2Avg = O2Avg; _p->ns1__lljSelfcheck::checkResult = checkResult; _p->ns1__lljSelfcheck::checkTimeStart = checkTimeStart; _p->ns1__lljSelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__lljSelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__lljSelfcheck(struct soap *soap, ns1__lljSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__lljSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cgjALPSelfcheckResponse
#define SOAP_TYPE_ns1__cgjALPSelfcheckResponse (78)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cgjALPSelfcheckResponse(struct soap*, const char*, int, const ns1__cgjALPSelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__cgjALPSelfcheckResponse * SOAP_FMAC4 soap_in_ns1__cgjALPSelfcheckResponse(struct soap*, const char*, ns1__cgjALPSelfcheckResponse *, const char*);

#ifndef soap_write_ns1__cgjALPSelfcheckResponse
#define soap_write_ns1__cgjALPSelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:cgjALPSelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjALPSelfcheckResponse * SOAP_FMAC4 soap_get_ns1__cgjALPSelfcheckResponse(struct soap*, ns1__cgjALPSelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__cgjALPSelfcheckResponse
#define soap_read_ns1__cgjALPSelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cgjALPSelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__cgjALPSelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__cgjALPSelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__cgjALPSelfcheckResponse * soap_new_ns1__cgjALPSelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cgjALPSelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__cgjALPSelfcheckResponse * soap_new_req_ns1__cgjALPSelfcheckResponse(struct soap *soap, bool return_) { ns1__cgjALPSelfcheckResponse *_p = soap_instantiate_ns1__cgjALPSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjALPSelfcheckResponse::return_ = return_; } return _p; }

inline ns1__cgjALPSelfcheckResponse * soap_new_set_ns1__cgjALPSelfcheckResponse(struct soap *soap, bool return_) { ns1__cgjALPSelfcheckResponse *_p = soap_instantiate_ns1__cgjALPSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjALPSelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__cgjALPSelfcheckResponse(struct soap *soap, ns1__cgjALPSelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cgjALPSelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cgjALPSelfcheck
#define SOAP_TYPE_ns1__cgjALPSelfcheck (77)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cgjALPSelfcheck(struct soap*, const char*, int, const ns1__cgjALPSelfcheck *, const char*);
SOAP_FMAC3 ns1__cgjALPSelfcheck * SOAP_FMAC4 soap_in_ns1__cgjALPSelfcheck(struct soap*, const char*, ns1__cgjALPSelfcheck *, const char*);

#ifndef soap_write_ns1__cgjALPSelfcheck
#define soap_write_ns1__cgjALPSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:cgjALPSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjALPSelfcheck * SOAP_FMAC4 soap_get_ns1__cgjALPSelfcheck(struct soap*, ns1__cgjALPSelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__cgjALPSelfcheck
#define soap_read_ns1__cgjALPSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cgjALPSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__cgjALPSelfcheck * SOAP_FMAC2 soap_instantiate_ns1__cgjALPSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__cgjALPSelfcheck * soap_new_ns1__cgjALPSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cgjALPSelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__cgjALPSelfcheck * soap_new_req_ns1__cgjALPSelfcheck(struct soap *soap, double AvitualTime, double ArealTime, double BvitualTime, double BrealTime, double CvitualTime, double CrealTime, double ALpower1, double ALpower2) { ns1__cgjALPSelfcheck *_p = soap_instantiate_ns1__cgjALPSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjALPSelfcheck::AvitualTime = AvitualTime; _p->ns1__cgjALPSelfcheck::ArealTime = ArealTime; _p->ns1__cgjALPSelfcheck::BvitualTime = BvitualTime; _p->ns1__cgjALPSelfcheck::BrealTime = BrealTime; _p->ns1__cgjALPSelfcheck::CvitualTime = CvitualTime; _p->ns1__cgjALPSelfcheck::CrealTime = CrealTime; _p->ns1__cgjALPSelfcheck::ALpower1 = ALpower1; _p->ns1__cgjALPSelfcheck::ALpower2 = ALpower2; } return _p; }

inline ns1__cgjALPSelfcheck * soap_new_set_ns1__cgjALPSelfcheck(struct soap *soap, std::wstring *registCode, double AvitualTime, double ArealTime, double BvitualTime, double BrealTime, double CvitualTime, double CrealTime, double ALpower1, double ALpower2, std::wstring *checkResult, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__cgjALPSelfcheck *_p = soap_instantiate_ns1__cgjALPSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjALPSelfcheck::registCode = registCode; _p->ns1__cgjALPSelfcheck::AvitualTime = AvitualTime; _p->ns1__cgjALPSelfcheck::ArealTime = ArealTime; _p->ns1__cgjALPSelfcheck::BvitualTime = BvitualTime; _p->ns1__cgjALPSelfcheck::BrealTime = BrealTime; _p->ns1__cgjALPSelfcheck::CvitualTime = CvitualTime; _p->ns1__cgjALPSelfcheck::CrealTime = CrealTime; _p->ns1__cgjALPSelfcheck::ALpower1 = ALpower1; _p->ns1__cgjALPSelfcheck::ALpower2 = ALpower2; _p->ns1__cgjALPSelfcheck::checkResult = checkResult; _p->ns1__cgjALPSelfcheck::checkTimeStart = checkTimeStart; _p->ns1__cgjALPSelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__cgjALPSelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__cgjALPSelfcheck(struct soap *soap, ns1__cgjALPSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cgjALPSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__wqfxySelfcheckResponse
#define SOAP_TYPE_ns1__wqfxySelfcheckResponse (76)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__wqfxySelfcheckResponse(struct soap*, const char*, int, const ns1__wqfxySelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__wqfxySelfcheckResponse * SOAP_FMAC4 soap_in_ns1__wqfxySelfcheckResponse(struct soap*, const char*, ns1__wqfxySelfcheckResponse *, const char*);

#ifndef soap_write_ns1__wqfxySelfcheckResponse
#define soap_write_ns1__wqfxySelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:wqfxySelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__wqfxySelfcheckResponse * SOAP_FMAC4 soap_get_ns1__wqfxySelfcheckResponse(struct soap*, ns1__wqfxySelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__wqfxySelfcheckResponse
#define soap_read_ns1__wqfxySelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__wqfxySelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__wqfxySelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__wqfxySelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__wqfxySelfcheckResponse * soap_new_ns1__wqfxySelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__wqfxySelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__wqfxySelfcheckResponse * soap_new_req_ns1__wqfxySelfcheckResponse(struct soap *soap, bool return_) { ns1__wqfxySelfcheckResponse *_p = soap_instantiate_ns1__wqfxySelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__wqfxySelfcheckResponse::return_ = return_; } return _p; }

inline ns1__wqfxySelfcheckResponse * soap_new_set_ns1__wqfxySelfcheckResponse(struct soap *soap, bool return_) { ns1__wqfxySelfcheckResponse *_p = soap_instantiate_ns1__wqfxySelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__wqfxySelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__wqfxySelfcheckResponse(struct soap *soap, ns1__wqfxySelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__wqfxySelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__wqfxySelfcheck
#define SOAP_TYPE_ns1__wqfxySelfcheck (75)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__wqfxySelfcheck(struct soap*, const char*, int, const ns1__wqfxySelfcheck *, const char*);
SOAP_FMAC3 ns1__wqfxySelfcheck * SOAP_FMAC4 soap_in_ns1__wqfxySelfcheck(struct soap*, const char*, ns1__wqfxySelfcheck *, const char*);

#ifndef soap_write_ns1__wqfxySelfcheck
#define soap_write_ns1__wqfxySelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:wqfxySelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__wqfxySelfcheck * SOAP_FMAC4 soap_get_ns1__wqfxySelfcheck(struct soap*, ns1__wqfxySelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__wqfxySelfcheck
#define soap_read_ns1__wqfxySelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__wqfxySelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__wqfxySelfcheck * SOAP_FMAC2 soap_instantiate_ns1__wqfxySelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__wqfxySelfcheck * soap_new_ns1__wqfxySelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__wqfxySelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__wqfxySelfcheck * soap_new_req_ns1__wqfxySelfcheck(struct soap *soap) { ns1__wqfxySelfcheck *_p = soap_instantiate_ns1__wqfxySelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__wqfxySelfcheck * soap_new_set_ns1__wqfxySelfcheck(struct soap *soap, std::wstring *registCode, std::wstring *tightnessResult, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__wqfxySelfcheck *_p = soap_instantiate_ns1__wqfxySelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__wqfxySelfcheck::registCode = registCode; _p->ns1__wqfxySelfcheck::tightnessResult = tightnessResult; _p->ns1__wqfxySelfcheck::checkTimeStart = checkTimeStart; _p->ns1__wqfxySelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__wqfxySelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__wqfxySelfcheck(struct soap *soap, ns1__wqfxySelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__wqfxySelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__sendMessage_USCOREFC
#define SOAP_TYPE_ns1__sendMessage_USCOREFC (74)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendMessage_USCOREFC(struct soap*, const char*, int, const ns1__sendMessage_USCOREFC *, const char*);
SOAP_FMAC3 ns1__sendMessage_USCOREFC * SOAP_FMAC4 soap_in_ns1__sendMessage_USCOREFC(struct soap*, const char*, ns1__sendMessage_USCOREFC *, const char*);

#ifndef soap_write_ns1__sendMessage_USCOREFC
#define soap_write_ns1__sendMessage_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:sendMessage_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__sendMessage_USCOREFC * SOAP_FMAC4 soap_get_ns1__sendMessage_USCOREFC(struct soap*, ns1__sendMessage_USCOREFC *, const char*, const char*);

#ifndef soap_read_ns1__sendMessage_USCOREFC
#define soap_read_ns1__sendMessage_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sendMessage_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__sendMessage_USCOREFC * SOAP_FMAC2 soap_instantiate_ns1__sendMessage_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline ns1__sendMessage_USCOREFC * soap_new_ns1__sendMessage_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate_ns1__sendMessage_USCOREFC(soap, n, NULL, NULL, NULL); }

inline ns1__sendMessage_USCOREFC * soap_new_req_ns1__sendMessage_USCOREFC(struct soap *soap) { ns1__sendMessage_USCOREFC *_p = soap_instantiate_ns1__sendMessage_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__sendMessage_USCOREFC * soap_new_set_ns1__sendMessage_USCOREFC(struct soap *soap, std::wstring *businessId, std::wstring *registCode, std::wstring *code, std::wstring *message) { ns1__sendMessage_USCOREFC *_p = soap_instantiate_ns1__sendMessage_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__sendMessage_USCOREFC::businessId = businessId; _p->ns1__sendMessage_USCOREFC::registCode = registCode; _p->ns1__sendMessage_USCOREFC::code = code; _p->ns1__sendMessage_USCOREFC::message = message; } return _p; }

inline void soap_delete_ns1__sendMessage_USCOREFC(struct soap *soap, ns1__sendMessage_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__sendMessage_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__sdsqtfxySelfcheckResponse
#define SOAP_TYPE_ns1__sdsqtfxySelfcheckResponse (73)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sdsqtfxySelfcheckResponse(struct soap*, const char*, int, const ns1__sdsqtfxySelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__sdsqtfxySelfcheckResponse * SOAP_FMAC4 soap_in_ns1__sdsqtfxySelfcheckResponse(struct soap*, const char*, ns1__sdsqtfxySelfcheckResponse *, const char*);

#ifndef soap_write_ns1__sdsqtfxySelfcheckResponse
#define soap_write_ns1__sdsqtfxySelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:sdsqtfxySelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__sdsqtfxySelfcheckResponse * SOAP_FMAC4 soap_get_ns1__sdsqtfxySelfcheckResponse(struct soap*, ns1__sdsqtfxySelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__sdsqtfxySelfcheckResponse
#define soap_read_ns1__sdsqtfxySelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sdsqtfxySelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__sdsqtfxySelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__sdsqtfxySelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__sdsqtfxySelfcheckResponse * soap_new_ns1__sdsqtfxySelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__sdsqtfxySelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__sdsqtfxySelfcheckResponse * soap_new_req_ns1__sdsqtfxySelfcheckResponse(struct soap *soap, bool return_) { ns1__sdsqtfxySelfcheckResponse *_p = soap_instantiate_ns1__sdsqtfxySelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__sdsqtfxySelfcheckResponse::return_ = return_; } return _p; }

inline ns1__sdsqtfxySelfcheckResponse * soap_new_set_ns1__sdsqtfxySelfcheckResponse(struct soap *soap, bool return_) { ns1__sdsqtfxySelfcheckResponse *_p = soap_instantiate_ns1__sdsqtfxySelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__sdsqtfxySelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__sdsqtfxySelfcheckResponse(struct soap *soap, ns1__sdsqtfxySelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__sdsqtfxySelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__sdsqtfxySelfcheck
#define SOAP_TYPE_ns1__sdsqtfxySelfcheck (72)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sdsqtfxySelfcheck(struct soap*, const char*, int, const ns1__sdsqtfxySelfcheck *, const char*);
SOAP_FMAC3 ns1__sdsqtfxySelfcheck * SOAP_FMAC4 soap_in_ns1__sdsqtfxySelfcheck(struct soap*, const char*, ns1__sdsqtfxySelfcheck *, const char*);

#ifndef soap_write_ns1__sdsqtfxySelfcheck
#define soap_write_ns1__sdsqtfxySelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:sdsqtfxySelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__sdsqtfxySelfcheck * SOAP_FMAC4 soap_get_ns1__sdsqtfxySelfcheck(struct soap*, ns1__sdsqtfxySelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__sdsqtfxySelfcheck
#define soap_read_ns1__sdsqtfxySelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sdsqtfxySelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__sdsqtfxySelfcheck * SOAP_FMAC2 soap_instantiate_ns1__sdsqtfxySelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__sdsqtfxySelfcheck * soap_new_ns1__sdsqtfxySelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__sdsqtfxySelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__sdsqtfxySelfcheck * soap_new_req_ns1__sdsqtfxySelfcheck(struct soap *soap, double canliuHC) { ns1__sdsqtfxySelfcheck *_p = soap_instantiate_ns1__sdsqtfxySelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__sdsqtfxySelfcheck::canliuHC = canliuHC; } return _p; }

inline ns1__sdsqtfxySelfcheck * soap_new_set_ns1__sdsqtfxySelfcheck(struct soap *soap, std::wstring *registCode, std::wstring *tightnessResult, std::wstring *lFlowResult, double canliuHC, std::wstring *checkResult, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__sdsqtfxySelfcheck *_p = soap_instantiate_ns1__sdsqtfxySelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__sdsqtfxySelfcheck::registCode = registCode; _p->ns1__sdsqtfxySelfcheck::tightnessResult = tightnessResult; _p->ns1__sdsqtfxySelfcheck::lFlowResult = lFlowResult; _p->ns1__sdsqtfxySelfcheck::canliuHC = canliuHC; _p->ns1__sdsqtfxySelfcheck::checkResult = checkResult; _p->ns1__sdsqtfxySelfcheck::checkTimeStart = checkTimeStart; _p->ns1__sdsqtfxySelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__sdsqtfxySelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__sdsqtfxySelfcheck(struct soap *soap, ns1__sdsqtfxySelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__sdsqtfxySelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__qyfxSelfcheckResponse
#define SOAP_TYPE_ns1__qyfxSelfcheckResponse (71)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__qyfxSelfcheckResponse(struct soap*, const char*, int, const ns1__qyfxSelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__qyfxSelfcheckResponse * SOAP_FMAC4 soap_in_ns1__qyfxSelfcheckResponse(struct soap*, const char*, ns1__qyfxSelfcheckResponse *, const char*);

#ifndef soap_write_ns1__qyfxSelfcheckResponse
#define soap_write_ns1__qyfxSelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:qyfxSelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__qyfxSelfcheckResponse * SOAP_FMAC4 soap_get_ns1__qyfxSelfcheckResponse(struct soap*, ns1__qyfxSelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__qyfxSelfcheckResponse
#define soap_read_ns1__qyfxSelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__qyfxSelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__qyfxSelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__qyfxSelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__qyfxSelfcheckResponse * soap_new_ns1__qyfxSelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__qyfxSelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__qyfxSelfcheckResponse * soap_new_req_ns1__qyfxSelfcheckResponse(struct soap *soap, bool return_) { ns1__qyfxSelfcheckResponse *_p = soap_instantiate_ns1__qyfxSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__qyfxSelfcheckResponse::return_ = return_; } return _p; }

inline ns1__qyfxSelfcheckResponse * soap_new_set_ns1__qyfxSelfcheckResponse(struct soap *soap, bool return_) { ns1__qyfxSelfcheckResponse *_p = soap_instantiate_ns1__qyfxSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__qyfxSelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__qyfxSelfcheckResponse(struct soap *soap, ns1__qyfxSelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__qyfxSelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__qyfxSelfcheck
#define SOAP_TYPE_ns1__qyfxSelfcheck (70)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__qyfxSelfcheck(struct soap*, const char*, int, const ns1__qyfxSelfcheck *, const char*);
SOAP_FMAC3 ns1__qyfxSelfcheck * SOAP_FMAC4 soap_in_ns1__qyfxSelfcheck(struct soap*, const char*, ns1__qyfxSelfcheck *, const char*);

#ifndef soap_write_ns1__qyfxSelfcheck
#define soap_write_ns1__qyfxSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:qyfxSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__qyfxSelfcheck * SOAP_FMAC4 soap_get_ns1__qyfxSelfcheck(struct soap*, ns1__qyfxSelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__qyfxSelfcheck
#define soap_read_ns1__qyfxSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__qyfxSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__qyfxSelfcheck * SOAP_FMAC2 soap_instantiate_ns1__qyfxSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__qyfxSelfcheck * soap_new_ns1__qyfxSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__qyfxSelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__qyfxSelfcheck * soap_new_req_ns1__qyfxSelfcheck(struct soap *soap, double carryTimenumber) { ns1__qyfxSelfcheck *_p = soap_instantiate_ns1__qyfxSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__qyfxSelfcheck::carryTimenumber = carryTimenumber; } return _p; }

inline ns1__qyfxSelfcheck * soap_new_set_ns1__qyfxSelfcheck(struct soap *soap, std::wstring *registCode, std::wstring *carryTimeStart, std::wstring *carryTimeEnd, double carryTimenumber, std::wstring *respondTimeStartHC_USCORE1, std::wstring *respondTimeEndHC_USCORE1, std::wstring *respondTimeStartCO_USCORE1, std::wstring *respondTimeEndCO_USCORE1, std::wstring *respondTimeStartCO2_USCORE1, std::wstring *respondTimeEndCO2_USCORE1, std::wstring *respondTimeStartNO_USCORE1, std::wstring *respondTimeEndNO_USCORE1, std::wstring *respondTimeStartNO2_USCORE1, std::wstring *respondTimeEndNO2_USCORE1, std::wstring *respondTimeStartO2_USCORE1, std::wstring *respondTimeEndO2_USCORE1, std::wstring *respondTimeStartHC_USCORE2, std::wstring *respondTimeEndHC_USCORE2, std::wstring *respondTimeStartCO_USCORE2, std::wstring *respondTimeEndCO_USCORE2, std::wstring *respondTimeStartCO2_USCORE2, std::wstring *respondTimeEndCO2_USCORE2, std::wstring *respondTimeStartNO_USCORE2, std::wstring *respondTimeEndNO_USCORE2, std::wstring *respondTimeStartNO2_USCORE2, std::wstring *respondTimeEndNO2_USCORE2, std::wstring *respondTimeStartO2_USCORE2, std::wstring *respondTimeEndO2_USCORE2, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__qyfxSelfcheck *_p = soap_instantiate_ns1__qyfxSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__qyfxSelfcheck::registCode = registCode; _p->ns1__qyfxSelfcheck::carryTimeStart = carryTimeStart; _p->ns1__qyfxSelfcheck::carryTimeEnd = carryTimeEnd; _p->ns1__qyfxSelfcheck::carryTimenumber = carryTimenumber; _p->ns1__qyfxSelfcheck::respondTimeStartHC_USCORE1 = respondTimeStartHC_USCORE1; _p->ns1__qyfxSelfcheck::respondTimeEndHC_USCORE1 = respondTimeEndHC_USCORE1; _p->ns1__qyfxSelfcheck::respondTimeStartCO_USCORE1 = respondTimeStartCO_USCORE1; _p->ns1__qyfxSelfcheck::respondTimeEndCO_USCORE1 = respondTimeEndCO_USCORE1; _p->ns1__qyfxSelfcheck::respondTimeStartCO2_USCORE1 = respondTimeStartCO2_USCORE1; _p->ns1__qyfxSelfcheck::respondTimeEndCO2_USCORE1 = respondTimeEndCO2_USCORE1; _p->ns1__qyfxSelfcheck::respondTimeStartNO_USCORE1 = respondTimeStartNO_USCORE1; _p->ns1__qyfxSelfcheck::respondTimeEndNO_USCORE1 = respondTimeEndNO_USCORE1; _p->ns1__qyfxSelfcheck::respondTimeStartNO2_USCORE1 = respondTimeStartNO2_USCORE1; _p->ns1__qyfxSelfcheck::respondTimeEndNO2_USCORE1 = respondTimeEndNO2_USCORE1; _p->ns1__qyfxSelfcheck::respondTimeStartO2_USCORE1 = respondTimeStartO2_USCORE1; _p->ns1__qyfxSelfcheck::respondTimeEndO2_USCORE1 = respondTimeEndO2_USCORE1; _p->ns1__qyfxSelfcheck::respondTimeStartHC_USCORE2 = respondTimeStartHC_USCORE2; _p->ns1__qyfxSelfcheck::respondTimeEndHC_USCORE2 = respondTimeEndHC_USCORE2; _p->ns1__qyfxSelfcheck::respondTimeStartCO_USCORE2 = respondTimeStartCO_USCORE2; _p->ns1__qyfxSelfcheck::respondTimeEndCO_USCORE2 = respondTimeEndCO_USCORE2; _p->ns1__qyfxSelfcheck::respondTimeStartCO2_USCORE2 = respondTimeStartCO2_USCORE2; _p->ns1__qyfxSelfcheck::respondTimeEndCO2_USCORE2 = respondTimeEndCO2_USCORE2; _p->ns1__qyfxSelfcheck::respondTimeStartNO_USCORE2 = respondTimeStartNO_USCORE2; _p->ns1__qyfxSelfcheck::respondTimeEndNO_USCORE2 = respondTimeEndNO_USCORE2; _p->ns1__qyfxSelfcheck::respondTimeStartNO2_USCORE2 = respondTimeStartNO2_USCORE2; _p->ns1__qyfxSelfcheck::respondTimeEndNO2_USCORE2 = respondTimeEndNO2_USCORE2; _p->ns1__qyfxSelfcheck::respondTimeStartO2_USCORE2 = respondTimeStartO2_USCORE2; _p->ns1__qyfxSelfcheck::respondTimeEndO2_USCORE2 = respondTimeEndO2_USCORE2; _p->ns1__qyfxSelfcheck::checkTimeStart = checkTimeStart; _p->ns1__qyfxSelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__qyfxSelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__qyfxSelfcheck(struct soap *soap, ns1__qyfxSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__qyfxSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__lightproofSmokeData
#define SOAP_TYPE_ns1__lightproofSmokeData (69)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__lightproofSmokeData(struct soap*, const char*, int, const ns1__lightproofSmokeData *, const char*);
SOAP_FMAC3 ns1__lightproofSmokeData * SOAP_FMAC4 soap_in_ns1__lightproofSmokeData(struct soap*, const char*, ns1__lightproofSmokeData *, const char*);

#ifndef soap_write_ns1__lightproofSmokeData
#define soap_write_ns1__lightproofSmokeData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:lightproofSmokeData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lightproofSmokeData * SOAP_FMAC4 soap_get_ns1__lightproofSmokeData(struct soap*, ns1__lightproofSmokeData *, const char*, const char*);

#ifndef soap_read_ns1__lightproofSmokeData
#define soap_read_ns1__lightproofSmokeData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__lightproofSmokeData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__lightproofSmokeData * SOAP_FMAC2 soap_instantiate_ns1__lightproofSmokeData(struct soap*, int, const char*, const char*, size_t*);

inline ns1__lightproofSmokeData * soap_new_ns1__lightproofSmokeData(struct soap *soap, int n = -1) { return soap_instantiate_ns1__lightproofSmokeData(soap, n, NULL, NULL, NULL); }

inline ns1__lightproofSmokeData * soap_new_req_ns1__lightproofSmokeData(struct soap *soap, double smokeValue1, double smokeValue2, double smokeValue3, double tempreture, double humidity, double airPressure, int zs1, int zs2, int zs3) { ns1__lightproofSmokeData *_p = soap_instantiate_ns1__lightproofSmokeData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeData::smokeValue1 = smokeValue1; _p->ns1__lightproofSmokeData::smokeValue2 = smokeValue2; _p->ns1__lightproofSmokeData::smokeValue3 = smokeValue3; _p->ns1__lightproofSmokeData::tempreture = tempreture; _p->ns1__lightproofSmokeData::humidity = humidity; _p->ns1__lightproofSmokeData::airPressure = airPressure; _p->ns1__lightproofSmokeData::zs1 = zs1; _p->ns1__lightproofSmokeData::zs2 = zs2; _p->ns1__lightproofSmokeData::zs3 = zs3; } return _p; }

inline ns1__lightproofSmokeData * soap_new_set_ns1__lightproofSmokeData(struct soap *soap, std::wstring *businessId, std::wstring *registCode, double smokeValue1, double smokeValue2, double smokeValue3, double tempreture, double humidity, double airPressure, std::wstring *timeStart, std::wstring *timeEnd, int zs1, int zs2, int zs3) { ns1__lightproofSmokeData *_p = soap_instantiate_ns1__lightproofSmokeData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeData::businessId = businessId; _p->ns1__lightproofSmokeData::registCode = registCode; _p->ns1__lightproofSmokeData::smokeValue1 = smokeValue1; _p->ns1__lightproofSmokeData::smokeValue2 = smokeValue2; _p->ns1__lightproofSmokeData::smokeValue3 = smokeValue3; _p->ns1__lightproofSmokeData::tempreture = tempreture; _p->ns1__lightproofSmokeData::humidity = humidity; _p->ns1__lightproofSmokeData::airPressure = airPressure; _p->ns1__lightproofSmokeData::timeStart = timeStart; _p->ns1__lightproofSmokeData::timeEnd = timeEnd; _p->ns1__lightproofSmokeData::zs1 = zs1; _p->ns1__lightproofSmokeData::zs2 = zs2; _p->ns1__lightproofSmokeData::zs3 = zs3; } return _p; }

inline void soap_delete_ns1__lightproofSmokeData(struct soap *soap, ns1__lightproofSmokeData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__lightproofSmokeData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__lightproofSmokeDataResponse
#define SOAP_TYPE_ns1__lightproofSmokeDataResponse (68)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__lightproofSmokeDataResponse(struct soap*, const char*, int, const ns1__lightproofSmokeDataResponse *, const char*);
SOAP_FMAC3 ns1__lightproofSmokeDataResponse * SOAP_FMAC4 soap_in_ns1__lightproofSmokeDataResponse(struct soap*, const char*, ns1__lightproofSmokeDataResponse *, const char*);

#ifndef soap_write_ns1__lightproofSmokeDataResponse
#define soap_write_ns1__lightproofSmokeDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:lightproofSmokeDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lightproofSmokeDataResponse * SOAP_FMAC4 soap_get_ns1__lightproofSmokeDataResponse(struct soap*, ns1__lightproofSmokeDataResponse *, const char*, const char*);

#ifndef soap_read_ns1__lightproofSmokeDataResponse
#define soap_read_ns1__lightproofSmokeDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__lightproofSmokeDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__lightproofSmokeDataResponse * SOAP_FMAC2 soap_instantiate_ns1__lightproofSmokeDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__lightproofSmokeDataResponse * soap_new_ns1__lightproofSmokeDataResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__lightproofSmokeDataResponse(soap, n, NULL, NULL, NULL); }

inline ns1__lightproofSmokeDataResponse * soap_new_req_ns1__lightproofSmokeDataResponse(struct soap *soap, bool return_) { ns1__lightproofSmokeDataResponse *_p = soap_instantiate_ns1__lightproofSmokeDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeDataResponse::return_ = return_; } return _p; }

inline ns1__lightproofSmokeDataResponse * soap_new_set_ns1__lightproofSmokeDataResponse(struct soap *soap, bool return_) { ns1__lightproofSmokeDataResponse *_p = soap_instantiate_ns1__lightproofSmokeDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeDataResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__lightproofSmokeDataResponse(struct soap *soap, ns1__lightproofSmokeDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__lightproofSmokeDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__lightproofSmokeData_USCOREFC
#define SOAP_TYPE_ns1__lightproofSmokeData_USCOREFC (67)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__lightproofSmokeData_USCOREFC(struct soap*, const char*, int, const ns1__lightproofSmokeData_USCOREFC *, const char*);
SOAP_FMAC3 ns1__lightproofSmokeData_USCOREFC * SOAP_FMAC4 soap_in_ns1__lightproofSmokeData_USCOREFC(struct soap*, const char*, ns1__lightproofSmokeData_USCOREFC *, const char*);

#ifndef soap_write_ns1__lightproofSmokeData_USCOREFC
#define soap_write_ns1__lightproofSmokeData_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:lightproofSmokeData_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lightproofSmokeData_USCOREFC * SOAP_FMAC4 soap_get_ns1__lightproofSmokeData_USCOREFC(struct soap*, ns1__lightproofSmokeData_USCOREFC *, const char*, const char*);

#ifndef soap_read_ns1__lightproofSmokeData_USCOREFC
#define soap_read_ns1__lightproofSmokeData_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__lightproofSmokeData_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__lightproofSmokeData_USCOREFC * SOAP_FMAC2 soap_instantiate_ns1__lightproofSmokeData_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline ns1__lightproofSmokeData_USCOREFC * soap_new_ns1__lightproofSmokeData_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate_ns1__lightproofSmokeData_USCOREFC(soap, n, NULL, NULL, NULL); }

inline ns1__lightproofSmokeData_USCOREFC * soap_new_req_ns1__lightproofSmokeData_USCOREFC(struct soap *soap, double smokeValue1, double smokeValue2, double smokeValue3, double tempreture, double humidity, double airPressure, int zs1, int zs2, int zs3) { ns1__lightproofSmokeData_USCOREFC *_p = soap_instantiate_ns1__lightproofSmokeData_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeData_USCOREFC::smokeValue1 = smokeValue1; _p->ns1__lightproofSmokeData_USCOREFC::smokeValue2 = smokeValue2; _p->ns1__lightproofSmokeData_USCOREFC::smokeValue3 = smokeValue3; _p->ns1__lightproofSmokeData_USCOREFC::tempreture = tempreture; _p->ns1__lightproofSmokeData_USCOREFC::humidity = humidity; _p->ns1__lightproofSmokeData_USCOREFC::airPressure = airPressure; _p->ns1__lightproofSmokeData_USCOREFC::zs1 = zs1; _p->ns1__lightproofSmokeData_USCOREFC::zs2 = zs2; _p->ns1__lightproofSmokeData_USCOREFC::zs3 = zs3; } return _p; }

inline ns1__lightproofSmokeData_USCOREFC * soap_new_set_ns1__lightproofSmokeData_USCOREFC(struct soap *soap, std::wstring *businessId, std::wstring *registCode, double smokeValue1, double smokeValue2, double smokeValue3, double tempreture, double humidity, double airPressure, std::wstring *timeStart, std::wstring *timeEnd, int zs1, int zs2, int zs3) { ns1__lightproofSmokeData_USCOREFC *_p = soap_instantiate_ns1__lightproofSmokeData_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeData_USCOREFC::businessId = businessId; _p->ns1__lightproofSmokeData_USCOREFC::registCode = registCode; _p->ns1__lightproofSmokeData_USCOREFC::smokeValue1 = smokeValue1; _p->ns1__lightproofSmokeData_USCOREFC::smokeValue2 = smokeValue2; _p->ns1__lightproofSmokeData_USCOREFC::smokeValue3 = smokeValue3; _p->ns1__lightproofSmokeData_USCOREFC::tempreture = tempreture; _p->ns1__lightproofSmokeData_USCOREFC::humidity = humidity; _p->ns1__lightproofSmokeData_USCOREFC::airPressure = airPressure; _p->ns1__lightproofSmokeData_USCOREFC::timeStart = timeStart; _p->ns1__lightproofSmokeData_USCOREFC::timeEnd = timeEnd; _p->ns1__lightproofSmokeData_USCOREFC::zs1 = zs1; _p->ns1__lightproofSmokeData_USCOREFC::zs2 = zs2; _p->ns1__lightproofSmokeData_USCOREFC::zs3 = zs3; } return _p; }

inline void soap_delete_ns1__lightproofSmokeData_USCOREFC(struct soap *soap, ns1__lightproofSmokeData_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__lightproofSmokeData_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__wqfxyAdjustResponse
#define SOAP_TYPE_ns1__wqfxyAdjustResponse (66)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__wqfxyAdjustResponse(struct soap*, const char*, int, const ns1__wqfxyAdjustResponse *, const char*);
SOAP_FMAC3 ns1__wqfxyAdjustResponse * SOAP_FMAC4 soap_in_ns1__wqfxyAdjustResponse(struct soap*, const char*, ns1__wqfxyAdjustResponse *, const char*);

#ifndef soap_write_ns1__wqfxyAdjustResponse
#define soap_write_ns1__wqfxyAdjustResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:wqfxyAdjustResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__wqfxyAdjustResponse * SOAP_FMAC4 soap_get_ns1__wqfxyAdjustResponse(struct soap*, ns1__wqfxyAdjustResponse *, const char*, const char*);

#ifndef soap_read_ns1__wqfxyAdjustResponse
#define soap_read_ns1__wqfxyAdjustResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__wqfxyAdjustResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__wqfxyAdjustResponse * SOAP_FMAC2 soap_instantiate_ns1__wqfxyAdjustResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__wqfxyAdjustResponse * soap_new_ns1__wqfxyAdjustResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__wqfxyAdjustResponse(soap, n, NULL, NULL, NULL); }

inline ns1__wqfxyAdjustResponse * soap_new_req_ns1__wqfxyAdjustResponse(struct soap *soap, bool return_) { ns1__wqfxyAdjustResponse *_p = soap_instantiate_ns1__wqfxyAdjustResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__wqfxyAdjustResponse::return_ = return_; } return _p; }

inline ns1__wqfxyAdjustResponse * soap_new_set_ns1__wqfxyAdjustResponse(struct soap *soap, bool return_) { ns1__wqfxyAdjustResponse *_p = soap_instantiate_ns1__wqfxyAdjustResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__wqfxyAdjustResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__wqfxyAdjustResponse(struct soap *soap, ns1__wqfxyAdjustResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__wqfxyAdjustResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__wqfxyAdjust
#define SOAP_TYPE_ns1__wqfxyAdjust (65)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__wqfxyAdjust(struct soap*, const char*, int, const ns1__wqfxyAdjust *, const char*);
SOAP_FMAC3 ns1__wqfxyAdjust * SOAP_FMAC4 soap_in_ns1__wqfxyAdjust(struct soap*, const char*, ns1__wqfxyAdjust *, const char*);

#ifndef soap_write_ns1__wqfxyAdjust
#define soap_write_ns1__wqfxyAdjust(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:wqfxyAdjust", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__wqfxyAdjust * SOAP_FMAC4 soap_get_ns1__wqfxyAdjust(struct soap*, ns1__wqfxyAdjust *, const char*, const char*);

#ifndef soap_read_ns1__wqfxyAdjust
#define soap_read_ns1__wqfxyAdjust(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__wqfxyAdjust(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__wqfxyAdjust * SOAP_FMAC2 soap_instantiate_ns1__wqfxyAdjust(struct soap*, int, const char*, const char*, size_t*);

inline ns1__wqfxyAdjust * soap_new_ns1__wqfxyAdjust(struct soap *soap, int n = -1) { return soap_instantiate_ns1__wqfxyAdjust(soap, n, NULL, NULL, NULL); }

inline ns1__wqfxyAdjust * soap_new_req_ns1__wqfxyAdjust(struct soap *soap, double labelValueCO2, double detectValueCO2, double labelValueCO, double detectValueCO, double labelValueNO, double detectValueNO, double labelValueNO2, double detectValueNO2, double labelValueHC, double detectValueHC, double labelValueO2, double detectValueO2, double labelValuePEF, double labelValueC3H8) { ns1__wqfxyAdjust *_p = soap_instantiate_ns1__wqfxyAdjust(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__wqfxyAdjust::labelValueCO2 = labelValueCO2; _p->ns1__wqfxyAdjust::detectValueCO2 = detectValueCO2; _p->ns1__wqfxyAdjust::labelValueCO = labelValueCO; _p->ns1__wqfxyAdjust::detectValueCO = detectValueCO; _p->ns1__wqfxyAdjust::labelValueNO = labelValueNO; _p->ns1__wqfxyAdjust::detectValueNO = detectValueNO; _p->ns1__wqfxyAdjust::labelValueNO2 = labelValueNO2; _p->ns1__wqfxyAdjust::detectValueNO2 = detectValueNO2; _p->ns1__wqfxyAdjust::labelValueHC = labelValueHC; _p->ns1__wqfxyAdjust::detectValueHC = detectValueHC; _p->ns1__wqfxyAdjust::labelValueO2 = labelValueO2; _p->ns1__wqfxyAdjust::detectValueO2 = detectValueO2; _p->ns1__wqfxyAdjust::labelValuePEF = labelValuePEF; _p->ns1__wqfxyAdjust::labelValueC3H8 = labelValueC3H8; } return _p; }

inline ns1__wqfxyAdjust * soap_new_set_ns1__wqfxyAdjust(struct soap *soap, std::wstring *registCode, std::wstring *gasType, double labelValueCO2, double detectValueCO2, double labelValueCO, double detectValueCO, double labelValueNO, double detectValueNO, double labelValueNO2, double detectValueNO2, double labelValueHC, double detectValueHC, double labelValueO2, double detectValueO2, double labelValuePEF, double labelValueC3H8, std::wstring *adjustResult, std::wstring *adjustTimeStart, std::wstring *adjustTimeEnd, std::wstring *remark) { ns1__wqfxyAdjust *_p = soap_instantiate_ns1__wqfxyAdjust(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__wqfxyAdjust::registCode = registCode; _p->ns1__wqfxyAdjust::gasType = gasType; _p->ns1__wqfxyAdjust::labelValueCO2 = labelValueCO2; _p->ns1__wqfxyAdjust::detectValueCO2 = detectValueCO2; _p->ns1__wqfxyAdjust::labelValueCO = labelValueCO; _p->ns1__wqfxyAdjust::detectValueCO = detectValueCO; _p->ns1__wqfxyAdjust::labelValueNO = labelValueNO; _p->ns1__wqfxyAdjust::detectValueNO = detectValueNO; _p->ns1__wqfxyAdjust::labelValueNO2 = labelValueNO2; _p->ns1__wqfxyAdjust::detectValueNO2 = detectValueNO2; _p->ns1__wqfxyAdjust::labelValueHC = labelValueHC; _p->ns1__wqfxyAdjust::detectValueHC = detectValueHC; _p->ns1__wqfxyAdjust::labelValueO2 = labelValueO2; _p->ns1__wqfxyAdjust::detectValueO2 = detectValueO2; _p->ns1__wqfxyAdjust::labelValuePEF = labelValuePEF; _p->ns1__wqfxyAdjust::labelValueC3H8 = labelValueC3H8; _p->ns1__wqfxyAdjust::adjustResult = adjustResult; _p->ns1__wqfxyAdjust::adjustTimeStart = adjustTimeStart; _p->ns1__wqfxyAdjust::adjustTimeEnd = adjustTimeEnd; _p->ns1__wqfxyAdjust::remark = remark; } return _p; }

inline void soap_delete_ns1__wqfxyAdjust(struct soap *soap, ns1__wqfxyAdjust *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__wqfxyAdjust(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cgjPLHPSelfcheckResponse
#define SOAP_TYPE_ns1__cgjPLHPSelfcheckResponse (64)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cgjPLHPSelfcheckResponse(struct soap*, const char*, int, const ns1__cgjPLHPSelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__cgjPLHPSelfcheckResponse * SOAP_FMAC4 soap_in_ns1__cgjPLHPSelfcheckResponse(struct soap*, const char*, ns1__cgjPLHPSelfcheckResponse *, const char*);

#ifndef soap_write_ns1__cgjPLHPSelfcheckResponse
#define soap_write_ns1__cgjPLHPSelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:cgjPLHPSelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjPLHPSelfcheckResponse * SOAP_FMAC4 soap_get_ns1__cgjPLHPSelfcheckResponse(struct soap*, ns1__cgjPLHPSelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__cgjPLHPSelfcheckResponse
#define soap_read_ns1__cgjPLHPSelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cgjPLHPSelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__cgjPLHPSelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__cgjPLHPSelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__cgjPLHPSelfcheckResponse * soap_new_ns1__cgjPLHPSelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cgjPLHPSelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__cgjPLHPSelfcheckResponse * soap_new_req_ns1__cgjPLHPSelfcheckResponse(struct soap *soap, bool return_) { ns1__cgjPLHPSelfcheckResponse *_p = soap_instantiate_ns1__cgjPLHPSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjPLHPSelfcheckResponse::return_ = return_; } return _p; }

inline ns1__cgjPLHPSelfcheckResponse * soap_new_set_ns1__cgjPLHPSelfcheckResponse(struct soap *soap, bool return_) { ns1__cgjPLHPSelfcheckResponse *_p = soap_instantiate_ns1__cgjPLHPSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjPLHPSelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__cgjPLHPSelfcheckResponse(struct soap *soap, ns1__cgjPLHPSelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cgjPLHPSelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cgjPLHPSelfcheck
#define SOAP_TYPE_ns1__cgjPLHPSelfcheck (63)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cgjPLHPSelfcheck(struct soap*, const char*, int, const ns1__cgjPLHPSelfcheck *, const char*);
SOAP_FMAC3 ns1__cgjPLHPSelfcheck * SOAP_FMAC4 soap_in_ns1__cgjPLHPSelfcheck(struct soap*, const char*, ns1__cgjPLHPSelfcheck *, const char*);

#ifndef soap_write_ns1__cgjPLHPSelfcheck
#define soap_write_ns1__cgjPLHPSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:cgjPLHPSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjPLHPSelfcheck * SOAP_FMAC4 soap_get_ns1__cgjPLHPSelfcheck(struct soap*, ns1__cgjPLHPSelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__cgjPLHPSelfcheck
#define soap_read_ns1__cgjPLHPSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cgjPLHPSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__cgjPLHPSelfcheck * SOAP_FMAC2 soap_instantiate_ns1__cgjPLHPSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__cgjPLHPSelfcheck * soap_new_ns1__cgjPLHPSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cgjPLHPSelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__cgjPLHPSelfcheck * soap_new_req_ns1__cgjPLHPSelfcheck(struct soap *soap, double nameSpeed1, double PLHP1, double nameSpeed2, double PLHP2, double nameSpeed3, double PLHP3, double nameSpeed4, double PLHP4, double maxSpeed, double ALpower1, double ALpower2) { ns1__cgjPLHPSelfcheck *_p = soap_instantiate_ns1__cgjPLHPSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjPLHPSelfcheck::nameSpeed1 = nameSpeed1; _p->ns1__cgjPLHPSelfcheck::PLHP1 = PLHP1; _p->ns1__cgjPLHPSelfcheck::nameSpeed2 = nameSpeed2; _p->ns1__cgjPLHPSelfcheck::PLHP2 = PLHP2; _p->ns1__cgjPLHPSelfcheck::nameSpeed3 = nameSpeed3; _p->ns1__cgjPLHPSelfcheck::PLHP3 = PLHP3; _p->ns1__cgjPLHPSelfcheck::nameSpeed4 = nameSpeed4; _p->ns1__cgjPLHPSelfcheck::PLHP4 = PLHP4; _p->ns1__cgjPLHPSelfcheck::maxSpeed = maxSpeed; _p->ns1__cgjPLHPSelfcheck::ALpower1 = ALpower1; _p->ns1__cgjPLHPSelfcheck::ALpower2 = ALpower2; } return _p; }

inline ns1__cgjPLHPSelfcheck * soap_new_set_ns1__cgjPLHPSelfcheck(struct soap *soap, std::wstring *registCode, std::wstring *speedQJ1, double nameSpeed1, double PLHP1, std::wstring *speedQJ2, double nameSpeed2, double PLHP2, std::wstring *speedQJ3, double nameSpeed3, double PLHP3, std::wstring *speedQJ4, double nameSpeed4, double PLHP4, double maxSpeed, double ALpower1, double ALpower2, std::wstring *checkResult, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__cgjPLHPSelfcheck *_p = soap_instantiate_ns1__cgjPLHPSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjPLHPSelfcheck::registCode = registCode; _p->ns1__cgjPLHPSelfcheck::speedQJ1 = speedQJ1; _p->ns1__cgjPLHPSelfcheck::nameSpeed1 = nameSpeed1; _p->ns1__cgjPLHPSelfcheck::PLHP1 = PLHP1; _p->ns1__cgjPLHPSelfcheck::speedQJ2 = speedQJ2; _p->ns1__cgjPLHPSelfcheck::nameSpeed2 = nameSpeed2; _p->ns1__cgjPLHPSelfcheck::PLHP2 = PLHP2; _p->ns1__cgjPLHPSelfcheck::speedQJ3 = speedQJ3; _p->ns1__cgjPLHPSelfcheck::nameSpeed3 = nameSpeed3; _p->ns1__cgjPLHPSelfcheck::PLHP3 = PLHP3; _p->ns1__cgjPLHPSelfcheck::speedQJ4 = speedQJ4; _p->ns1__cgjPLHPSelfcheck::nameSpeed4 = nameSpeed4; _p->ns1__cgjPLHPSelfcheck::PLHP4 = PLHP4; _p->ns1__cgjPLHPSelfcheck::maxSpeed = maxSpeed; _p->ns1__cgjPLHPSelfcheck::ALpower1 = ALpower1; _p->ns1__cgjPLHPSelfcheck::ALpower2 = ALpower2; _p->ns1__cgjPLHPSelfcheck::checkResult = checkResult; _p->ns1__cgjPLHPSelfcheck::checkTimeStart = checkTimeStart; _p->ns1__cgjPLHPSelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__cgjPLHPSelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__cgjPLHPSelfcheck(struct soap *soap, ns1__cgjPLHPSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cgjPLHPSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__doubleIdleLog
#define SOAP_TYPE_ns1__doubleIdleLog (62)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__doubleIdleLog(struct soap*, const char*, int, const ns1__doubleIdleLog *, const char*);
SOAP_FMAC3 ns1__doubleIdleLog * SOAP_FMAC4 soap_in_ns1__doubleIdleLog(struct soap*, const char*, ns1__doubleIdleLog *, const char*);

#ifndef soap_write_ns1__doubleIdleLog
#define soap_write_ns1__doubleIdleLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:doubleIdleLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__doubleIdleLog * SOAP_FMAC4 soap_get_ns1__doubleIdleLog(struct soap*, ns1__doubleIdleLog *, const char*, const char*);

#ifndef soap_read_ns1__doubleIdleLog
#define soap_read_ns1__doubleIdleLog(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__doubleIdleLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__doubleIdleLog * SOAP_FMAC2 soap_instantiate_ns1__doubleIdleLog(struct soap*, int, const char*, const char*, size_t*);

inline ns1__doubleIdleLog * soap_new_ns1__doubleIdleLog(struct soap *soap, int n = -1) { return soap_instantiate_ns1__doubleIdleLog(soap, n, NULL, NULL, NULL); }

inline ns1__doubleIdleLog * soap_new_req_ns1__doubleIdleLog(struct soap *soap, int inspectNum, double flowHC, double flowCO, double flowCO2, double analyserO2, double oilTemperature, double lambdaValue, double qtfxyjcswd, double zhlwd) { ns1__doubleIdleLog *_p = soap_instantiate_ns1__doubleIdleLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__doubleIdleLog::inspectNum = inspectNum; _p->ns1__doubleIdleLog::flowHC = flowHC; _p->ns1__doubleIdleLog::flowCO = flowCO; _p->ns1__doubleIdleLog::flowCO2 = flowCO2; _p->ns1__doubleIdleLog::analyserO2 = analyserO2; _p->ns1__doubleIdleLog::oilTemperature = oilTemperature; _p->ns1__doubleIdleLog::lambdaValue = lambdaValue; _p->ns1__doubleIdleLog::qtfxyjcswd = qtfxyjcswd; _p->ns1__doubleIdleLog::zhlwd = zhlwd; } return _p; }

inline ns1__doubleIdleLog * soap_new_set_ns1__doubleIdleLog(struct soap *soap, std::wstring *businessId, std::wstring *registCode, int inspectNum, double flowHC, double flowCO, double flowCO2, double analyserO2, double oilTemperature, std::wstring *rotateSpeed, double lambdaValue, double qtfxyjcswd, double zhlwd) { ns1__doubleIdleLog *_p = soap_instantiate_ns1__doubleIdleLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__doubleIdleLog::businessId = businessId; _p->ns1__doubleIdleLog::registCode = registCode; _p->ns1__doubleIdleLog::inspectNum = inspectNum; _p->ns1__doubleIdleLog::flowHC = flowHC; _p->ns1__doubleIdleLog::flowCO = flowCO; _p->ns1__doubleIdleLog::flowCO2 = flowCO2; _p->ns1__doubleIdleLog::analyserO2 = analyserO2; _p->ns1__doubleIdleLog::oilTemperature = oilTemperature; _p->ns1__doubleIdleLog::rotateSpeed = rotateSpeed; _p->ns1__doubleIdleLog::lambdaValue = lambdaValue; _p->ns1__doubleIdleLog::qtfxyjcswd = qtfxyjcswd; _p->ns1__doubleIdleLog::zhlwd = zhlwd; } return _p; }

inline void soap_delete_ns1__doubleIdleLog(struct soap *soap, ns1__doubleIdleLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__doubleIdleLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__doubleIdleData
#define SOAP_TYPE_ns1__doubleIdleData (61)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__doubleIdleData(struct soap*, const char*, int, const ns1__doubleIdleData *, const char*);
SOAP_FMAC3 ns1__doubleIdleData * SOAP_FMAC4 soap_in_ns1__doubleIdleData(struct soap*, const char*, ns1__doubleIdleData *, const char*);

#ifndef soap_write_ns1__doubleIdleData
#define soap_write_ns1__doubleIdleData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:doubleIdleData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__doubleIdleData * SOAP_FMAC4 soap_get_ns1__doubleIdleData(struct soap*, ns1__doubleIdleData *, const char*, const char*);

#ifndef soap_read_ns1__doubleIdleData
#define soap_read_ns1__doubleIdleData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__doubleIdleData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__doubleIdleData * SOAP_FMAC2 soap_instantiate_ns1__doubleIdleData(struct soap*, int, const char*, const char*, size_t*);

inline ns1__doubleIdleData * soap_new_ns1__doubleIdleData(struct soap *soap, int n = -1) { return soap_instantiate_ns1__doubleIdleData(soap, n, NULL, NULL, NULL); }

inline ns1__doubleIdleData * soap_new_req_ns1__doubleIdleData(struct soap *soap, double lrotateSpeed, double hrotateSpeed, double coLowValue, double hcLowValue, double coHighValue, double hcHighValue, double lambdaValue, double tempreture, double humidity, double airPressure) { ns1__doubleIdleData *_p = soap_instantiate_ns1__doubleIdleData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__doubleIdleData::lrotateSpeed = lrotateSpeed; _p->ns1__doubleIdleData::hrotateSpeed = hrotateSpeed; _p->ns1__doubleIdleData::coLowValue = coLowValue; _p->ns1__doubleIdleData::hcLowValue = hcLowValue; _p->ns1__doubleIdleData::coHighValue = coHighValue; _p->ns1__doubleIdleData::hcHighValue = hcHighValue; _p->ns1__doubleIdleData::lambdaValue = lambdaValue; _p->ns1__doubleIdleData::tempreture = tempreture; _p->ns1__doubleIdleData::humidity = humidity; _p->ns1__doubleIdleData::airPressure = airPressure; } return _p; }

inline ns1__doubleIdleData * soap_new_set_ns1__doubleIdleData(struct soap *soap, std::wstring *businessId, std::wstring *registCode, double lrotateSpeed, double hrotateSpeed, double coLowValue, double hcLowValue, double coHighValue, double hcHighValue, double lambdaValue, double tempreture, double humidity, double airPressure, std::wstring *timeStart, std::wstring *timeEnd) { ns1__doubleIdleData *_p = soap_instantiate_ns1__doubleIdleData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__doubleIdleData::businessId = businessId; _p->ns1__doubleIdleData::registCode = registCode; _p->ns1__doubleIdleData::lrotateSpeed = lrotateSpeed; _p->ns1__doubleIdleData::hrotateSpeed = hrotateSpeed; _p->ns1__doubleIdleData::coLowValue = coLowValue; _p->ns1__doubleIdleData::hcLowValue = hcLowValue; _p->ns1__doubleIdleData::coHighValue = coHighValue; _p->ns1__doubleIdleData::hcHighValue = hcHighValue; _p->ns1__doubleIdleData::lambdaValue = lambdaValue; _p->ns1__doubleIdleData::tempreture = tempreture; _p->ns1__doubleIdleData::humidity = humidity; _p->ns1__doubleIdleData::airPressure = airPressure; _p->ns1__doubleIdleData::timeStart = timeStart; _p->ns1__doubleIdleData::timeEnd = timeEnd; } return _p; }

inline void soap_delete_ns1__doubleIdleData(struct soap *soap, ns1__doubleIdleData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__doubleIdleData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__stateInfo
#define SOAP_TYPE_ns1__stateInfo (60)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__stateInfo(struct soap*, const char*, int, const ns1__stateInfo *, const char*);
SOAP_FMAC3 ns1__stateInfo * SOAP_FMAC4 soap_in_ns1__stateInfo(struct soap*, const char*, ns1__stateInfo *, const char*);

#ifndef soap_write_ns1__stateInfo
#define soap_write_ns1__stateInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:stateInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__stateInfo * SOAP_FMAC4 soap_get_ns1__stateInfo(struct soap*, ns1__stateInfo *, const char*, const char*);

#ifndef soap_read_ns1__stateInfo
#define soap_read_ns1__stateInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__stateInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__stateInfo * SOAP_FMAC2 soap_instantiate_ns1__stateInfo(struct soap*, int, const char*, const char*, size_t*);

inline ns1__stateInfo * soap_new_ns1__stateInfo(struct soap *soap, int n = -1) { return soap_instantiate_ns1__stateInfo(soap, n, NULL, NULL, NULL); }

inline ns1__stateInfo * soap_new_req_ns1__stateInfo(struct soap *soap) { ns1__stateInfo *_p = soap_instantiate_ns1__stateInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__stateInfo * soap_new_set_ns1__stateInfo(struct soap *soap, std::wstring *businessId, std::wstring *methodId, std::wstring *state) { ns1__stateInfo *_p = soap_instantiate_ns1__stateInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__stateInfo::businessId = businessId; _p->ns1__stateInfo::methodId = methodId; _p->ns1__stateInfo::state = state; } return _p; }

inline void soap_delete_ns1__stateInfo(struct soap *soap, ns1__stateInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__stateInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getSatateResponse
#define SOAP_TYPE_ns1__getSatateResponse (59)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getSatateResponse(struct soap*, const char*, int, const ns1__getSatateResponse *, const char*);
SOAP_FMAC3 ns1__getSatateResponse * SOAP_FMAC4 soap_in_ns1__getSatateResponse(struct soap*, const char*, ns1__getSatateResponse *, const char*);

#ifndef soap_write_ns1__getSatateResponse
#define soap_write_ns1__getSatateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:getSatateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__getSatateResponse * SOAP_FMAC4 soap_get_ns1__getSatateResponse(struct soap*, ns1__getSatateResponse *, const char*, const char*);

#ifndef soap_read_ns1__getSatateResponse
#define soap_read_ns1__getSatateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getSatateResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__getSatateResponse * SOAP_FMAC2 soap_instantiate_ns1__getSatateResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__getSatateResponse * soap_new_ns1__getSatateResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getSatateResponse(soap, n, NULL, NULL, NULL); }

inline ns1__getSatateResponse * soap_new_req_ns1__getSatateResponse(struct soap *soap) { ns1__getSatateResponse *_p = soap_instantiate_ns1__getSatateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__getSatateResponse * soap_new_set_ns1__getSatateResponse(struct soap *soap, ns1__stateInfo *return_) { ns1__getSatateResponse *_p = soap_instantiate_ns1__getSatateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__getSatateResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__getSatateResponse(struct soap *soap, ns1__getSatateResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getSatateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getSatate
#define SOAP_TYPE_ns1__getSatate (58)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getSatate(struct soap*, const char*, int, const ns1__getSatate *, const char*);
SOAP_FMAC3 ns1__getSatate * SOAP_FMAC4 soap_in_ns1__getSatate(struct soap*, const char*, ns1__getSatate *, const char*);

#ifndef soap_write_ns1__getSatate
#define soap_write_ns1__getSatate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:getSatate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__getSatate * SOAP_FMAC4 soap_get_ns1__getSatate(struct soap*, ns1__getSatate *, const char*, const char*);

#ifndef soap_read_ns1__getSatate
#define soap_read_ns1__getSatate(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getSatate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__getSatate * SOAP_FMAC2 soap_instantiate_ns1__getSatate(struct soap*, int, const char*, const char*, size_t*);

inline ns1__getSatate * soap_new_ns1__getSatate(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getSatate(soap, n, NULL, NULL, NULL); }

inline ns1__getSatate * soap_new_req_ns1__getSatate(struct soap *soap) { ns1__getSatate *_p = soap_instantiate_ns1__getSatate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__getSatate * soap_new_set_ns1__getSatate(struct soap *soap, std::wstring *registCode) { ns1__getSatate *_p = soap_instantiate_ns1__getSatate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__getSatate::registCode = registCode; } return _p; }

inline void soap_delete_ns1__getSatate(struct soap *soap, ns1__getSatate *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getSatate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__motoDbIdleDataResponse
#define SOAP_TYPE_ns1__motoDbIdleDataResponse (57)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__motoDbIdleDataResponse(struct soap*, const char*, int, const ns1__motoDbIdleDataResponse *, const char*);
SOAP_FMAC3 ns1__motoDbIdleDataResponse * SOAP_FMAC4 soap_in_ns1__motoDbIdleDataResponse(struct soap*, const char*, ns1__motoDbIdleDataResponse *, const char*);

#ifndef soap_write_ns1__motoDbIdleDataResponse
#define soap_write_ns1__motoDbIdleDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:motoDbIdleDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__motoDbIdleDataResponse * SOAP_FMAC4 soap_get_ns1__motoDbIdleDataResponse(struct soap*, ns1__motoDbIdleDataResponse *, const char*, const char*);

#ifndef soap_read_ns1__motoDbIdleDataResponse
#define soap_read_ns1__motoDbIdleDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__motoDbIdleDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__motoDbIdleDataResponse * SOAP_FMAC2 soap_instantiate_ns1__motoDbIdleDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__motoDbIdleDataResponse * soap_new_ns1__motoDbIdleDataResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__motoDbIdleDataResponse(soap, n, NULL, NULL, NULL); }

inline ns1__motoDbIdleDataResponse * soap_new_req_ns1__motoDbIdleDataResponse(struct soap *soap, bool return_) { ns1__motoDbIdleDataResponse *_p = soap_instantiate_ns1__motoDbIdleDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__motoDbIdleDataResponse::return_ = return_; } return _p; }

inline ns1__motoDbIdleDataResponse * soap_new_set_ns1__motoDbIdleDataResponse(struct soap *soap, bool return_) { ns1__motoDbIdleDataResponse *_p = soap_instantiate_ns1__motoDbIdleDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__motoDbIdleDataResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__motoDbIdleDataResponse(struct soap *soap, ns1__motoDbIdleDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__motoDbIdleDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__motoDbIdleData
#define SOAP_TYPE_ns1__motoDbIdleData (56)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__motoDbIdleData(struct soap*, const char*, int, const ns1__motoDbIdleData *, const char*);
SOAP_FMAC3 ns1__motoDbIdleData * SOAP_FMAC4 soap_in_ns1__motoDbIdleData(struct soap*, const char*, ns1__motoDbIdleData *, const char*);

#ifndef soap_write_ns1__motoDbIdleData
#define soap_write_ns1__motoDbIdleData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:motoDbIdleData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__motoDbIdleData * SOAP_FMAC4 soap_get_ns1__motoDbIdleData(struct soap*, ns1__motoDbIdleData *, const char*, const char*);

#ifndef soap_read_ns1__motoDbIdleData
#define soap_read_ns1__motoDbIdleData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__motoDbIdleData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__motoDbIdleData * SOAP_FMAC2 soap_instantiate_ns1__motoDbIdleData(struct soap*, int, const char*, const char*, size_t*);

inline ns1__motoDbIdleData * soap_new_ns1__motoDbIdleData(struct soap *soap, int n = -1) { return soap_instantiate_ns1__motoDbIdleData(soap, n, NULL, NULL, NULL); }

inline ns1__motoDbIdleData * soap_new_req_ns1__motoDbIdleData(struct soap *soap, double hHC, double hCO, double hCO2, double hIdleSpeed, double HC, double CO, double CO2, double idleSpeed, double tempreture, double humidity, double airPressure) { ns1__motoDbIdleData *_p = soap_instantiate_ns1__motoDbIdleData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__motoDbIdleData::hHC = hHC; _p->ns1__motoDbIdleData::hCO = hCO; _p->ns1__motoDbIdleData::hCO2 = hCO2; _p->ns1__motoDbIdleData::hIdleSpeed = hIdleSpeed; _p->ns1__motoDbIdleData::HC = HC; _p->ns1__motoDbIdleData::CO = CO; _p->ns1__motoDbIdleData::CO2 = CO2; _p->ns1__motoDbIdleData::idleSpeed = idleSpeed; _p->ns1__motoDbIdleData::tempreture = tempreture; _p->ns1__motoDbIdleData::humidity = humidity; _p->ns1__motoDbIdleData::airPressure = airPressure; } return _p; }

inline ns1__motoDbIdleData * soap_new_set_ns1__motoDbIdleData(struct soap *soap, std::wstring *businessId, std::wstring *registCode, double hHC, double hCO, double hCO2, double hIdleSpeed, double HC, double CO, double CO2, double idleSpeed, double tempreture, double humidity, double airPressure, std::wstring *timeStart, std::wstring *timeEnd) { ns1__motoDbIdleData *_p = soap_instantiate_ns1__motoDbIdleData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__motoDbIdleData::businessId = businessId; _p->ns1__motoDbIdleData::registCode = registCode; _p->ns1__motoDbIdleData::hHC = hHC; _p->ns1__motoDbIdleData::hCO = hCO; _p->ns1__motoDbIdleData::hCO2 = hCO2; _p->ns1__motoDbIdleData::hIdleSpeed = hIdleSpeed; _p->ns1__motoDbIdleData::HC = HC; _p->ns1__motoDbIdleData::CO = CO; _p->ns1__motoDbIdleData::CO2 = CO2; _p->ns1__motoDbIdleData::idleSpeed = idleSpeed; _p->ns1__motoDbIdleData::tempreture = tempreture; _p->ns1__motoDbIdleData::humidity = humidity; _p->ns1__motoDbIdleData::airPressure = airPressure; _p->ns1__motoDbIdleData::timeStart = timeStart; _p->ns1__motoDbIdleData::timeEnd = timeEnd; } return _p; }

inline void soap_delete_ns1__motoDbIdleData(struct soap *soap, ns1__motoDbIdleData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__motoDbIdleData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__vmasDataResponse
#define SOAP_TYPE_ns1__vmasDataResponse (55)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__vmasDataResponse(struct soap*, const char*, int, const ns1__vmasDataResponse *, const char*);
SOAP_FMAC3 ns1__vmasDataResponse * SOAP_FMAC4 soap_in_ns1__vmasDataResponse(struct soap*, const char*, ns1__vmasDataResponse *, const char*);

#ifndef soap_write_ns1__vmasDataResponse
#define soap_write_ns1__vmasDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:vmasDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__vmasDataResponse * SOAP_FMAC4 soap_get_ns1__vmasDataResponse(struct soap*, ns1__vmasDataResponse *, const char*, const char*);

#ifndef soap_read_ns1__vmasDataResponse
#define soap_read_ns1__vmasDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__vmasDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__vmasDataResponse * SOAP_FMAC2 soap_instantiate_ns1__vmasDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__vmasDataResponse * soap_new_ns1__vmasDataResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__vmasDataResponse(soap, n, NULL, NULL, NULL); }

inline ns1__vmasDataResponse * soap_new_req_ns1__vmasDataResponse(struct soap *soap, bool return_) { ns1__vmasDataResponse *_p = soap_instantiate_ns1__vmasDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__vmasDataResponse::return_ = return_; } return _p; }

inline ns1__vmasDataResponse * soap_new_set_ns1__vmasDataResponse(struct soap *soap, bool return_) { ns1__vmasDataResponse *_p = soap_instantiate_ns1__vmasDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__vmasDataResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__vmasDataResponse(struct soap *soap, ns1__vmasDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__vmasDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__vmasData
#define SOAP_TYPE_ns1__vmasData (54)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__vmasData(struct soap*, const char*, int, const ns1__vmasData *, const char*);
SOAP_FMAC3 ns1__vmasData * SOAP_FMAC4 soap_in_ns1__vmasData(struct soap*, const char*, ns1__vmasData *, const char*);

#ifndef soap_write_ns1__vmasData
#define soap_write_ns1__vmasData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:vmasData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__vmasData * SOAP_FMAC4 soap_get_ns1__vmasData(struct soap*, ns1__vmasData *, const char*, const char*);

#ifndef soap_read_ns1__vmasData
#define soap_read_ns1__vmasData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__vmasData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__vmasData * SOAP_FMAC2 soap_instantiate_ns1__vmasData(struct soap*, int, const char*, const char*, size_t*);

inline ns1__vmasData * soap_new_ns1__vmasData(struct soap *soap, int n = -1) { return soap_instantiate_ns1__vmasData(soap, n, NULL, NULL, NULL); }

inline ns1__vmasData * soap_new_req_ns1__vmasData(struct soap *soap, double valueCO, double valueHC, double valueNO, double testSetPower, double totalDistance, double tempreture, double humidity, double airPressure, double lambdaValue, double valueNO1, double valueNO2) { ns1__vmasData *_p = soap_instantiate_ns1__vmasData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__vmasData::valueCO = valueCO; _p->ns1__vmasData::valueHC = valueHC; _p->ns1__vmasData::valueNO = valueNO; _p->ns1__vmasData::testSetPower = testSetPower; _p->ns1__vmasData::totalDistance = totalDistance; _p->ns1__vmasData::tempreture = tempreture; _p->ns1__vmasData::humidity = humidity; _p->ns1__vmasData::airPressure = airPressure; _p->ns1__vmasData::lambdaValue = lambdaValue; _p->ns1__vmasData::valueNO1 = valueNO1; _p->ns1__vmasData::valueNO2 = valueNO2; } return _p; }

inline ns1__vmasData * soap_new_set_ns1__vmasData(struct soap *soap, std::wstring *businessId, std::wstring *registCode, double valueCO, double valueHC, double valueNO, double testSetPower, double totalDistance, double tempreture, double humidity, double airPressure, std::wstring *timeStart, std::wstring *timeEnd, double lambdaValue, double valueNO1, double valueNO2) { ns1__vmasData *_p = soap_instantiate_ns1__vmasData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__vmasData::businessId = businessId; _p->ns1__vmasData::registCode = registCode; _p->ns1__vmasData::valueCO = valueCO; _p->ns1__vmasData::valueHC = valueHC; _p->ns1__vmasData::valueNO = valueNO; _p->ns1__vmasData::testSetPower = testSetPower; _p->ns1__vmasData::totalDistance = totalDistance; _p->ns1__vmasData::tempreture = tempreture; _p->ns1__vmasData::humidity = humidity; _p->ns1__vmasData::airPressure = airPressure; _p->ns1__vmasData::timeStart = timeStart; _p->ns1__vmasData::timeEnd = timeEnd; _p->ns1__vmasData::lambdaValue = lambdaValue; _p->ns1__vmasData::valueNO1 = valueNO1; _p->ns1__vmasData::valueNO2 = valueNO2; } return _p; }

inline void soap_delete_ns1__vmasData(struct soap *soap, ns1__vmasData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__vmasData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__loadDownDataResponse
#define SOAP_TYPE_ns1__loadDownDataResponse (53)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__loadDownDataResponse(struct soap*, const char*, int, const ns1__loadDownDataResponse *, const char*);
SOAP_FMAC3 ns1__loadDownDataResponse * SOAP_FMAC4 soap_in_ns1__loadDownDataResponse(struct soap*, const char*, ns1__loadDownDataResponse *, const char*);

#ifndef soap_write_ns1__loadDownDataResponse
#define soap_write_ns1__loadDownDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:loadDownDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__loadDownDataResponse * SOAP_FMAC4 soap_get_ns1__loadDownDataResponse(struct soap*, ns1__loadDownDataResponse *, const char*, const char*);

#ifndef soap_read_ns1__loadDownDataResponse
#define soap_read_ns1__loadDownDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__loadDownDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__loadDownDataResponse * SOAP_FMAC2 soap_instantiate_ns1__loadDownDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__loadDownDataResponse * soap_new_ns1__loadDownDataResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__loadDownDataResponse(soap, n, NULL, NULL, NULL); }

inline ns1__loadDownDataResponse * soap_new_req_ns1__loadDownDataResponse(struct soap *soap, bool return_) { ns1__loadDownDataResponse *_p = soap_instantiate_ns1__loadDownDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__loadDownDataResponse::return_ = return_; } return _p; }

inline ns1__loadDownDataResponse * soap_new_set_ns1__loadDownDataResponse(struct soap *soap, bool return_) { ns1__loadDownDataResponse *_p = soap_instantiate_ns1__loadDownDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__loadDownDataResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__loadDownDataResponse(struct soap *soap, ns1__loadDownDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__loadDownDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__loadDownData
#define SOAP_TYPE_ns1__loadDownData (52)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__loadDownData(struct soap*, const char*, int, const ns1__loadDownData *, const char*);
SOAP_FMAC3 ns1__loadDownData * SOAP_FMAC4 soap_in_ns1__loadDownData(struct soap*, const char*, ns1__loadDownData *, const char*);

#ifndef soap_write_ns1__loadDownData
#define soap_write_ns1__loadDownData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:loadDownData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__loadDownData * SOAP_FMAC4 soap_get_ns1__loadDownData(struct soap*, ns1__loadDownData *, const char*, const char*);

#ifndef soap_read_ns1__loadDownData
#define soap_read_ns1__loadDownData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__loadDownData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__loadDownData * SOAP_FMAC2 soap_instantiate_ns1__loadDownData(struct soap*, int, const char*, const char*, size_t*);

inline ns1__loadDownData * soap_new_ns1__loadDownData(struct soap *soap, int n = -1) { return soap_instantiate_ns1__loadDownData(soap, n, NULL, NULL, NULL); }

inline ns1__loadDownData * soap_new_req_ns1__loadDownData(struct soap *soap, double smokeK100, double smokeK90, double smokeK80, double power, double speed, double mortorSpeed, double idleRotateSpeed, double valueNO, double tempreture, double humidity, double airPressure) { ns1__loadDownData *_p = soap_instantiate_ns1__loadDownData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__loadDownData::smokeK100 = smokeK100; _p->ns1__loadDownData::smokeK90 = smokeK90; _p->ns1__loadDownData::smokeK80 = smokeK80; _p->ns1__loadDownData::power = power; _p->ns1__loadDownData::speed = speed; _p->ns1__loadDownData::mortorSpeed = mortorSpeed; _p->ns1__loadDownData::idleRotateSpeed = idleRotateSpeed; _p->ns1__loadDownData::valueNO = valueNO; _p->ns1__loadDownData::tempreture = tempreture; _p->ns1__loadDownData::humidity = humidity; _p->ns1__loadDownData::airPressure = airPressure; } return _p; }

inline ns1__loadDownData * soap_new_set_ns1__loadDownData(struct soap *soap, std::wstring *businessId, std::wstring *registCode, double smokeK100, double smokeK90, double smokeK80, double power, double speed, double mortorSpeed, double idleRotateSpeed, double valueNO, double tempreture, double humidity, double airPressure, std::wstring *timeStart, std::wstring *timeEnd) { ns1__loadDownData *_p = soap_instantiate_ns1__loadDownData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__loadDownData::businessId = businessId; _p->ns1__loadDownData::registCode = registCode; _p->ns1__loadDownData::smokeK100 = smokeK100; _p->ns1__loadDownData::smokeK90 = smokeK90; _p->ns1__loadDownData::smokeK80 = smokeK80; _p->ns1__loadDownData::power = power; _p->ns1__loadDownData::speed = speed; _p->ns1__loadDownData::mortorSpeed = mortorSpeed; _p->ns1__loadDownData::idleRotateSpeed = idleRotateSpeed; _p->ns1__loadDownData::valueNO = valueNO; _p->ns1__loadDownData::tempreture = tempreture; _p->ns1__loadDownData::humidity = humidity; _p->ns1__loadDownData::airPressure = airPressure; _p->ns1__loadDownData::timeStart = timeStart; _p->ns1__loadDownData::timeEnd = timeEnd; } return _p; }

inline void soap_delete_ns1__loadDownData(struct soap *soap, ns1__loadDownData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__loadDownData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__lightproofSmokeDataLog_USCOREFCResponse
#define SOAP_TYPE_ns1__lightproofSmokeDataLog_USCOREFCResponse (51)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__lightproofSmokeDataLog_USCOREFCResponse(struct soap*, const char*, int, const ns1__lightproofSmokeDataLog_USCOREFCResponse *, const char*);
SOAP_FMAC3 ns1__lightproofSmokeDataLog_USCOREFCResponse * SOAP_FMAC4 soap_in_ns1__lightproofSmokeDataLog_USCOREFCResponse(struct soap*, const char*, ns1__lightproofSmokeDataLog_USCOREFCResponse *, const char*);

#ifndef soap_write_ns1__lightproofSmokeDataLog_USCOREFCResponse
#define soap_write_ns1__lightproofSmokeDataLog_USCOREFCResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:lightproofSmokeDataLog_FCResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lightproofSmokeDataLog_USCOREFCResponse * SOAP_FMAC4 soap_get_ns1__lightproofSmokeDataLog_USCOREFCResponse(struct soap*, ns1__lightproofSmokeDataLog_USCOREFCResponse *, const char*, const char*);

#ifndef soap_read_ns1__lightproofSmokeDataLog_USCOREFCResponse
#define soap_read_ns1__lightproofSmokeDataLog_USCOREFCResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__lightproofSmokeDataLog_USCOREFCResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__lightproofSmokeDataLog_USCOREFCResponse * SOAP_FMAC2 soap_instantiate_ns1__lightproofSmokeDataLog_USCOREFCResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__lightproofSmokeDataLog_USCOREFCResponse * soap_new_ns1__lightproofSmokeDataLog_USCOREFCResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__lightproofSmokeDataLog_USCOREFCResponse(soap, n, NULL, NULL, NULL); }

inline ns1__lightproofSmokeDataLog_USCOREFCResponse * soap_new_req_ns1__lightproofSmokeDataLog_USCOREFCResponse(struct soap *soap, bool return_) { ns1__lightproofSmokeDataLog_USCOREFCResponse *_p = soap_instantiate_ns1__lightproofSmokeDataLog_USCOREFCResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeDataLog_USCOREFCResponse::return_ = return_; } return _p; }

inline ns1__lightproofSmokeDataLog_USCOREFCResponse * soap_new_set_ns1__lightproofSmokeDataLog_USCOREFCResponse(struct soap *soap, bool return_) { ns1__lightproofSmokeDataLog_USCOREFCResponse *_p = soap_instantiate_ns1__lightproofSmokeDataLog_USCOREFCResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeDataLog_USCOREFCResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__lightproofSmokeDataLog_USCOREFCResponse(struct soap *soap, ns1__lightproofSmokeDataLog_USCOREFCResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__lightproofSmokeDataLog_USCOREFCResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__lightproofSmokeDataLog_USCOREFC
#define SOAP_TYPE_ns1__lightproofSmokeDataLog_USCOREFC (50)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, const char*, int, const ns1__lightproofSmokeDataLog_USCOREFC *, const char*);
SOAP_FMAC3 ns1__lightproofSmokeDataLog_USCOREFC * SOAP_FMAC4 soap_in_ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, const char*, ns1__lightproofSmokeDataLog_USCOREFC *, const char*);

#ifndef soap_write_ns1__lightproofSmokeDataLog_USCOREFC
#define soap_write_ns1__lightproofSmokeDataLog_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:lightproofSmokeDataLog_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lightproofSmokeDataLog_USCOREFC * SOAP_FMAC4 soap_get_ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, ns1__lightproofSmokeDataLog_USCOREFC *, const char*, const char*);

#ifndef soap_read_ns1__lightproofSmokeDataLog_USCOREFC
#define soap_read_ns1__lightproofSmokeDataLog_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__lightproofSmokeDataLog_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__lightproofSmokeDataLog_USCOREFC * SOAP_FMAC2 soap_instantiate_ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline ns1__lightproofSmokeDataLog_USCOREFC * soap_new_ns1__lightproofSmokeDataLog_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate_ns1__lightproofSmokeDataLog_USCOREFC(soap, n, NULL, NULL, NULL); }

inline ns1__lightproofSmokeDataLog_USCOREFC * soap_new_req_ns1__lightproofSmokeDataLog_USCOREFC(struct soap *soap, double labelvalue, double zs) { ns1__lightproofSmokeDataLog_USCOREFC *_p = soap_instantiate_ns1__lightproofSmokeDataLog_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeDataLog_USCOREFC::labelvalue = labelvalue; _p->ns1__lightproofSmokeDataLog_USCOREFC::zs = zs; } return _p; }

inline ns1__lightproofSmokeDataLog_USCOREFC * soap_new_set_ns1__lightproofSmokeDataLog_USCOREFC(struct soap *soap, std::wstring *businessId, std::wstring *registCode, std::wstring *cytimestart, double labelvalue, double zs) { ns1__lightproofSmokeDataLog_USCOREFC *_p = soap_instantiate_ns1__lightproofSmokeDataLog_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeDataLog_USCOREFC::businessId = businessId; _p->ns1__lightproofSmokeDataLog_USCOREFC::registCode = registCode; _p->ns1__lightproofSmokeDataLog_USCOREFC::cytimestart = cytimestart; _p->ns1__lightproofSmokeDataLog_USCOREFC::labelvalue = labelvalue; _p->ns1__lightproofSmokeDataLog_USCOREFC::zs = zs; } return _p; }

inline void soap_delete_ns1__lightproofSmokeDataLog_USCOREFC(struct soap *soap, ns1__lightproofSmokeDataLog_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__pqfxySelfcheckResponse
#define SOAP_TYPE_ns1__pqfxySelfcheckResponse (49)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__pqfxySelfcheckResponse(struct soap*, const char*, int, const ns1__pqfxySelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__pqfxySelfcheckResponse * SOAP_FMAC4 soap_in_ns1__pqfxySelfcheckResponse(struct soap*, const char*, ns1__pqfxySelfcheckResponse *, const char*);

#ifndef soap_write_ns1__pqfxySelfcheckResponse
#define soap_write_ns1__pqfxySelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:pqfxySelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__pqfxySelfcheckResponse * SOAP_FMAC4 soap_get_ns1__pqfxySelfcheckResponse(struct soap*, ns1__pqfxySelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__pqfxySelfcheckResponse
#define soap_read_ns1__pqfxySelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__pqfxySelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__pqfxySelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__pqfxySelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__pqfxySelfcheckResponse * soap_new_ns1__pqfxySelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__pqfxySelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__pqfxySelfcheckResponse * soap_new_req_ns1__pqfxySelfcheckResponse(struct soap *soap, bool return_) { ns1__pqfxySelfcheckResponse *_p = soap_instantiate_ns1__pqfxySelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__pqfxySelfcheckResponse::return_ = return_; } return _p; }

inline ns1__pqfxySelfcheckResponse * soap_new_set_ns1__pqfxySelfcheckResponse(struct soap *soap, bool return_) { ns1__pqfxySelfcheckResponse *_p = soap_instantiate_ns1__pqfxySelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__pqfxySelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__pqfxySelfcheckResponse(struct soap *soap, ns1__pqfxySelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__pqfxySelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__pqfxySelfcheck
#define SOAP_TYPE_ns1__pqfxySelfcheck (48)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__pqfxySelfcheck(struct soap*, const char*, int, const ns1__pqfxySelfcheck *, const char*);
SOAP_FMAC3 ns1__pqfxySelfcheck * SOAP_FMAC4 soap_in_ns1__pqfxySelfcheck(struct soap*, const char*, ns1__pqfxySelfcheck *, const char*);

#ifndef soap_write_ns1__pqfxySelfcheck
#define soap_write_ns1__pqfxySelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:pqfxySelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__pqfxySelfcheck * SOAP_FMAC4 soap_get_ns1__pqfxySelfcheck(struct soap*, ns1__pqfxySelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__pqfxySelfcheck
#define soap_read_ns1__pqfxySelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__pqfxySelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__pqfxySelfcheck * SOAP_FMAC2 soap_instantiate_ns1__pqfxySelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__pqfxySelfcheck * soap_new_ns1__pqfxySelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__pqfxySelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__pqfxySelfcheck * soap_new_req_ns1__pqfxySelfcheck(struct soap *soap, double noxRTime1, double noxRTime2, double co2RTime1, double co2RTime2, double CEconverte) { ns1__pqfxySelfcheck *_p = soap_instantiate_ns1__pqfxySelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__pqfxySelfcheck::noxRTime1 = noxRTime1; _p->ns1__pqfxySelfcheck::noxRTime2 = noxRTime2; _p->ns1__pqfxySelfcheck::co2RTime1 = co2RTime1; _p->ns1__pqfxySelfcheck::co2RTime2 = co2RTime2; _p->ns1__pqfxySelfcheck::CEconverte = CEconverte; } return _p; }

inline ns1__pqfxySelfcheck * soap_new_set_ns1__pqfxySelfcheck(struct soap *soap, std::wstring *registCode, double noxRTime1, std::wstring *noxRTime1Start, std::wstring *noxRTime1End, double noxRTime2, std::wstring *noxRTime2Start, std::wstring *noxRTime2End, double co2RTime1, std::wstring *co2RTime1Start, std::wstring *co2RTime1End, double co2RTime2, std::wstring *co2RTime2Start, std::wstring *co2RTime2End, double CEconverte, std::wstring *CETimeStart, std::wstring *CETimeEnd, std::wstring *checkResult, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__pqfxySelfcheck *_p = soap_instantiate_ns1__pqfxySelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__pqfxySelfcheck::registCode = registCode; _p->ns1__pqfxySelfcheck::noxRTime1 = noxRTime1; _p->ns1__pqfxySelfcheck::noxRTime1Start = noxRTime1Start; _p->ns1__pqfxySelfcheck::noxRTime1End = noxRTime1End; _p->ns1__pqfxySelfcheck::noxRTime2 = noxRTime2; _p->ns1__pqfxySelfcheck::noxRTime2Start = noxRTime2Start; _p->ns1__pqfxySelfcheck::noxRTime2End = noxRTime2End; _p->ns1__pqfxySelfcheck::co2RTime1 = co2RTime1; _p->ns1__pqfxySelfcheck::co2RTime1Start = co2RTime1Start; _p->ns1__pqfxySelfcheck::co2RTime1End = co2RTime1End; _p->ns1__pqfxySelfcheck::co2RTime2 = co2RTime2; _p->ns1__pqfxySelfcheck::co2RTime2Start = co2RTime2Start; _p->ns1__pqfxySelfcheck::co2RTime2End = co2RTime2End; _p->ns1__pqfxySelfcheck::CEconverte = CEconverte; _p->ns1__pqfxySelfcheck::CETimeStart = CETimeStart; _p->ns1__pqfxySelfcheck::CETimeEnd = CETimeEnd; _p->ns1__pqfxySelfcheck::checkResult = checkResult; _p->ns1__pqfxySelfcheck::checkTimeStart = checkTimeStart; _p->ns1__pqfxySelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__pqfxySelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__pqfxySelfcheck(struct soap *soap, ns1__pqfxySelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__pqfxySelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__hjcsgyqSelfcheckResponse
#define SOAP_TYPE_ns1__hjcsgyqSelfcheckResponse (47)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__hjcsgyqSelfcheckResponse(struct soap*, const char*, int, const ns1__hjcsgyqSelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__hjcsgyqSelfcheckResponse * SOAP_FMAC4 soap_in_ns1__hjcsgyqSelfcheckResponse(struct soap*, const char*, ns1__hjcsgyqSelfcheckResponse *, const char*);

#ifndef soap_write_ns1__hjcsgyqSelfcheckResponse
#define soap_write_ns1__hjcsgyqSelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:hjcsgyqSelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__hjcsgyqSelfcheckResponse * SOAP_FMAC4 soap_get_ns1__hjcsgyqSelfcheckResponse(struct soap*, ns1__hjcsgyqSelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__hjcsgyqSelfcheckResponse
#define soap_read_ns1__hjcsgyqSelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__hjcsgyqSelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__hjcsgyqSelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__hjcsgyqSelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__hjcsgyqSelfcheckResponse * soap_new_ns1__hjcsgyqSelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__hjcsgyqSelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__hjcsgyqSelfcheckResponse * soap_new_req_ns1__hjcsgyqSelfcheckResponse(struct soap *soap, bool return_) { ns1__hjcsgyqSelfcheckResponse *_p = soap_instantiate_ns1__hjcsgyqSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__hjcsgyqSelfcheckResponse::return_ = return_; } return _p; }

inline ns1__hjcsgyqSelfcheckResponse * soap_new_set_ns1__hjcsgyqSelfcheckResponse(struct soap *soap, bool return_) { ns1__hjcsgyqSelfcheckResponse *_p = soap_instantiate_ns1__hjcsgyqSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__hjcsgyqSelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__hjcsgyqSelfcheckResponse(struct soap *soap, ns1__hjcsgyqSelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__hjcsgyqSelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__hjcsgyqSelfcheck
#define SOAP_TYPE_ns1__hjcsgyqSelfcheck (46)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__hjcsgyqSelfcheck(struct soap*, const char*, int, const ns1__hjcsgyqSelfcheck *, const char*);
SOAP_FMAC3 ns1__hjcsgyqSelfcheck * SOAP_FMAC4 soap_in_ns1__hjcsgyqSelfcheck(struct soap*, const char*, ns1__hjcsgyqSelfcheck *, const char*);

#ifndef soap_write_ns1__hjcsgyqSelfcheck
#define soap_write_ns1__hjcsgyqSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:hjcsgyqSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__hjcsgyqSelfcheck * SOAP_FMAC4 soap_get_ns1__hjcsgyqSelfcheck(struct soap*, ns1__hjcsgyqSelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__hjcsgyqSelfcheck
#define soap_read_ns1__hjcsgyqSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__hjcsgyqSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__hjcsgyqSelfcheck * SOAP_FMAC2 soap_instantiate_ns1__hjcsgyqSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__hjcsgyqSelfcheck * soap_new_ns1__hjcsgyqSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__hjcsgyqSelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__hjcsgyqSelfcheck * soap_new_req_ns1__hjcsgyqSelfcheck(struct soap *soap, double actualTemperature, double temperature, double actualHumidity, double humidity, double actualAirPressure, double airPressure) { ns1__hjcsgyqSelfcheck *_p = soap_instantiate_ns1__hjcsgyqSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__hjcsgyqSelfcheck::actualTemperature = actualTemperature; _p->ns1__hjcsgyqSelfcheck::temperature = temperature; _p->ns1__hjcsgyqSelfcheck::actualHumidity = actualHumidity; _p->ns1__hjcsgyqSelfcheck::humidity = humidity; _p->ns1__hjcsgyqSelfcheck::actualAirPressure = actualAirPressure; _p->ns1__hjcsgyqSelfcheck::airPressure = airPressure; } return _p; }

inline ns1__hjcsgyqSelfcheck * soap_new_set_ns1__hjcsgyqSelfcheck(struct soap *soap, std::wstring *registCode, double actualTemperature, double temperature, double actualHumidity, double humidity, double actualAirPressure, double airPressure, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__hjcsgyqSelfcheck *_p = soap_instantiate_ns1__hjcsgyqSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__hjcsgyqSelfcheck::registCode = registCode; _p->ns1__hjcsgyqSelfcheck::actualTemperature = actualTemperature; _p->ns1__hjcsgyqSelfcheck::temperature = temperature; _p->ns1__hjcsgyqSelfcheck::actualHumidity = actualHumidity; _p->ns1__hjcsgyqSelfcheck::humidity = humidity; _p->ns1__hjcsgyqSelfcheck::actualAirPressure = actualAirPressure; _p->ns1__hjcsgyqSelfcheck::airPressure = airPressure; _p->ns1__hjcsgyqSelfcheck::checkTimeStart = checkTimeStart; _p->ns1__hjcsgyqSelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__hjcsgyqSelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__hjcsgyqSelfcheck(struct soap *soap, ns1__hjcsgyqSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__hjcsgyqSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cycdyhwAdjustResponse
#define SOAP_TYPE_ns1__cycdyhwAdjustResponse (45)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cycdyhwAdjustResponse(struct soap*, const char*, int, const ns1__cycdyhwAdjustResponse *, const char*);
SOAP_FMAC3 ns1__cycdyhwAdjustResponse * SOAP_FMAC4 soap_in_ns1__cycdyhwAdjustResponse(struct soap*, const char*, ns1__cycdyhwAdjustResponse *, const char*);

#ifndef soap_write_ns1__cycdyhwAdjustResponse
#define soap_write_ns1__cycdyhwAdjustResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:cycdyhwAdjustResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cycdyhwAdjustResponse * SOAP_FMAC4 soap_get_ns1__cycdyhwAdjustResponse(struct soap*, ns1__cycdyhwAdjustResponse *, const char*, const char*);

#ifndef soap_read_ns1__cycdyhwAdjustResponse
#define soap_read_ns1__cycdyhwAdjustResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cycdyhwAdjustResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__cycdyhwAdjustResponse * SOAP_FMAC2 soap_instantiate_ns1__cycdyhwAdjustResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__cycdyhwAdjustResponse * soap_new_ns1__cycdyhwAdjustResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cycdyhwAdjustResponse(soap, n, NULL, NULL, NULL); }

inline ns1__cycdyhwAdjustResponse * soap_new_req_ns1__cycdyhwAdjustResponse(struct soap *soap, bool return_) { ns1__cycdyhwAdjustResponse *_p = soap_instantiate_ns1__cycdyhwAdjustResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cycdyhwAdjustResponse::return_ = return_; } return _p; }

inline ns1__cycdyhwAdjustResponse * soap_new_set_ns1__cycdyhwAdjustResponse(struct soap *soap, bool return_) { ns1__cycdyhwAdjustResponse *_p = soap_instantiate_ns1__cycdyhwAdjustResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cycdyhwAdjustResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__cycdyhwAdjustResponse(struct soap *soap, ns1__cycdyhwAdjustResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cycdyhwAdjustResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cycdyhwAdjust
#define SOAP_TYPE_ns1__cycdyhwAdjust (44)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cycdyhwAdjust(struct soap*, const char*, int, const ns1__cycdyhwAdjust *, const char*);
SOAP_FMAC3 ns1__cycdyhwAdjust * SOAP_FMAC4 soap_in_ns1__cycdyhwAdjust(struct soap*, const char*, ns1__cycdyhwAdjust *, const char*);

#ifndef soap_write_ns1__cycdyhwAdjust
#define soap_write_ns1__cycdyhwAdjust(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:cycdyhwAdjust", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cycdyhwAdjust * SOAP_FMAC4 soap_get_ns1__cycdyhwAdjust(struct soap*, ns1__cycdyhwAdjust *, const char*, const char*);

#ifndef soap_read_ns1__cycdyhwAdjust
#define soap_read_ns1__cycdyhwAdjust(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cycdyhwAdjust(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__cycdyhwAdjust * SOAP_FMAC2 soap_instantiate_ns1__cycdyhwAdjust(struct soap*, int, const char*, const char*, size_t*);

inline ns1__cycdyhwAdjust * soap_new_ns1__cycdyhwAdjust(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cycdyhwAdjust(soap, n, NULL, NULL, NULL); }

inline ns1__cycdyhwAdjust * soap_new_req_ns1__cycdyhwAdjust(struct soap *soap, double labelValueNO, double detectValueNO, double labelValueNO2, double detectValueNO2, double labelValueCO2, double detectValueCO2) { ns1__cycdyhwAdjust *_p = soap_instantiate_ns1__cycdyhwAdjust(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cycdyhwAdjust::labelValueNO = labelValueNO; _p->ns1__cycdyhwAdjust::detectValueNO = detectValueNO; _p->ns1__cycdyhwAdjust::labelValueNO2 = labelValueNO2; _p->ns1__cycdyhwAdjust::detectValueNO2 = detectValueNO2; _p->ns1__cycdyhwAdjust::labelValueCO2 = labelValueCO2; _p->ns1__cycdyhwAdjust::detectValueCO2 = detectValueCO2; } return _p; }

inline ns1__cycdyhwAdjust * soap_new_set_ns1__cycdyhwAdjust(struct soap *soap, std::wstring *registCode, std::wstring *gasType, double labelValueNO, double detectValueNO, double labelValueNO2, double detectValueNO2, double labelValueCO2, double detectValueCO2, std::wstring *adjustResult, std::wstring *adjustTimeStart, std::wstring *adjustTimeEnd, std::wstring *remark) { ns1__cycdyhwAdjust *_p = soap_instantiate_ns1__cycdyhwAdjust(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cycdyhwAdjust::registCode = registCode; _p->ns1__cycdyhwAdjust::gasType = gasType; _p->ns1__cycdyhwAdjust::labelValueNO = labelValueNO; _p->ns1__cycdyhwAdjust::detectValueNO = detectValueNO; _p->ns1__cycdyhwAdjust::labelValueNO2 = labelValueNO2; _p->ns1__cycdyhwAdjust::detectValueNO2 = detectValueNO2; _p->ns1__cycdyhwAdjust::labelValueCO2 = labelValueCO2; _p->ns1__cycdyhwAdjust::detectValueCO2 = detectValueCO2; _p->ns1__cycdyhwAdjust::adjustResult = adjustResult; _p->ns1__cycdyhwAdjust::adjustTimeStart = adjustTimeStart; _p->ns1__cycdyhwAdjust::adjustTimeEnd = adjustTimeEnd; _p->ns1__cycdyhwAdjust::remark = remark; } return _p; }

inline void soap_delete_ns1__cycdyhwAdjust(struct soap *soap, ns1__cycdyhwAdjust *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cycdyhwAdjust(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__software2centerNew_USCOREFCResponse
#define SOAP_TYPE_ns1__software2centerNew_USCOREFCResponse (43)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__software2centerNew_USCOREFCResponse(struct soap*, const char*, int, const ns1__software2centerNew_USCOREFCResponse *, const char*);
SOAP_FMAC3 ns1__software2centerNew_USCOREFCResponse * SOAP_FMAC4 soap_in_ns1__software2centerNew_USCOREFCResponse(struct soap*, const char*, ns1__software2centerNew_USCOREFCResponse *, const char*);

#ifndef soap_write_ns1__software2centerNew_USCOREFCResponse
#define soap_write_ns1__software2centerNew_USCOREFCResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:software2centerNew_FCResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__software2centerNew_USCOREFCResponse * SOAP_FMAC4 soap_get_ns1__software2centerNew_USCOREFCResponse(struct soap*, ns1__software2centerNew_USCOREFCResponse *, const char*, const char*);

#ifndef soap_read_ns1__software2centerNew_USCOREFCResponse
#define soap_read_ns1__software2centerNew_USCOREFCResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__software2centerNew_USCOREFCResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__software2centerNew_USCOREFCResponse * SOAP_FMAC2 soap_instantiate_ns1__software2centerNew_USCOREFCResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__software2centerNew_USCOREFCResponse * soap_new_ns1__software2centerNew_USCOREFCResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__software2centerNew_USCOREFCResponse(soap, n, NULL, NULL, NULL); }

inline ns1__software2centerNew_USCOREFCResponse * soap_new_req_ns1__software2centerNew_USCOREFCResponse(struct soap *soap) { ns1__software2centerNew_USCOREFCResponse *_p = soap_instantiate_ns1__software2centerNew_USCOREFCResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__software2centerNew_USCOREFCResponse * soap_new_set_ns1__software2centerNew_USCOREFCResponse(struct soap *soap, std::wstring *return_) { ns1__software2centerNew_USCOREFCResponse *_p = soap_instantiate_ns1__software2centerNew_USCOREFCResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__software2centerNew_USCOREFCResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__software2centerNew_USCOREFCResponse(struct soap *soap, ns1__software2centerNew_USCOREFCResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__software2centerNew_USCOREFCResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__software2centerNew_USCOREFC
#define SOAP_TYPE_ns1__software2centerNew_USCOREFC (42)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__software2centerNew_USCOREFC(struct soap*, const char*, int, const ns1__software2centerNew_USCOREFC *, const char*);
SOAP_FMAC3 ns1__software2centerNew_USCOREFC * SOAP_FMAC4 soap_in_ns1__software2centerNew_USCOREFC(struct soap*, const char*, ns1__software2centerNew_USCOREFC *, const char*);

#ifndef soap_write_ns1__software2centerNew_USCOREFC
#define soap_write_ns1__software2centerNew_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:software2centerNew_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__software2centerNew_USCOREFC * SOAP_FMAC4 soap_get_ns1__software2centerNew_USCOREFC(struct soap*, ns1__software2centerNew_USCOREFC *, const char*, const char*);

#ifndef soap_read_ns1__software2centerNew_USCOREFC
#define soap_read_ns1__software2centerNew_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__software2centerNew_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__software2centerNew_USCOREFC * SOAP_FMAC2 soap_instantiate_ns1__software2centerNew_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline ns1__software2centerNew_USCOREFC * soap_new_ns1__software2centerNew_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate_ns1__software2centerNew_USCOREFC(soap, n, NULL, NULL, NULL); }

inline ns1__software2centerNew_USCOREFC * soap_new_req_ns1__software2centerNew_USCOREFC(struct soap *soap) { ns1__software2centerNew_USCOREFC *_p = soap_instantiate_ns1__software2centerNew_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__software2centerNew_USCOREFC * soap_new_set_ns1__software2centerNew_USCOREFC(struct soap *soap, std::wstring *optionType, std::wstring *tableName, std::wstring *dataJson, std::wstring *carid) { ns1__software2centerNew_USCOREFC *_p = soap_instantiate_ns1__software2centerNew_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__software2centerNew_USCOREFC::optionType = optionType; _p->ns1__software2centerNew_USCOREFC::tableName = tableName; _p->ns1__software2centerNew_USCOREFC::dataJson = dataJson; _p->ns1__software2centerNew_USCOREFC::carid = carid; } return _p; }

inline void soap_delete_ns1__software2centerNew_USCOREFC(struct soap *soap, ns1__software2centerNew_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__software2centerNew_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getCarInfo_USCOREFC
#define SOAP_TYPE_ns1__getCarInfo_USCOREFC (41)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getCarInfo_USCOREFC(struct soap*, const char*, int, const ns1__getCarInfo_USCOREFC *, const char*);
SOAP_FMAC3 ns1__getCarInfo_USCOREFC * SOAP_FMAC4 soap_in_ns1__getCarInfo_USCOREFC(struct soap*, const char*, ns1__getCarInfo_USCOREFC *, const char*);

#ifndef soap_write_ns1__getCarInfo_USCOREFC
#define soap_write_ns1__getCarInfo_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:getCarInfo_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__getCarInfo_USCOREFC * SOAP_FMAC4 soap_get_ns1__getCarInfo_USCOREFC(struct soap*, ns1__getCarInfo_USCOREFC *, const char*, const char*);

#ifndef soap_read_ns1__getCarInfo_USCOREFC
#define soap_read_ns1__getCarInfo_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getCarInfo_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__getCarInfo_USCOREFC * SOAP_FMAC2 soap_instantiate_ns1__getCarInfo_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline ns1__getCarInfo_USCOREFC * soap_new_ns1__getCarInfo_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getCarInfo_USCOREFC(soap, n, NULL, NULL, NULL); }

inline ns1__getCarInfo_USCOREFC * soap_new_req_ns1__getCarInfo_USCOREFC(struct soap *soap) { ns1__getCarInfo_USCOREFC *_p = soap_instantiate_ns1__getCarInfo_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__getCarInfo_USCOREFC * soap_new_set_ns1__getCarInfo_USCOREFC(struct soap *soap, std::wstring *businessId, std::wstring *registCode) { ns1__getCarInfo_USCOREFC *_p = soap_instantiate_ns1__getCarInfo_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__getCarInfo_USCOREFC::businessId = businessId; _p->ns1__getCarInfo_USCOREFC::registCode = registCode; } return _p; }

inline void soap_delete_ns1__getCarInfo_USCOREFC(struct soap *soap, ns1__getCarInfo_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getCarInfo_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__obdResultLogResponse
#define SOAP_TYPE_ns1__obdResultLogResponse (40)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__obdResultLogResponse(struct soap*, const char*, int, const ns1__obdResultLogResponse *, const char*);
SOAP_FMAC3 ns1__obdResultLogResponse * SOAP_FMAC4 soap_in_ns1__obdResultLogResponse(struct soap*, const char*, ns1__obdResultLogResponse *, const char*);

#ifndef soap_write_ns1__obdResultLogResponse
#define soap_write_ns1__obdResultLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:obdResultLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__obdResultLogResponse * SOAP_FMAC4 soap_get_ns1__obdResultLogResponse(struct soap*, ns1__obdResultLogResponse *, const char*, const char*);

#ifndef soap_read_ns1__obdResultLogResponse
#define soap_read_ns1__obdResultLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__obdResultLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__obdResultLogResponse * SOAP_FMAC2 soap_instantiate_ns1__obdResultLogResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__obdResultLogResponse * soap_new_ns1__obdResultLogResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__obdResultLogResponse(soap, n, NULL, NULL, NULL); }

inline ns1__obdResultLogResponse * soap_new_req_ns1__obdResultLogResponse(struct soap *soap, bool return_) { ns1__obdResultLogResponse *_p = soap_instantiate_ns1__obdResultLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__obdResultLogResponse::return_ = return_; } return _p; }

inline ns1__obdResultLogResponse * soap_new_set_ns1__obdResultLogResponse(struct soap *soap, bool return_) { ns1__obdResultLogResponse *_p = soap_instantiate_ns1__obdResultLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__obdResultLogResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__obdResultLogResponse(struct soap *soap, ns1__obdResultLogResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__obdResultLogResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__obdResultLog
#define SOAP_TYPE_ns1__obdResultLog (39)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__obdResultLog(struct soap*, const char*, int, const ns1__obdResultLog *, const char*);
SOAP_FMAC3 ns1__obdResultLog * SOAP_FMAC4 soap_in_ns1__obdResultLog(struct soap*, const char*, ns1__obdResultLog *, const char*);

#ifndef soap_write_ns1__obdResultLog
#define soap_write_ns1__obdResultLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:obdResultLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__obdResultLog * SOAP_FMAC4 soap_get_ns1__obdResultLog(struct soap*, ns1__obdResultLog *, const char*, const char*);

#ifndef soap_read_ns1__obdResultLog
#define soap_read_ns1__obdResultLog(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__obdResultLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__obdResultLog * SOAP_FMAC2 soap_instantiate_ns1__obdResultLog(struct soap*, int, const char*, const char*, size_t*);

inline ns1__obdResultLog * soap_new_ns1__obdResultLog(struct soap *soap, int n = -1) { return soap_instantiate_ns1__obdResultLog(soap, n, NULL, NULL, NULL); }

inline ns1__obdResultLog * soap_new_req_ns1__obdResultLog(struct soap *soap, double jqmjdkd, double fhz, double lambdaValue, double ymkd, double fdjscgl, double zyyl, double hyl, double noxcgqnd, double Nspsl, double pqwd, double Klpjqyc, double Egrkd, double rypsyl, double cs, double zs, double jqyl) { ns1__obdResultLog *_p = soap_instantiate_ns1__obdResultLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__obdResultLog::jqmjdkd = jqmjdkd; _p->ns1__obdResultLog::fhz = fhz; _p->ns1__obdResultLog::lambdaValue = lambdaValue; _p->ns1__obdResultLog::ymkd = ymkd; _p->ns1__obdResultLog::fdjscgl = fdjscgl; _p->ns1__obdResultLog::zyyl = zyyl; _p->ns1__obdResultLog::hyl = hyl; _p->ns1__obdResultLog::noxcgqnd = noxcgqnd; _p->ns1__obdResultLog::Nspsl = Nspsl; _p->ns1__obdResultLog::pqwd = pqwd; _p->ns1__obdResultLog::Klpjqyc = Klpjqyc; _p->ns1__obdResultLog::Egrkd = Egrkd; _p->ns1__obdResultLog::rypsyl = rypsyl; _p->ns1__obdResultLog::cs = cs; _p->ns1__obdResultLog::zs = zs; _p->ns1__obdResultLog::jqyl = jqyl; } return _p; }

inline ns1__obdResultLog * soap_new_set_ns1__obdResultLog(struct soap *soap, std::wstring *registCode, std::wstring *businessId, std::wstring *calidfdjkzdy, std::wstring *calidhclkddy, std::wstring *calidqtkzdy, std::wstring *cvnfdjkzdy, std::wstring *cvnhclkddy, std::wstring *cvnqtkzdy, double jqmjdkd, double fhz, double lambdaValue, double ymkd, double fdjscgl, double zyyl, double hyl, double noxcgqnd, double Nspsl, double pqwd, double Klpjqyc, double Egrkd, double rypsyl, double cs, double zs, double jqyl, std::wstring *fuelType, std::wstring *checkTime, std::wstring *remark) { ns1__obdResultLog *_p = soap_instantiate_ns1__obdResultLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__obdResultLog::registCode = registCode; _p->ns1__obdResultLog::businessId = businessId; _p->ns1__obdResultLog::calidfdjkzdy = calidfdjkzdy; _p->ns1__obdResultLog::calidhclkddy = calidhclkddy; _p->ns1__obdResultLog::calidqtkzdy = calidqtkzdy; _p->ns1__obdResultLog::cvnfdjkzdy = cvnfdjkzdy; _p->ns1__obdResultLog::cvnhclkddy = cvnhclkddy; _p->ns1__obdResultLog::cvnqtkzdy = cvnqtkzdy; _p->ns1__obdResultLog::jqmjdkd = jqmjdkd; _p->ns1__obdResultLog::fhz = fhz; _p->ns1__obdResultLog::lambdaValue = lambdaValue; _p->ns1__obdResultLog::ymkd = ymkd; _p->ns1__obdResultLog::fdjscgl = fdjscgl; _p->ns1__obdResultLog::zyyl = zyyl; _p->ns1__obdResultLog::hyl = hyl; _p->ns1__obdResultLog::noxcgqnd = noxcgqnd; _p->ns1__obdResultLog::Nspsl = Nspsl; _p->ns1__obdResultLog::pqwd = pqwd; _p->ns1__obdResultLog::Klpjqyc = Klpjqyc; _p->ns1__obdResultLog::Egrkd = Egrkd; _p->ns1__obdResultLog::rypsyl = rypsyl; _p->ns1__obdResultLog::cs = cs; _p->ns1__obdResultLog::zs = zs; _p->ns1__obdResultLog::jqyl = jqyl; _p->ns1__obdResultLog::fuelType = fuelType; _p->ns1__obdResultLog::checkTime = checkTime; _p->ns1__obdResultLog::remark = remark; } return _p; }

inline void soap_delete_ns1__obdResultLog(struct soap *soap, ns1__obdResultLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__obdResultLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__dyhwAdjustResponse
#define SOAP_TYPE_ns1__dyhwAdjustResponse (38)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__dyhwAdjustResponse(struct soap*, const char*, int, const ns1__dyhwAdjustResponse *, const char*);
SOAP_FMAC3 ns1__dyhwAdjustResponse * SOAP_FMAC4 soap_in_ns1__dyhwAdjustResponse(struct soap*, const char*, ns1__dyhwAdjustResponse *, const char*);

#ifndef soap_write_ns1__dyhwAdjustResponse
#define soap_write_ns1__dyhwAdjustResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:dyhwAdjustResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__dyhwAdjustResponse * SOAP_FMAC4 soap_get_ns1__dyhwAdjustResponse(struct soap*, ns1__dyhwAdjustResponse *, const char*, const char*);

#ifndef soap_read_ns1__dyhwAdjustResponse
#define soap_read_ns1__dyhwAdjustResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__dyhwAdjustResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__dyhwAdjustResponse * SOAP_FMAC2 soap_instantiate_ns1__dyhwAdjustResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__dyhwAdjustResponse * soap_new_ns1__dyhwAdjustResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__dyhwAdjustResponse(soap, n, NULL, NULL, NULL); }

inline ns1__dyhwAdjustResponse * soap_new_req_ns1__dyhwAdjustResponse(struct soap *soap, bool return_) { ns1__dyhwAdjustResponse *_p = soap_instantiate_ns1__dyhwAdjustResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__dyhwAdjustResponse::return_ = return_; } return _p; }

inline ns1__dyhwAdjustResponse * soap_new_set_ns1__dyhwAdjustResponse(struct soap *soap, bool return_) { ns1__dyhwAdjustResponse *_p = soap_instantiate_ns1__dyhwAdjustResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__dyhwAdjustResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__dyhwAdjustResponse(struct soap *soap, ns1__dyhwAdjustResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__dyhwAdjustResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__dyhwAdjust
#define SOAP_TYPE_ns1__dyhwAdjust (37)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__dyhwAdjust(struct soap*, const char*, int, const ns1__dyhwAdjust *, const char*);
SOAP_FMAC3 ns1__dyhwAdjust * SOAP_FMAC4 soap_in_ns1__dyhwAdjust(struct soap*, const char*, ns1__dyhwAdjust *, const char*);

#ifndef soap_write_ns1__dyhwAdjust
#define soap_write_ns1__dyhwAdjust(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:dyhwAdjust", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__dyhwAdjust * SOAP_FMAC4 soap_get_ns1__dyhwAdjust(struct soap*, ns1__dyhwAdjust *, const char*, const char*);

#ifndef soap_read_ns1__dyhwAdjust
#define soap_read_ns1__dyhwAdjust(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__dyhwAdjust(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__dyhwAdjust * SOAP_FMAC2 soap_instantiate_ns1__dyhwAdjust(struct soap*, int, const char*, const char*, size_t*);

inline ns1__dyhwAdjust * soap_new_ns1__dyhwAdjust(struct soap *soap, int n = -1) { return soap_instantiate_ns1__dyhwAdjust(soap, n, NULL, NULL, NULL); }

inline ns1__dyhwAdjust * soap_new_req_ns1__dyhwAdjust(struct soap *soap, double labelValueNO, double detectValueNO, double labelValueNO2, double detectValueNO2) { ns1__dyhwAdjust *_p = soap_instantiate_ns1__dyhwAdjust(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__dyhwAdjust::labelValueNO = labelValueNO; _p->ns1__dyhwAdjust::detectValueNO = detectValueNO; _p->ns1__dyhwAdjust::labelValueNO2 = labelValueNO2; _p->ns1__dyhwAdjust::detectValueNO2 = detectValueNO2; } return _p; }

inline ns1__dyhwAdjust * soap_new_set_ns1__dyhwAdjust(struct soap *soap, std::wstring *registCode, std::wstring *gasType, double labelValueNO, double detectValueNO, double labelValueNO2, double detectValueNO2, std::wstring *adjustResult, std::wstring *adjustTimeStart, std::wstring *adjustTimeEnd, std::wstring *remark) { ns1__dyhwAdjust *_p = soap_instantiate_ns1__dyhwAdjust(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__dyhwAdjust::registCode = registCode; _p->ns1__dyhwAdjust::gasType = gasType; _p->ns1__dyhwAdjust::labelValueNO = labelValueNO; _p->ns1__dyhwAdjust::detectValueNO = detectValueNO; _p->ns1__dyhwAdjust::labelValueNO2 = labelValueNO2; _p->ns1__dyhwAdjust::detectValueNO2 = detectValueNO2; _p->ns1__dyhwAdjust::adjustResult = adjustResult; _p->ns1__dyhwAdjust::adjustTimeStart = adjustTimeStart; _p->ns1__dyhwAdjust::adjustTimeEnd = adjustTimeEnd; _p->ns1__dyhwAdjust::remark = remark; } return _p; }

inline void soap_delete_ns1__dyhwAdjust(struct soap *soap, ns1__dyhwAdjust *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__dyhwAdjust(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__loadDownLogResponse
#define SOAP_TYPE_ns1__loadDownLogResponse (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__loadDownLogResponse(struct soap*, const char*, int, const ns1__loadDownLogResponse *, const char*);
SOAP_FMAC3 ns1__loadDownLogResponse * SOAP_FMAC4 soap_in_ns1__loadDownLogResponse(struct soap*, const char*, ns1__loadDownLogResponse *, const char*);

#ifndef soap_write_ns1__loadDownLogResponse
#define soap_write_ns1__loadDownLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:loadDownLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__loadDownLogResponse * SOAP_FMAC4 soap_get_ns1__loadDownLogResponse(struct soap*, ns1__loadDownLogResponse *, const char*, const char*);

#ifndef soap_read_ns1__loadDownLogResponse
#define soap_read_ns1__loadDownLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__loadDownLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__loadDownLogResponse * SOAP_FMAC2 soap_instantiate_ns1__loadDownLogResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__loadDownLogResponse * soap_new_ns1__loadDownLogResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__loadDownLogResponse(soap, n, NULL, NULL, NULL); }

inline ns1__loadDownLogResponse * soap_new_req_ns1__loadDownLogResponse(struct soap *soap, bool return_) { ns1__loadDownLogResponse *_p = soap_instantiate_ns1__loadDownLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__loadDownLogResponse::return_ = return_; } return _p; }

inline ns1__loadDownLogResponse * soap_new_set_ns1__loadDownLogResponse(struct soap *soap, bool return_) { ns1__loadDownLogResponse *_p = soap_instantiate_ns1__loadDownLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__loadDownLogResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__loadDownLogResponse(struct soap *soap, ns1__loadDownLogResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__loadDownLogResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__loadDownLog
#define SOAP_TYPE_ns1__loadDownLog (35)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__loadDownLog(struct soap*, const char*, int, const ns1__loadDownLog *, const char*);
SOAP_FMAC3 ns1__loadDownLog * SOAP_FMAC4 soap_in_ns1__loadDownLog(struct soap*, const char*, ns1__loadDownLog *, const char*);

#ifndef soap_write_ns1__loadDownLog
#define soap_write_ns1__loadDownLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:loadDownLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__loadDownLog * SOAP_FMAC4 soap_get_ns1__loadDownLog(struct soap*, ns1__loadDownLog *, const char*, const char*);

#ifndef soap_read_ns1__loadDownLog
#define soap_read_ns1__loadDownLog(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__loadDownLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__loadDownLog * SOAP_FMAC2 soap_instantiate_ns1__loadDownLog(struct soap*, int, const char*, const char*, size_t*);

inline ns1__loadDownLog * soap_new_ns1__loadDownLog(struct soap *soap, int n = -1) { return soap_instantiate_ns1__loadDownLog(soap, n, NULL, NULL, NULL); }

inline ns1__loadDownLog * soap_new_req_ns1__loadDownLog(struct soap *soap, int inspectNum, double calVelMaxHp, double actVelMaxHp, double powerPerSec, double speedPerSec, double actMaxPower, double rotateSpeed, double envirTemperature, double envirAirPressure, double envirHumidity, double powerCorrect, double corMaxPower, double smokeK100, double smokeK90, double smokeK80, double speedK100, double speedK90, double speedK80, double NO80, double NO280, double CO280, double NOX80, double ydjjcswd, double qtfxyjcswd, double zhlwd, double ydjjcsqy) { ns1__loadDownLog *_p = soap_instantiate_ns1__loadDownLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__loadDownLog::inspectNum = inspectNum; _p->ns1__loadDownLog::calVelMaxHp = calVelMaxHp; _p->ns1__loadDownLog::actVelMaxHp = actVelMaxHp; _p->ns1__loadDownLog::powerPerSec = powerPerSec; _p->ns1__loadDownLog::speedPerSec = speedPerSec; _p->ns1__loadDownLog::actMaxPower = actMaxPower; _p->ns1__loadDownLog::rotateSpeed = rotateSpeed; _p->ns1__loadDownLog::envirTemperature = envirTemperature; _p->ns1__loadDownLog::envirAirPressure = envirAirPressure; _p->ns1__loadDownLog::envirHumidity = envirHumidity; _p->ns1__loadDownLog::powerCorrect = powerCorrect; _p->ns1__loadDownLog::corMaxPower = corMaxPower; _p->ns1__loadDownLog::smokeK100 = smokeK100; _p->ns1__loadDownLog::smokeK90 = smokeK90; _p->ns1__loadDownLog::smokeK80 = smokeK80; _p->ns1__loadDownLog::speedK100 = speedK100; _p->ns1__loadDownLog::speedK90 = speedK90; _p->ns1__loadDownLog::speedK80 = speedK80; _p->ns1__loadDownLog::NO80 = NO80; _p->ns1__loadDownLog::NO280 = NO280; _p->ns1__loadDownLog::CO280 = CO280; _p->ns1__loadDownLog::NOX80 = NOX80; _p->ns1__loadDownLog::ydjjcswd = ydjjcswd; _p->ns1__loadDownLog::qtfxyjcswd = qtfxyjcswd; _p->ns1__loadDownLog::zhlwd = zhlwd; _p->ns1__loadDownLog::ydjjcsqy = ydjjcsqy; } return _p; }

inline ns1__loadDownLog * soap_new_set_ns1__loadDownLog(struct soap *soap, std::wstring *businessId, std::wstring *registCode, int inspectNum, double calVelMaxHp, double actVelMaxHp, double powerPerSec, double speedPerSec, double actMaxPower, double rotateSpeed, double envirTemperature, double envirAirPressure, double envirHumidity, double powerCorrect, double corMaxPower, double smokeK100, double smokeK90, double smokeK80, double speedK100, double speedK90, double speedK80, double NO80, double NO280, double CO280, double NOX80, double ydjjcswd, double qtfxyjcswd, double zhlwd, double ydjjcsqy) { ns1__loadDownLog *_p = soap_instantiate_ns1__loadDownLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__loadDownLog::businessId = businessId; _p->ns1__loadDownLog::registCode = registCode; _p->ns1__loadDownLog::inspectNum = inspectNum; _p->ns1__loadDownLog::calVelMaxHp = calVelMaxHp; _p->ns1__loadDownLog::actVelMaxHp = actVelMaxHp; _p->ns1__loadDownLog::powerPerSec = powerPerSec; _p->ns1__loadDownLog::speedPerSec = speedPerSec; _p->ns1__loadDownLog::actMaxPower = actMaxPower; _p->ns1__loadDownLog::rotateSpeed = rotateSpeed; _p->ns1__loadDownLog::envirTemperature = envirTemperature; _p->ns1__loadDownLog::envirAirPressure = envirAirPressure; _p->ns1__loadDownLog::envirHumidity = envirHumidity; _p->ns1__loadDownLog::powerCorrect = powerCorrect; _p->ns1__loadDownLog::corMaxPower = corMaxPower; _p->ns1__loadDownLog::smokeK100 = smokeK100; _p->ns1__loadDownLog::smokeK90 = smokeK90; _p->ns1__loadDownLog::smokeK80 = smokeK80; _p->ns1__loadDownLog::speedK100 = speedK100; _p->ns1__loadDownLog::speedK90 = speedK90; _p->ns1__loadDownLog::speedK80 = speedK80; _p->ns1__loadDownLog::NO80 = NO80; _p->ns1__loadDownLog::NO280 = NO280; _p->ns1__loadDownLog::CO280 = CO280; _p->ns1__loadDownLog::NOX80 = NOX80; _p->ns1__loadDownLog::ydjjcswd = ydjjcswd; _p->ns1__loadDownLog::qtfxyjcswd = qtfxyjcswd; _p->ns1__loadDownLog::zhlwd = zhlwd; _p->ns1__loadDownLog::ydjjcsqy = ydjjcsqy; } return _p; }

inline void soap_delete_ns1__loadDownLog(struct soap *soap, ns1__loadDownLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__loadDownLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__dyhwSelfcheckResponse
#define SOAP_TYPE_ns1__dyhwSelfcheckResponse (34)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__dyhwSelfcheckResponse(struct soap*, const char*, int, const ns1__dyhwSelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__dyhwSelfcheckResponse * SOAP_FMAC4 soap_in_ns1__dyhwSelfcheckResponse(struct soap*, const char*, ns1__dyhwSelfcheckResponse *, const char*);

#ifndef soap_write_ns1__dyhwSelfcheckResponse
#define soap_write_ns1__dyhwSelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:dyhwSelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__dyhwSelfcheckResponse * SOAP_FMAC4 soap_get_ns1__dyhwSelfcheckResponse(struct soap*, ns1__dyhwSelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__dyhwSelfcheckResponse
#define soap_read_ns1__dyhwSelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__dyhwSelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__dyhwSelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__dyhwSelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__dyhwSelfcheckResponse * soap_new_ns1__dyhwSelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__dyhwSelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__dyhwSelfcheckResponse * soap_new_req_ns1__dyhwSelfcheckResponse(struct soap *soap, bool return_) { ns1__dyhwSelfcheckResponse *_p = soap_instantiate_ns1__dyhwSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__dyhwSelfcheckResponse::return_ = return_; } return _p; }

inline ns1__dyhwSelfcheckResponse * soap_new_set_ns1__dyhwSelfcheckResponse(struct soap *soap, bool return_) { ns1__dyhwSelfcheckResponse *_p = soap_instantiate_ns1__dyhwSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__dyhwSelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__dyhwSelfcheckResponse(struct soap *soap, ns1__dyhwSelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__dyhwSelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__dyhwSelfcheck
#define SOAP_TYPE_ns1__dyhwSelfcheck (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__dyhwSelfcheck(struct soap*, const char*, int, const ns1__dyhwSelfcheck *, const char*);
SOAP_FMAC3 ns1__dyhwSelfcheck * SOAP_FMAC4 soap_in_ns1__dyhwSelfcheck(struct soap*, const char*, ns1__dyhwSelfcheck *, const char*);

#ifndef soap_write_ns1__dyhwSelfcheck
#define soap_write_ns1__dyhwSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:dyhwSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__dyhwSelfcheck * SOAP_FMAC4 soap_get_ns1__dyhwSelfcheck(struct soap*, ns1__dyhwSelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__dyhwSelfcheck
#define soap_read_ns1__dyhwSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__dyhwSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__dyhwSelfcheck * SOAP_FMAC2 soap_instantiate_ns1__dyhwSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__dyhwSelfcheck * soap_new_ns1__dyhwSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__dyhwSelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__dyhwSelfcheck * soap_new_req_ns1__dyhwSelfcheck(struct soap *soap) { ns1__dyhwSelfcheck *_p = soap_instantiate_ns1__dyhwSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__dyhwSelfcheck * soap_new_set_ns1__dyhwSelfcheck(struct soap *soap, std::wstring *registCode, std::wstring *checkResult, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__dyhwSelfcheck *_p = soap_instantiate_ns1__dyhwSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__dyhwSelfcheck::registCode = registCode; _p->ns1__dyhwSelfcheck::checkResult = checkResult; _p->ns1__dyhwSelfcheck::checkTimeStart = checkTimeStart; _p->ns1__dyhwSelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__dyhwSelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__dyhwSelfcheck(struct soap *soap, ns1__dyhwSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__dyhwSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ydjSelfcheckResponse
#define SOAP_TYPE_ns1__ydjSelfcheckResponse (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ydjSelfcheckResponse(struct soap*, const char*, int, const ns1__ydjSelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__ydjSelfcheckResponse * SOAP_FMAC4 soap_in_ns1__ydjSelfcheckResponse(struct soap*, const char*, ns1__ydjSelfcheckResponse *, const char*);

#ifndef soap_write_ns1__ydjSelfcheckResponse
#define soap_write_ns1__ydjSelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:ydjSelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ydjSelfcheckResponse * SOAP_FMAC4 soap_get_ns1__ydjSelfcheckResponse(struct soap*, ns1__ydjSelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__ydjSelfcheckResponse
#define soap_read_ns1__ydjSelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ydjSelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__ydjSelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__ydjSelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ydjSelfcheckResponse * soap_new_ns1__ydjSelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__ydjSelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__ydjSelfcheckResponse * soap_new_req_ns1__ydjSelfcheckResponse(struct soap *soap, bool return_) { ns1__ydjSelfcheckResponse *_p = soap_instantiate_ns1__ydjSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ydjSelfcheckResponse::return_ = return_; } return _p; }

inline ns1__ydjSelfcheckResponse * soap_new_set_ns1__ydjSelfcheckResponse(struct soap *soap, bool return_) { ns1__ydjSelfcheckResponse *_p = soap_instantiate_ns1__ydjSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ydjSelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__ydjSelfcheckResponse(struct soap *soap, ns1__ydjSelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ydjSelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ydjSelfcheck
#define SOAP_TYPE_ns1__ydjSelfcheck (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ydjSelfcheck(struct soap*, const char*, int, const ns1__ydjSelfcheck *, const char*);
SOAP_FMAC3 ns1__ydjSelfcheck * SOAP_FMAC4 soap_in_ns1__ydjSelfcheck(struct soap*, const char*, ns1__ydjSelfcheck *, const char*);

#ifndef soap_write_ns1__ydjSelfcheck
#define soap_write_ns1__ydjSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:ydjSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ydjSelfcheck * SOAP_FMAC4 soap_get_ns1__ydjSelfcheck(struct soap*, ns1__ydjSelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__ydjSelfcheck
#define soap_read_ns1__ydjSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ydjSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__ydjSelfcheck * SOAP_FMAC2 soap_instantiate_ns1__ydjSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__ydjSelfcheck * soap_new_ns1__ydjSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__ydjSelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__ydjSelfcheck * soap_new_req_ns1__ydjSelfcheck(struct soap *soap, double labelValueN30, double labelValueN50, double N30, double N50, double error30, double error50) { ns1__ydjSelfcheck *_p = soap_instantiate_ns1__ydjSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ydjSelfcheck::labelValueN30 = labelValueN30; _p->ns1__ydjSelfcheck::labelValueN50 = labelValueN50; _p->ns1__ydjSelfcheck::N30 = N30; _p->ns1__ydjSelfcheck::N50 = N50; _p->ns1__ydjSelfcheck::error30 = error30; _p->ns1__ydjSelfcheck::error50 = error50; } return _p; }

inline ns1__ydjSelfcheck * soap_new_set_ns1__ydjSelfcheck(struct soap *soap, std::wstring *registCode, std::wstring *zeroResult, double labelValueN30, double labelValueN50, double N30, double N50, double error30, double error50, std::wstring *checkResult, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__ydjSelfcheck *_p = soap_instantiate_ns1__ydjSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__ydjSelfcheck::registCode = registCode; _p->ns1__ydjSelfcheck::zeroResult = zeroResult; _p->ns1__ydjSelfcheck::labelValueN30 = labelValueN30; _p->ns1__ydjSelfcheck::labelValueN50 = labelValueN50; _p->ns1__ydjSelfcheck::N30 = N30; _p->ns1__ydjSelfcheck::N50 = N50; _p->ns1__ydjSelfcheck::error30 = error30; _p->ns1__ydjSelfcheck::error50 = error50; _p->ns1__ydjSelfcheck::checkResult = checkResult; _p->ns1__ydjSelfcheck::checkTimeStart = checkTimeStart; _p->ns1__ydjSelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__ydjSelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__ydjSelfcheck(struct soap *soap, ns1__ydjSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ydjSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__vmasLogResponse
#define SOAP_TYPE_ns1__vmasLogResponse (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__vmasLogResponse(struct soap*, const char*, int, const ns1__vmasLogResponse *, const char*);
SOAP_FMAC3 ns1__vmasLogResponse * SOAP_FMAC4 soap_in_ns1__vmasLogResponse(struct soap*, const char*, ns1__vmasLogResponse *, const char*);

#ifndef soap_write_ns1__vmasLogResponse
#define soap_write_ns1__vmasLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:vmasLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__vmasLogResponse * SOAP_FMAC4 soap_get_ns1__vmasLogResponse(struct soap*, ns1__vmasLogResponse *, const char*, const char*);

#ifndef soap_read_ns1__vmasLogResponse
#define soap_read_ns1__vmasLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__vmasLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__vmasLogResponse * SOAP_FMAC2 soap_instantiate_ns1__vmasLogResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__vmasLogResponse * soap_new_ns1__vmasLogResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__vmasLogResponse(soap, n, NULL, NULL, NULL); }

inline ns1__vmasLogResponse * soap_new_req_ns1__vmasLogResponse(struct soap *soap, bool return_) { ns1__vmasLogResponse *_p = soap_instantiate_ns1__vmasLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__vmasLogResponse::return_ = return_; } return _p; }

inline ns1__vmasLogResponse * soap_new_set_ns1__vmasLogResponse(struct soap *soap, bool return_) { ns1__vmasLogResponse *_p = soap_instantiate_ns1__vmasLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__vmasLogResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__vmasLogResponse(struct soap *soap, ns1__vmasLogResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__vmasLogResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__vmasLog
#define SOAP_TYPE_ns1__vmasLog (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__vmasLog(struct soap*, const char*, int, const ns1__vmasLog *, const char*);
SOAP_FMAC3 ns1__vmasLog * SOAP_FMAC4 soap_in_ns1__vmasLog(struct soap*, const char*, ns1__vmasLog *, const char*);

#ifndef soap_write_ns1__vmasLog
#define soap_write_ns1__vmasLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:vmasLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__vmasLog * SOAP_FMAC4 soap_get_ns1__vmasLog(struct soap*, ns1__vmasLog *, const char*, const char*);

#ifndef soap_read_ns1__vmasLog
#define soap_read_ns1__vmasLog(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__vmasLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__vmasLog * SOAP_FMAC2 soap_instantiate_ns1__vmasLog(struct soap*, int, const char*, const char*, size_t*);

inline ns1__vmasLog * soap_new_ns1__vmasLog(struct soap *soap, int n = -1) { return soap_instantiate_ns1__vmasLog(soap, n, NULL, NULL, NULL); }

inline ns1__vmasLog * soap_new_req_ns1__vmasLog(struct soap *soap, int inspectNum, double flowHC, double flowCO, double flowCO2, double flowNO, double analyserO2, double flowmeterO2, double envO2, double actFlow, double stdFlow, double tailFlow, double weightHC, double weightCO, double weightNO, double lineSpeed, double totalPower, double parasPower, double indicPower, double flowAirPressure, double flowTemperature, double envirTemperature, double envirAirPressure, double envirHumidity, double diluteCorrect, double humidityCorrect, double diluteRatio, double lambdaValue, double qtfxyjcswd, double zhlwd, double weightNO1, double weightNO2) { ns1__vmasLog *_p = soap_instantiate_ns1__vmasLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__vmasLog::inspectNum = inspectNum; _p->ns1__vmasLog::flowHC = flowHC; _p->ns1__vmasLog::flowCO = flowCO; _p->ns1__vmasLog::flowCO2 = flowCO2; _p->ns1__vmasLog::flowNO = flowNO; _p->ns1__vmasLog::analyserO2 = analyserO2; _p->ns1__vmasLog::flowmeterO2 = flowmeterO2; _p->ns1__vmasLog::envO2 = envO2; _p->ns1__vmasLog::actFlow = actFlow; _p->ns1__vmasLog::stdFlow = stdFlow; _p->ns1__vmasLog::tailFlow = tailFlow; _p->ns1__vmasLog::weightHC = weightHC; _p->ns1__vmasLog::weightCO = weightCO; _p->ns1__vmasLog::weightNO = weightNO; _p->ns1__vmasLog::lineSpeed = lineSpeed; _p->ns1__vmasLog::totalPower = totalPower; _p->ns1__vmasLog::parasPower = parasPower; _p->ns1__vmasLog::indicPower = indicPower; _p->ns1__vmasLog::flowAirPressure = flowAirPressure; _p->ns1__vmasLog::flowTemperature = flowTemperature; _p->ns1__vmasLog::envirTemperature = envirTemperature; _p->ns1__vmasLog::envirAirPressure = envirAirPressure; _p->ns1__vmasLog::envirHumidity = envirHumidity; _p->ns1__vmasLog::diluteCorrect = diluteCorrect; _p->ns1__vmasLog::humidityCorrect = humidityCorrect; _p->ns1__vmasLog::diluteRatio = diluteRatio; _p->ns1__vmasLog::lambdaValue = lambdaValue; _p->ns1__vmasLog::qtfxyjcswd = qtfxyjcswd; _p->ns1__vmasLog::zhlwd = zhlwd; _p->ns1__vmasLog::weightNO1 = weightNO1; _p->ns1__vmasLog::weightNO2 = weightNO2; } return _p; }

inline ns1__vmasLog * soap_new_set_ns1__vmasLog(struct soap *soap, std::wstring *businessId, std::wstring *registCode, int inspectNum, double flowHC, double flowCO, double flowCO2, double flowNO, double analyserO2, double flowmeterO2, double envO2, double actFlow, double stdFlow, double tailFlow, double weightHC, double weightCO, double weightNO, double lineSpeed, double totalPower, double parasPower, double indicPower, double flowAirPressure, double flowTemperature, double envirTemperature, double envirAirPressure, double envirHumidity, double diluteCorrect, double humidityCorrect, double diluteRatio, double lambdaValue, double qtfxyjcswd, double zhlwd, double weightNO1, double weightNO2) { ns1__vmasLog *_p = soap_instantiate_ns1__vmasLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__vmasLog::businessId = businessId; _p->ns1__vmasLog::registCode = registCode; _p->ns1__vmasLog::inspectNum = inspectNum; _p->ns1__vmasLog::flowHC = flowHC; _p->ns1__vmasLog::flowCO = flowCO; _p->ns1__vmasLog::flowCO2 = flowCO2; _p->ns1__vmasLog::flowNO = flowNO; _p->ns1__vmasLog::analyserO2 = analyserO2; _p->ns1__vmasLog::flowmeterO2 = flowmeterO2; _p->ns1__vmasLog::envO2 = envO2; _p->ns1__vmasLog::actFlow = actFlow; _p->ns1__vmasLog::stdFlow = stdFlow; _p->ns1__vmasLog::tailFlow = tailFlow; _p->ns1__vmasLog::weightHC = weightHC; _p->ns1__vmasLog::weightCO = weightCO; _p->ns1__vmasLog::weightNO = weightNO; _p->ns1__vmasLog::lineSpeed = lineSpeed; _p->ns1__vmasLog::totalPower = totalPower; _p->ns1__vmasLog::parasPower = parasPower; _p->ns1__vmasLog::indicPower = indicPower; _p->ns1__vmasLog::flowAirPressure = flowAirPressure; _p->ns1__vmasLog::flowTemperature = flowTemperature; _p->ns1__vmasLog::envirTemperature = envirTemperature; _p->ns1__vmasLog::envirAirPressure = envirAirPressure; _p->ns1__vmasLog::envirHumidity = envirHumidity; _p->ns1__vmasLog::diluteCorrect = diluteCorrect; _p->ns1__vmasLog::humidityCorrect = humidityCorrect; _p->ns1__vmasLog::diluteRatio = diluteRatio; _p->ns1__vmasLog::lambdaValue = lambdaValue; _p->ns1__vmasLog::qtfxyjcswd = qtfxyjcswd; _p->ns1__vmasLog::zhlwd = zhlwd; _p->ns1__vmasLog::weightNO1 = weightNO1; _p->ns1__vmasLog::weightNO2 = weightNO2; } return _p; }

inline void soap_delete_ns1__vmasLog(struct soap *soap, ns1__vmasLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__vmasLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__doubleIdleLogResponse
#define SOAP_TYPE_ns1__doubleIdleLogResponse (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__doubleIdleLogResponse(struct soap*, const char*, int, const ns1__doubleIdleLogResponse *, const char*);
SOAP_FMAC3 ns1__doubleIdleLogResponse * SOAP_FMAC4 soap_in_ns1__doubleIdleLogResponse(struct soap*, const char*, ns1__doubleIdleLogResponse *, const char*);

#ifndef soap_write_ns1__doubleIdleLogResponse
#define soap_write_ns1__doubleIdleLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:doubleIdleLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__doubleIdleLogResponse * SOAP_FMAC4 soap_get_ns1__doubleIdleLogResponse(struct soap*, ns1__doubleIdleLogResponse *, const char*, const char*);

#ifndef soap_read_ns1__doubleIdleLogResponse
#define soap_read_ns1__doubleIdleLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__doubleIdleLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__doubleIdleLogResponse * SOAP_FMAC2 soap_instantiate_ns1__doubleIdleLogResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__doubleIdleLogResponse * soap_new_ns1__doubleIdleLogResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__doubleIdleLogResponse(soap, n, NULL, NULL, NULL); }

inline ns1__doubleIdleLogResponse * soap_new_req_ns1__doubleIdleLogResponse(struct soap *soap, bool return_) { ns1__doubleIdleLogResponse *_p = soap_instantiate_ns1__doubleIdleLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__doubleIdleLogResponse::return_ = return_; } return _p; }

inline ns1__doubleIdleLogResponse * soap_new_set_ns1__doubleIdleLogResponse(struct soap *soap, bool return_) { ns1__doubleIdleLogResponse *_p = soap_instantiate_ns1__doubleIdleLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__doubleIdleLogResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__doubleIdleLogResponse(struct soap *soap, ns1__doubleIdleLogResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__doubleIdleLogResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__doubleIdleLog_USCOREFC
#define SOAP_TYPE_ns1__doubleIdleLog_USCOREFC (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__doubleIdleLog_USCOREFC(struct soap*, const char*, int, const ns1__doubleIdleLog_USCOREFC *, const char*);
SOAP_FMAC3 ns1__doubleIdleLog_USCOREFC * SOAP_FMAC4 soap_in_ns1__doubleIdleLog_USCOREFC(struct soap*, const char*, ns1__doubleIdleLog_USCOREFC *, const char*);

#ifndef soap_write_ns1__doubleIdleLog_USCOREFC
#define soap_write_ns1__doubleIdleLog_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:doubleIdleLog_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__doubleIdleLog_USCOREFC * SOAP_FMAC4 soap_get_ns1__doubleIdleLog_USCOREFC(struct soap*, ns1__doubleIdleLog_USCOREFC *, const char*, const char*);

#ifndef soap_read_ns1__doubleIdleLog_USCOREFC
#define soap_read_ns1__doubleIdleLog_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__doubleIdleLog_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__doubleIdleLog_USCOREFC * SOAP_FMAC2 soap_instantiate_ns1__doubleIdleLog_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline ns1__doubleIdleLog_USCOREFC * soap_new_ns1__doubleIdleLog_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate_ns1__doubleIdleLog_USCOREFC(soap, n, NULL, NULL, NULL); }

inline ns1__doubleIdleLog_USCOREFC * soap_new_req_ns1__doubleIdleLog_USCOREFC(struct soap *soap, int inspectNum, double flowHC, double flowCO, double flowCO2, double analyserO2, double oilTemperature) { ns1__doubleIdleLog_USCOREFC *_p = soap_instantiate_ns1__doubleIdleLog_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__doubleIdleLog_USCOREFC::inspectNum = inspectNum; _p->ns1__doubleIdleLog_USCOREFC::flowHC = flowHC; _p->ns1__doubleIdleLog_USCOREFC::flowCO = flowCO; _p->ns1__doubleIdleLog_USCOREFC::flowCO2 = flowCO2; _p->ns1__doubleIdleLog_USCOREFC::analyserO2 = analyserO2; _p->ns1__doubleIdleLog_USCOREFC::oilTemperature = oilTemperature; } return _p; }

inline ns1__doubleIdleLog_USCOREFC * soap_new_set_ns1__doubleIdleLog_USCOREFC(struct soap *soap, std::wstring *businessId, std::wstring *registCode, int inspectNum, double flowHC, double flowCO, double flowCO2, double analyserO2, double oilTemperature, std::wstring *rotateSpeed) { ns1__doubleIdleLog_USCOREFC *_p = soap_instantiate_ns1__doubleIdleLog_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__doubleIdleLog_USCOREFC::businessId = businessId; _p->ns1__doubleIdleLog_USCOREFC::registCode = registCode; _p->ns1__doubleIdleLog_USCOREFC::inspectNum = inspectNum; _p->ns1__doubleIdleLog_USCOREFC::flowHC = flowHC; _p->ns1__doubleIdleLog_USCOREFC::flowCO = flowCO; _p->ns1__doubleIdleLog_USCOREFC::flowCO2 = flowCO2; _p->ns1__doubleIdleLog_USCOREFC::analyserO2 = analyserO2; _p->ns1__doubleIdleLog_USCOREFC::oilTemperature = oilTemperature; _p->ns1__doubleIdleLog_USCOREFC::rotateSpeed = rotateSpeed; } return _p; }

inline void soap_delete_ns1__doubleIdleLog_USCOREFC(struct soap *soap, ns1__doubleIdleLog_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__doubleIdleLog_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__obdResultResponse
#define SOAP_TYPE_ns1__obdResultResponse (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__obdResultResponse(struct soap*, const char*, int, const ns1__obdResultResponse *, const char*);
SOAP_FMAC3 ns1__obdResultResponse * SOAP_FMAC4 soap_in_ns1__obdResultResponse(struct soap*, const char*, ns1__obdResultResponse *, const char*);

#ifndef soap_write_ns1__obdResultResponse
#define soap_write_ns1__obdResultResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:obdResultResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__obdResultResponse * SOAP_FMAC4 soap_get_ns1__obdResultResponse(struct soap*, ns1__obdResultResponse *, const char*, const char*);

#ifndef soap_read_ns1__obdResultResponse
#define soap_read_ns1__obdResultResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__obdResultResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__obdResultResponse * SOAP_FMAC2 soap_instantiate_ns1__obdResultResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__obdResultResponse * soap_new_ns1__obdResultResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__obdResultResponse(soap, n, NULL, NULL, NULL); }

inline ns1__obdResultResponse * soap_new_req_ns1__obdResultResponse(struct soap *soap, bool return_) { ns1__obdResultResponse *_p = soap_instantiate_ns1__obdResultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__obdResultResponse::return_ = return_; } return _p; }

inline ns1__obdResultResponse * soap_new_set_ns1__obdResultResponse(struct soap *soap, bool return_) { ns1__obdResultResponse *_p = soap_instantiate_ns1__obdResultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__obdResultResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__obdResultResponse(struct soap *soap, ns1__obdResultResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__obdResultResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__obdResult
#define SOAP_TYPE_ns1__obdResult (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__obdResult(struct soap*, const char*, int, const ns1__obdResult *, const char*);
SOAP_FMAC3 ns1__obdResult * SOAP_FMAC4 soap_in_ns1__obdResult(struct soap*, const char*, ns1__obdResult *, const char*);

#ifndef soap_write_ns1__obdResult
#define soap_write_ns1__obdResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:obdResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__obdResult * SOAP_FMAC4 soap_get_ns1__obdResult(struct soap*, ns1__obdResult *, const char*, const char*);

#ifndef soap_read_ns1__obdResult
#define soap_read_ns1__obdResult(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__obdResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__obdResult * SOAP_FMAC2 soap_instantiate_ns1__obdResult(struct soap*, int, const char*, const char*, size_t*);

inline ns1__obdResult * soap_new_ns1__obdResult(struct soap *soap, int n = -1) { return soap_instantiate_ns1__obdResult(soap, n, NULL, NULL, NULL); }

inline ns1__obdResult * soap_new_req_ns1__obdResult(struct soap *soap) { ns1__obdResult *_p = soap_instantiate_ns1__obdResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__obdResult * soap_new_set_ns1__obdResult(struct soap *soap, std::wstring *businessId, std::wstring *registCode, std::wstring *result, std::wstring *checktime, std::wstring *obdgzzsq, std::wstring *objgztx, std::wstring *objgztxyy, std::wstring *objgzzsdsfbj, std::wstring *gzdm, std::wstring *gzxx, std::wstring *jxztsfwc, std::wstring *jxztwwcyy, std::wstring *qtxsgl, std::wstring *calidfdjkzdy, std::wstring *calidhclkddy, std::wstring *calidqtkzdy, std::wstring *cvnfdjkzdy, std::wstring *cvnhclkddy, std::wstring *cvnqtkzdy) { ns1__obdResult *_p = soap_instantiate_ns1__obdResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__obdResult::businessId = businessId; _p->ns1__obdResult::registCode = registCode; _p->ns1__obdResult::result = result; _p->ns1__obdResult::checktime = checktime; _p->ns1__obdResult::obdgzzsq = obdgzzsq; _p->ns1__obdResult::objgztx = objgztx; _p->ns1__obdResult::objgztxyy = objgztxyy; _p->ns1__obdResult::objgzzsdsfbj = objgzzsdsfbj; _p->ns1__obdResult::gzdm = gzdm; _p->ns1__obdResult::gzxx = gzxx; _p->ns1__obdResult::jxztsfwc = jxztsfwc; _p->ns1__obdResult::jxztwwcyy = jxztwwcyy; _p->ns1__obdResult::qtxsgl = qtxsgl; _p->ns1__obdResult::calidfdjkzdy = calidfdjkzdy; _p->ns1__obdResult::calidhclkddy = calidhclkddy; _p->ns1__obdResult::calidqtkzdy = calidqtkzdy; _p->ns1__obdResult::cvnfdjkzdy = cvnfdjkzdy; _p->ns1__obdResult::cvnhclkddy = cvnhclkddy; _p->ns1__obdResult::cvnqtkzdy = cvnqtkzdy; } return _p; }

inline void soap_delete_ns1__obdResult(struct soap *soap, ns1__obdResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__obdResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cgjSelfcheckResponse
#define SOAP_TYPE_ns1__cgjSelfcheckResponse (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cgjSelfcheckResponse(struct soap*, const char*, int, const ns1__cgjSelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__cgjSelfcheckResponse * SOAP_FMAC4 soap_in_ns1__cgjSelfcheckResponse(struct soap*, const char*, ns1__cgjSelfcheckResponse *, const char*);

#ifndef soap_write_ns1__cgjSelfcheckResponse
#define soap_write_ns1__cgjSelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:cgjSelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjSelfcheckResponse * SOAP_FMAC4 soap_get_ns1__cgjSelfcheckResponse(struct soap*, ns1__cgjSelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__cgjSelfcheckResponse
#define soap_read_ns1__cgjSelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cgjSelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__cgjSelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__cgjSelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__cgjSelfcheckResponse * soap_new_ns1__cgjSelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cgjSelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__cgjSelfcheckResponse * soap_new_req_ns1__cgjSelfcheckResponse(struct soap *soap, bool return_) { ns1__cgjSelfcheckResponse *_p = soap_instantiate_ns1__cgjSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjSelfcheckResponse::return_ = return_; } return _p; }

inline ns1__cgjSelfcheckResponse * soap_new_set_ns1__cgjSelfcheckResponse(struct soap *soap, bool return_) { ns1__cgjSelfcheckResponse *_p = soap_instantiate_ns1__cgjSelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjSelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__cgjSelfcheckResponse(struct soap *soap, ns1__cgjSelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cgjSelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cgjSelfcheck
#define SOAP_TYPE_ns1__cgjSelfcheck (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cgjSelfcheck(struct soap*, const char*, int, const ns1__cgjSelfcheck *, const char*);
SOAP_FMAC3 ns1__cgjSelfcheck * SOAP_FMAC4 soap_in_ns1__cgjSelfcheck(struct soap*, const char*, ns1__cgjSelfcheck *, const char*);

#ifndef soap_write_ns1__cgjSelfcheck
#define soap_write_ns1__cgjSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:cgjSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjSelfcheck * SOAP_FMAC4 soap_get_ns1__cgjSelfcheck(struct soap*, ns1__cgjSelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__cgjSelfcheck
#define soap_read_ns1__cgjSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cgjSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__cgjSelfcheck * SOAP_FMAC2 soap_instantiate_ns1__cgjSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__cgjSelfcheck * soap_new_ns1__cgjSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cgjSelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__cgjSelfcheck * soap_new_req_ns1__cgjSelfcheck(struct soap *soap, double HVitualTime, double HrealTime, double LvitualTime, double LrealTime, double Hpower, double Lpower) { ns1__cgjSelfcheck *_p = soap_instantiate_ns1__cgjSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjSelfcheck::HVitualTime = HVitualTime; _p->ns1__cgjSelfcheck::HrealTime = HrealTime; _p->ns1__cgjSelfcheck::LvitualTime = LvitualTime; _p->ns1__cgjSelfcheck::LrealTime = LrealTime; _p->ns1__cgjSelfcheck::Hpower = Hpower; _p->ns1__cgjSelfcheck::Lpower = Lpower; } return _p; }

inline ns1__cgjSelfcheck * soap_new_set_ns1__cgjSelfcheck(struct soap *soap, std::wstring *registCode, double HVitualTime, double HrealTime, double LvitualTime, double LrealTime, double Hpower, double Lpower, std::wstring *checkResult, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__cgjSelfcheck *_p = soap_instantiate_ns1__cgjSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjSelfcheck::registCode = registCode; _p->ns1__cgjSelfcheck::HVitualTime = HVitualTime; _p->ns1__cgjSelfcheck::HrealTime = HrealTime; _p->ns1__cgjSelfcheck::LvitualTime = LvitualTime; _p->ns1__cgjSelfcheck::LrealTime = LrealTime; _p->ns1__cgjSelfcheck::Hpower = Hpower; _p->ns1__cgjSelfcheck::Lpower = Lpower; _p->ns1__cgjSelfcheck::checkResult = checkResult; _p->ns1__cgjSelfcheck::checkTimeStart = checkTimeStart; _p->ns1__cgjSelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__cgjSelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__cgjSelfcheck(struct soap *soap, ns1__cgjSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cgjSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cgjLASelfcheckResponse
#define SOAP_TYPE_ns1__cgjLASelfcheckResponse (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cgjLASelfcheckResponse(struct soap*, const char*, int, const ns1__cgjLASelfcheckResponse *, const char*);
SOAP_FMAC3 ns1__cgjLASelfcheckResponse * SOAP_FMAC4 soap_in_ns1__cgjLASelfcheckResponse(struct soap*, const char*, ns1__cgjLASelfcheckResponse *, const char*);

#ifndef soap_write_ns1__cgjLASelfcheckResponse
#define soap_write_ns1__cgjLASelfcheckResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:cgjLASelfcheckResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjLASelfcheckResponse * SOAP_FMAC4 soap_get_ns1__cgjLASelfcheckResponse(struct soap*, ns1__cgjLASelfcheckResponse *, const char*, const char*);

#ifndef soap_read_ns1__cgjLASelfcheckResponse
#define soap_read_ns1__cgjLASelfcheckResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cgjLASelfcheckResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__cgjLASelfcheckResponse * SOAP_FMAC2 soap_instantiate_ns1__cgjLASelfcheckResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__cgjLASelfcheckResponse * soap_new_ns1__cgjLASelfcheckResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cgjLASelfcheckResponse(soap, n, NULL, NULL, NULL); }

inline ns1__cgjLASelfcheckResponse * soap_new_req_ns1__cgjLASelfcheckResponse(struct soap *soap, bool return_) { ns1__cgjLASelfcheckResponse *_p = soap_instantiate_ns1__cgjLASelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjLASelfcheckResponse::return_ = return_; } return _p; }

inline ns1__cgjLASelfcheckResponse * soap_new_set_ns1__cgjLASelfcheckResponse(struct soap *soap, bool return_) { ns1__cgjLASelfcheckResponse *_p = soap_instantiate_ns1__cgjLASelfcheckResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjLASelfcheckResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__cgjLASelfcheckResponse(struct soap *soap, ns1__cgjLASelfcheckResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cgjLASelfcheckResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cgjLASelfcheck
#define SOAP_TYPE_ns1__cgjLASelfcheck (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cgjLASelfcheck(struct soap*, const char*, int, const ns1__cgjLASelfcheck *, const char*);
SOAP_FMAC3 ns1__cgjLASelfcheck * SOAP_FMAC4 soap_in_ns1__cgjLASelfcheck(struct soap*, const char*, ns1__cgjLASelfcheck *, const char*);

#ifndef soap_write_ns1__cgjLASelfcheck
#define soap_write_ns1__cgjLASelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:cgjLASelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjLASelfcheck * SOAP_FMAC4 soap_get_ns1__cgjLASelfcheck(struct soap*, ns1__cgjLASelfcheck *, const char*, const char*);

#ifndef soap_read_ns1__cgjLASelfcheck
#define soap_read_ns1__cgjLASelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cgjLASelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__cgjLASelfcheck * SOAP_FMAC2 soap_instantiate_ns1__cgjLASelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline ns1__cgjLASelfcheck * soap_new_ns1__cgjLASelfcheck(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cgjLASelfcheck(soap, n, NULL, NULL, NULL); }

inline ns1__cgjLASelfcheck * soap_new_req_ns1__cgjLASelfcheck(struct soap *soap, double AvitualTime, double ArealTime, double BvitualTime, double BrealTime, double CvitualTime, double CrealTime, double DvitualTime, double DrealTime) { ns1__cgjLASelfcheck *_p = soap_instantiate_ns1__cgjLASelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjLASelfcheck::AvitualTime = AvitualTime; _p->ns1__cgjLASelfcheck::ArealTime = ArealTime; _p->ns1__cgjLASelfcheck::BvitualTime = BvitualTime; _p->ns1__cgjLASelfcheck::BrealTime = BrealTime; _p->ns1__cgjLASelfcheck::CvitualTime = CvitualTime; _p->ns1__cgjLASelfcheck::CrealTime = CrealTime; _p->ns1__cgjLASelfcheck::DvitualTime = DvitualTime; _p->ns1__cgjLASelfcheck::DrealTime = DrealTime; } return _p; }

inline ns1__cgjLASelfcheck * soap_new_set_ns1__cgjLASelfcheck(struct soap *soap, std::wstring *registCode, double AvitualTime, double ArealTime, double BvitualTime, double BrealTime, double CvitualTime, double CrealTime, double DvitualTime, double DrealTime, std::wstring *checkResult, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__cgjLASelfcheck *_p = soap_instantiate_ns1__cgjLASelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__cgjLASelfcheck::registCode = registCode; _p->ns1__cgjLASelfcheck::AvitualTime = AvitualTime; _p->ns1__cgjLASelfcheck::ArealTime = ArealTime; _p->ns1__cgjLASelfcheck::BvitualTime = BvitualTime; _p->ns1__cgjLASelfcheck::BrealTime = BrealTime; _p->ns1__cgjLASelfcheck::CvitualTime = CvitualTime; _p->ns1__cgjLASelfcheck::CrealTime = CrealTime; _p->ns1__cgjLASelfcheck::DvitualTime = DvitualTime; _p->ns1__cgjLASelfcheck::DrealTime = DrealTime; _p->ns1__cgjLASelfcheck::checkResult = checkResult; _p->ns1__cgjLASelfcheck::checkTimeStart = checkTimeStart; _p->ns1__cgjLASelfcheck::checkTimeEnd = checkTimeEnd; _p->ns1__cgjLASelfcheck::remark = remark; } return _p; }

inline void soap_delete_ns1__cgjLASelfcheck(struct soap *soap, ns1__cgjLASelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cgjLASelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__doubleIdleDataResponse
#define SOAP_TYPE_ns1__doubleIdleDataResponse (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__doubleIdleDataResponse(struct soap*, const char*, int, const ns1__doubleIdleDataResponse *, const char*);
SOAP_FMAC3 ns1__doubleIdleDataResponse * SOAP_FMAC4 soap_in_ns1__doubleIdleDataResponse(struct soap*, const char*, ns1__doubleIdleDataResponse *, const char*);

#ifndef soap_write_ns1__doubleIdleDataResponse
#define soap_write_ns1__doubleIdleDataResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:doubleIdleDataResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__doubleIdleDataResponse * SOAP_FMAC4 soap_get_ns1__doubleIdleDataResponse(struct soap*, ns1__doubleIdleDataResponse *, const char*, const char*);

#ifndef soap_read_ns1__doubleIdleDataResponse
#define soap_read_ns1__doubleIdleDataResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__doubleIdleDataResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__doubleIdleDataResponse * SOAP_FMAC2 soap_instantiate_ns1__doubleIdleDataResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__doubleIdleDataResponse * soap_new_ns1__doubleIdleDataResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__doubleIdleDataResponse(soap, n, NULL, NULL, NULL); }

inline ns1__doubleIdleDataResponse * soap_new_req_ns1__doubleIdleDataResponse(struct soap *soap, bool return_) { ns1__doubleIdleDataResponse *_p = soap_instantiate_ns1__doubleIdleDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__doubleIdleDataResponse::return_ = return_; } return _p; }

inline ns1__doubleIdleDataResponse * soap_new_set_ns1__doubleIdleDataResponse(struct soap *soap, bool return_) { ns1__doubleIdleDataResponse *_p = soap_instantiate_ns1__doubleIdleDataResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__doubleIdleDataResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__doubleIdleDataResponse(struct soap *soap, ns1__doubleIdleDataResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__doubleIdleDataResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__doubleIdleData_USCOREFC
#define SOAP_TYPE_ns1__doubleIdleData_USCOREFC (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__doubleIdleData_USCOREFC(struct soap*, const char*, int, const ns1__doubleIdleData_USCOREFC *, const char*);
SOAP_FMAC3 ns1__doubleIdleData_USCOREFC * SOAP_FMAC4 soap_in_ns1__doubleIdleData_USCOREFC(struct soap*, const char*, ns1__doubleIdleData_USCOREFC *, const char*);

#ifndef soap_write_ns1__doubleIdleData_USCOREFC
#define soap_write_ns1__doubleIdleData_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:doubleIdleData_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__doubleIdleData_USCOREFC * SOAP_FMAC4 soap_get_ns1__doubleIdleData_USCOREFC(struct soap*, ns1__doubleIdleData_USCOREFC *, const char*, const char*);

#ifndef soap_read_ns1__doubleIdleData_USCOREFC
#define soap_read_ns1__doubleIdleData_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__doubleIdleData_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__doubleIdleData_USCOREFC * SOAP_FMAC2 soap_instantiate_ns1__doubleIdleData_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline ns1__doubleIdleData_USCOREFC * soap_new_ns1__doubleIdleData_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate_ns1__doubleIdleData_USCOREFC(soap, n, NULL, NULL, NULL); }

inline ns1__doubleIdleData_USCOREFC * soap_new_req_ns1__doubleIdleData_USCOREFC(struct soap *soap, double lrotateSpeed, double hrotateSpeed, double coLowValue, double hcLowValue, double coHighValue, double hcHighValue, double lambdaValue, double tempreture, double humidity, double airPressure) { ns1__doubleIdleData_USCOREFC *_p = soap_instantiate_ns1__doubleIdleData_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__doubleIdleData_USCOREFC::lrotateSpeed = lrotateSpeed; _p->ns1__doubleIdleData_USCOREFC::hrotateSpeed = hrotateSpeed; _p->ns1__doubleIdleData_USCOREFC::coLowValue = coLowValue; _p->ns1__doubleIdleData_USCOREFC::hcLowValue = hcLowValue; _p->ns1__doubleIdleData_USCOREFC::coHighValue = coHighValue; _p->ns1__doubleIdleData_USCOREFC::hcHighValue = hcHighValue; _p->ns1__doubleIdleData_USCOREFC::lambdaValue = lambdaValue; _p->ns1__doubleIdleData_USCOREFC::tempreture = tempreture; _p->ns1__doubleIdleData_USCOREFC::humidity = humidity; _p->ns1__doubleIdleData_USCOREFC::airPressure = airPressure; } return _p; }

inline ns1__doubleIdleData_USCOREFC * soap_new_set_ns1__doubleIdleData_USCOREFC(struct soap *soap, std::wstring *businessId, std::wstring *registCode, double lrotateSpeed, double hrotateSpeed, double coLowValue, double hcLowValue, double coHighValue, double hcHighValue, double lambdaValue, double tempreture, double humidity, double airPressure, std::wstring *timeStart, std::wstring *timeEnd) { ns1__doubleIdleData_USCOREFC *_p = soap_instantiate_ns1__doubleIdleData_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__doubleIdleData_USCOREFC::businessId = businessId; _p->ns1__doubleIdleData_USCOREFC::registCode = registCode; _p->ns1__doubleIdleData_USCOREFC::lrotateSpeed = lrotateSpeed; _p->ns1__doubleIdleData_USCOREFC::hrotateSpeed = hrotateSpeed; _p->ns1__doubleIdleData_USCOREFC::coLowValue = coLowValue; _p->ns1__doubleIdleData_USCOREFC::hcLowValue = hcLowValue; _p->ns1__doubleIdleData_USCOREFC::coHighValue = coHighValue; _p->ns1__doubleIdleData_USCOREFC::hcHighValue = hcHighValue; _p->ns1__doubleIdleData_USCOREFC::lambdaValue = lambdaValue; _p->ns1__doubleIdleData_USCOREFC::tempreture = tempreture; _p->ns1__doubleIdleData_USCOREFC::humidity = humidity; _p->ns1__doubleIdleData_USCOREFC::airPressure = airPressure; _p->ns1__doubleIdleData_USCOREFC::timeStart = timeStart; _p->ns1__doubleIdleData_USCOREFC::timeEnd = timeEnd; } return _p; }

inline void soap_delete_ns1__doubleIdleData_USCOREFC(struct soap *soap, ns1__doubleIdleData_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__doubleIdleData_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__bgAirHCResponse
#define SOAP_TYPE_ns1__bgAirHCResponse (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__bgAirHCResponse(struct soap*, const char*, int, const ns1__bgAirHCResponse *, const char*);
SOAP_FMAC3 ns1__bgAirHCResponse * SOAP_FMAC4 soap_in_ns1__bgAirHCResponse(struct soap*, const char*, ns1__bgAirHCResponse *, const char*);

#ifndef soap_write_ns1__bgAirHCResponse
#define soap_write_ns1__bgAirHCResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:bgAirHCResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__bgAirHCResponse * SOAP_FMAC4 soap_get_ns1__bgAirHCResponse(struct soap*, ns1__bgAirHCResponse *, const char*, const char*);

#ifndef soap_read_ns1__bgAirHCResponse
#define soap_read_ns1__bgAirHCResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__bgAirHCResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__bgAirHCResponse * SOAP_FMAC2 soap_instantiate_ns1__bgAirHCResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__bgAirHCResponse * soap_new_ns1__bgAirHCResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__bgAirHCResponse(soap, n, NULL, NULL, NULL); }

inline ns1__bgAirHCResponse * soap_new_req_ns1__bgAirHCResponse(struct soap *soap, bool return_) { ns1__bgAirHCResponse *_p = soap_instantiate_ns1__bgAirHCResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__bgAirHCResponse::return_ = return_; } return _p; }

inline ns1__bgAirHCResponse * soap_new_set_ns1__bgAirHCResponse(struct soap *soap, bool return_) { ns1__bgAirHCResponse *_p = soap_instantiate_ns1__bgAirHCResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__bgAirHCResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__bgAirHCResponse(struct soap *soap, ns1__bgAirHCResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__bgAirHCResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__bgAirHC
#define SOAP_TYPE_ns1__bgAirHC (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__bgAirHC(struct soap*, const char*, int, const ns1__bgAirHC *, const char*);
SOAP_FMAC3 ns1__bgAirHC * SOAP_FMAC4 soap_in_ns1__bgAirHC(struct soap*, const char*, ns1__bgAirHC *, const char*);

#ifndef soap_write_ns1__bgAirHC
#define soap_write_ns1__bgAirHC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:bgAirHC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__bgAirHC * SOAP_FMAC4 soap_get_ns1__bgAirHC(struct soap*, ns1__bgAirHC *, const char*, const char*);

#ifndef soap_read_ns1__bgAirHC
#define soap_read_ns1__bgAirHC(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__bgAirHC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__bgAirHC * SOAP_FMAC2 soap_instantiate_ns1__bgAirHC(struct soap*, int, const char*, const char*, size_t*);

inline ns1__bgAirHC * soap_new_ns1__bgAirHC(struct soap *soap, int n = -1) { return soap_instantiate_ns1__bgAirHC(soap, n, NULL, NULL, NULL); }

inline ns1__bgAirHC * soap_new_req_ns1__bgAirHC(struct soap *soap, double bgCO, double bgNO, double bgHC, double canliuHC, double o2Avg) { ns1__bgAirHC *_p = soap_instantiate_ns1__bgAirHC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__bgAirHC::bgCO = bgCO; _p->ns1__bgAirHC::bgNO = bgNO; _p->ns1__bgAirHC::bgHC = bgHC; _p->ns1__bgAirHC::canliuHC = canliuHC; _p->ns1__bgAirHC::o2Avg = o2Avg; } return _p; }

inline ns1__bgAirHC * soap_new_set_ns1__bgAirHC(struct soap *soap, std::wstring *businessId, std::wstring *registCode, double bgCO, double bgNO, double bgHC, double canliuHC, std::wstring *lFlowResult, double o2Avg, std::wstring *checkResult, std::wstring *checkTimeStart, std::wstring *checkTimeEnd, std::wstring *remark) { ns1__bgAirHC *_p = soap_instantiate_ns1__bgAirHC(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__bgAirHC::businessId = businessId; _p->ns1__bgAirHC::registCode = registCode; _p->ns1__bgAirHC::bgCO = bgCO; _p->ns1__bgAirHC::bgNO = bgNO; _p->ns1__bgAirHC::bgHC = bgHC; _p->ns1__bgAirHC::canliuHC = canliuHC; _p->ns1__bgAirHC::lFlowResult = lFlowResult; _p->ns1__bgAirHC::o2Avg = o2Avg; _p->ns1__bgAirHC::checkResult = checkResult; _p->ns1__bgAirHC::checkTimeStart = checkTimeStart; _p->ns1__bgAirHC::checkTimeEnd = checkTimeEnd; _p->ns1__bgAirHC::remark = remark; } return _p; }

inline void soap_delete_ns1__bgAirHC(struct soap *soap, ns1__bgAirHC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__bgAirHC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__sendMessageResponse
#define SOAP_TYPE_ns1__sendMessageResponse (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendMessageResponse(struct soap*, const char*, int, const ns1__sendMessageResponse *, const char*);
SOAP_FMAC3 ns1__sendMessageResponse * SOAP_FMAC4 soap_in_ns1__sendMessageResponse(struct soap*, const char*, ns1__sendMessageResponse *, const char*);

#ifndef soap_write_ns1__sendMessageResponse
#define soap_write_ns1__sendMessageResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:sendMessageResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__sendMessageResponse * SOAP_FMAC4 soap_get_ns1__sendMessageResponse(struct soap*, ns1__sendMessageResponse *, const char*, const char*);

#ifndef soap_read_ns1__sendMessageResponse
#define soap_read_ns1__sendMessageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sendMessageResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__sendMessageResponse * SOAP_FMAC2 soap_instantiate_ns1__sendMessageResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__sendMessageResponse * soap_new_ns1__sendMessageResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__sendMessageResponse(soap, n, NULL, NULL, NULL); }

inline ns1__sendMessageResponse * soap_new_req_ns1__sendMessageResponse(struct soap *soap, bool return_) { ns1__sendMessageResponse *_p = soap_instantiate_ns1__sendMessageResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__sendMessageResponse::return_ = return_; } return _p; }

inline ns1__sendMessageResponse * soap_new_set_ns1__sendMessageResponse(struct soap *soap, bool return_) { ns1__sendMessageResponse *_p = soap_instantiate_ns1__sendMessageResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__sendMessageResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__sendMessageResponse(struct soap *soap, ns1__sendMessageResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__sendMessageResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__sendMessage
#define SOAP_TYPE_ns1__sendMessage (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sendMessage(struct soap*, const char*, int, const ns1__sendMessage *, const char*);
SOAP_FMAC3 ns1__sendMessage * SOAP_FMAC4 soap_in_ns1__sendMessage(struct soap*, const char*, ns1__sendMessage *, const char*);

#ifndef soap_write_ns1__sendMessage
#define soap_write_ns1__sendMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:sendMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__sendMessage * SOAP_FMAC4 soap_get_ns1__sendMessage(struct soap*, ns1__sendMessage *, const char*, const char*);

#ifndef soap_read_ns1__sendMessage
#define soap_read_ns1__sendMessage(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__sendMessage(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__sendMessage * SOAP_FMAC2 soap_instantiate_ns1__sendMessage(struct soap*, int, const char*, const char*, size_t*);

inline ns1__sendMessage * soap_new_ns1__sendMessage(struct soap *soap, int n = -1) { return soap_instantiate_ns1__sendMessage(soap, n, NULL, NULL, NULL); }

inline ns1__sendMessage * soap_new_req_ns1__sendMessage(struct soap *soap) { ns1__sendMessage *_p = soap_instantiate_ns1__sendMessage(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__sendMessage * soap_new_set_ns1__sendMessage(struct soap *soap, std::wstring *businessId, std::wstring *registCode, std::wstring *code, std::wstring *message) { ns1__sendMessage *_p = soap_instantiate_ns1__sendMessage(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__sendMessage::businessId = businessId; _p->ns1__sendMessage::registCode = registCode; _p->ns1__sendMessage::code = code; _p->ns1__sendMessage::message = message; } return _p; }

inline void soap_delete_ns1__sendMessage(struct soap *soap, ns1__sendMessage *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__sendMessage(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__carInfo
#define SOAP_TYPE_ns1__carInfo (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__carInfo(struct soap*, const char*, int, const ns1__carInfo *, const char*);
SOAP_FMAC3 ns1__carInfo * SOAP_FMAC4 soap_in_ns1__carInfo(struct soap*, const char*, ns1__carInfo *, const char*);

#ifndef soap_write_ns1__carInfo
#define soap_write_ns1__carInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:carInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__carInfo * SOAP_FMAC4 soap_get_ns1__carInfo(struct soap*, ns1__carInfo *, const char*, const char*);

#ifndef soap_read_ns1__carInfo
#define soap_read_ns1__carInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__carInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__carInfo * SOAP_FMAC2 soap_instantiate_ns1__carInfo(struct soap*, int, const char*, const char*, size_t*);

inline ns1__carInfo * soap_new_ns1__carInfo(struct soap *soap, int n = -1) { return soap_instantiate_ns1__carInfo(soap, n, NULL, NULL, NULL); }

inline ns1__carInfo * soap_new_req_ns1__carInfo(struct soap *soap, double maxWeight, double motorPower, double motorRate, double standardWeight) { ns1__carInfo *_p = soap_instantiate_ns1__carInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__carInfo::maxWeight = maxWeight; _p->ns1__carInfo::motorPower = motorPower; _p->ns1__carInfo::motorRate = motorRate; _p->ns1__carInfo::standardWeight = standardWeight; } return _p; }

inline ns1__carInfo * soap_new_set_ns1__carInfo(struct soap *soap, std::wstring *carCardNumber, std::wstring *airInflow, std::wstring *fuelType, std::wstring *isSYJHQ, double maxWeight, double motorPower, double motorRate, std::wstring *oilSupply, std::wstring *speedChanger, double standardWeight) { ns1__carInfo *_p = soap_instantiate_ns1__carInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__carInfo::carCardNumber = carCardNumber; _p->ns1__carInfo::airInflow = airInflow; _p->ns1__carInfo::fuelType = fuelType; _p->ns1__carInfo::isSYJHQ = isSYJHQ; _p->ns1__carInfo::maxWeight = maxWeight; _p->ns1__carInfo::motorPower = motorPower; _p->ns1__carInfo::motorRate = motorRate; _p->ns1__carInfo::oilSupply = oilSupply; _p->ns1__carInfo::speedChanger = speedChanger; _p->ns1__carInfo::standardWeight = standardWeight; } return _p; }

inline void soap_delete_ns1__carInfo(struct soap *soap, ns1__carInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__carInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getCarInfoResponse
#define SOAP_TYPE_ns1__getCarInfoResponse (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getCarInfoResponse(struct soap*, const char*, int, const ns1__getCarInfoResponse *, const char*);
SOAP_FMAC3 ns1__getCarInfoResponse * SOAP_FMAC4 soap_in_ns1__getCarInfoResponse(struct soap*, const char*, ns1__getCarInfoResponse *, const char*);

#ifndef soap_write_ns1__getCarInfoResponse
#define soap_write_ns1__getCarInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:getCarInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__getCarInfoResponse * SOAP_FMAC4 soap_get_ns1__getCarInfoResponse(struct soap*, ns1__getCarInfoResponse *, const char*, const char*);

#ifndef soap_read_ns1__getCarInfoResponse
#define soap_read_ns1__getCarInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getCarInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__getCarInfoResponse * SOAP_FMAC2 soap_instantiate_ns1__getCarInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__getCarInfoResponse * soap_new_ns1__getCarInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getCarInfoResponse(soap, n, NULL, NULL, NULL); }

inline ns1__getCarInfoResponse * soap_new_req_ns1__getCarInfoResponse(struct soap *soap) { ns1__getCarInfoResponse *_p = soap_instantiate_ns1__getCarInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__getCarInfoResponse * soap_new_set_ns1__getCarInfoResponse(struct soap *soap, ns1__carInfo *return_) { ns1__getCarInfoResponse *_p = soap_instantiate_ns1__getCarInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__getCarInfoResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__getCarInfoResponse(struct soap *soap, ns1__getCarInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getCarInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getCarInfo
#define SOAP_TYPE_ns1__getCarInfo (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getCarInfo(struct soap*, const char*, int, const ns1__getCarInfo *, const char*);
SOAP_FMAC3 ns1__getCarInfo * SOAP_FMAC4 soap_in_ns1__getCarInfo(struct soap*, const char*, ns1__getCarInfo *, const char*);

#ifndef soap_write_ns1__getCarInfo
#define soap_write_ns1__getCarInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:getCarInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__getCarInfo * SOAP_FMAC4 soap_get_ns1__getCarInfo(struct soap*, ns1__getCarInfo *, const char*, const char*);

#ifndef soap_read_ns1__getCarInfo
#define soap_read_ns1__getCarInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getCarInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__getCarInfo * SOAP_FMAC2 soap_instantiate_ns1__getCarInfo(struct soap*, int, const char*, const char*, size_t*);

inline ns1__getCarInfo * soap_new_ns1__getCarInfo(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getCarInfo(soap, n, NULL, NULL, NULL); }

inline ns1__getCarInfo * soap_new_req_ns1__getCarInfo(struct soap *soap) { ns1__getCarInfo *_p = soap_instantiate_ns1__getCarInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__getCarInfo * soap_new_set_ns1__getCarInfo(struct soap *soap, std::wstring *businessId, std::wstring *registCode) { ns1__getCarInfo *_p = soap_instantiate_ns1__getCarInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__getCarInfo::businessId = businessId; _p->ns1__getCarInfo::registCode = registCode; } return _p; }

inline void soap_delete_ns1__getCarInfo(struct soap *soap, ns1__getCarInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getCarInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__lightproofSmokeLogResponse
#define SOAP_TYPE_ns1__lightproofSmokeLogResponse (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__lightproofSmokeLogResponse(struct soap*, const char*, int, const ns1__lightproofSmokeLogResponse *, const char*);
SOAP_FMAC3 ns1__lightproofSmokeLogResponse * SOAP_FMAC4 soap_in_ns1__lightproofSmokeLogResponse(struct soap*, const char*, ns1__lightproofSmokeLogResponse *, const char*);

#ifndef soap_write_ns1__lightproofSmokeLogResponse
#define soap_write_ns1__lightproofSmokeLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:lightproofSmokeLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lightproofSmokeLogResponse * SOAP_FMAC4 soap_get_ns1__lightproofSmokeLogResponse(struct soap*, ns1__lightproofSmokeLogResponse *, const char*, const char*);

#ifndef soap_read_ns1__lightproofSmokeLogResponse
#define soap_read_ns1__lightproofSmokeLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__lightproofSmokeLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__lightproofSmokeLogResponse * SOAP_FMAC2 soap_instantiate_ns1__lightproofSmokeLogResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__lightproofSmokeLogResponse * soap_new_ns1__lightproofSmokeLogResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__lightproofSmokeLogResponse(soap, n, NULL, NULL, NULL); }

inline ns1__lightproofSmokeLogResponse * soap_new_req_ns1__lightproofSmokeLogResponse(struct soap *soap, bool return_) { ns1__lightproofSmokeLogResponse *_p = soap_instantiate_ns1__lightproofSmokeLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeLogResponse::return_ = return_; } return _p; }

inline ns1__lightproofSmokeLogResponse * soap_new_set_ns1__lightproofSmokeLogResponse(struct soap *soap, bool return_) { ns1__lightproofSmokeLogResponse *_p = soap_instantiate_ns1__lightproofSmokeLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeLogResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__lightproofSmokeLogResponse(struct soap *soap, ns1__lightproofSmokeLogResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__lightproofSmokeLogResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__lightproofSmokeLog
#define SOAP_TYPE_ns1__lightproofSmokeLog (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__lightproofSmokeLog(struct soap*, const char*, int, const ns1__lightproofSmokeLog *, const char*);
SOAP_FMAC3 ns1__lightproofSmokeLog * SOAP_FMAC4 soap_in_ns1__lightproofSmokeLog(struct soap*, const char*, ns1__lightproofSmokeLog *, const char*);

#ifndef soap_write_ns1__lightproofSmokeLog
#define soap_write_ns1__lightproofSmokeLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:lightproofSmokeLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lightproofSmokeLog * SOAP_FMAC4 soap_get_ns1__lightproofSmokeLog(struct soap*, ns1__lightproofSmokeLog *, const char*, const char*);

#ifndef soap_read_ns1__lightproofSmokeLog
#define soap_read_ns1__lightproofSmokeLog(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__lightproofSmokeLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__lightproofSmokeLog * SOAP_FMAC2 soap_instantiate_ns1__lightproofSmokeLog(struct soap*, int, const char*, const char*, size_t*);

inline ns1__lightproofSmokeLog * soap_new_ns1__lightproofSmokeLog(struct soap *soap, int n = -1) { return soap_instantiate_ns1__lightproofSmokeLog(soap, n, NULL, NULL, NULL); }

inline ns1__lightproofSmokeLog * soap_new_req_ns1__lightproofSmokeLog(struct soap *soap, int inspectNum, double smokeValue, int zs, double ydjjcswd, double ydjjcsqy) { ns1__lightproofSmokeLog *_p = soap_instantiate_ns1__lightproofSmokeLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeLog::inspectNum = inspectNum; _p->ns1__lightproofSmokeLog::smokeValue = smokeValue; _p->ns1__lightproofSmokeLog::zs = zs; _p->ns1__lightproofSmokeLog::ydjjcswd = ydjjcswd; _p->ns1__lightproofSmokeLog::ydjjcsqy = ydjjcsqy; } return _p; }

inline ns1__lightproofSmokeLog * soap_new_set_ns1__lightproofSmokeLog(struct soap *soap, std::wstring *businessId, std::wstring *registCode, std::wstring *logTime, std::wstring *type, int inspectNum, double smokeValue, int zs, double ydjjcswd, double ydjjcsqy) { ns1__lightproofSmokeLog *_p = soap_instantiate_ns1__lightproofSmokeLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__lightproofSmokeLog::businessId = businessId; _p->ns1__lightproofSmokeLog::registCode = registCode; _p->ns1__lightproofSmokeLog::logTime = logTime; _p->ns1__lightproofSmokeLog::type = type; _p->ns1__lightproofSmokeLog::inspectNum = inspectNum; _p->ns1__lightproofSmokeLog::smokeValue = smokeValue; _p->ns1__lightproofSmokeLog::zs = zs; _p->ns1__lightproofSmokeLog::ydjjcswd = ydjjcswd; _p->ns1__lightproofSmokeLog::ydjjcsqy = ydjjcsqy; } return _p; }

inline void soap_delete_ns1__lightproofSmokeLog(struct soap *soap, ns1__lightproofSmokeLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__lightproofSmokeLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__argChangResponse
#define SOAP_TYPE_ns1__argChangResponse (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__argChangResponse(struct soap*, const char*, int, const ns1__argChangResponse *, const char*);
SOAP_FMAC3 ns1__argChangResponse * SOAP_FMAC4 soap_in_ns1__argChangResponse(struct soap*, const char*, ns1__argChangResponse *, const char*);

#ifndef soap_write_ns1__argChangResponse
#define soap_write_ns1__argChangResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:argChangResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__argChangResponse * SOAP_FMAC4 soap_get_ns1__argChangResponse(struct soap*, ns1__argChangResponse *, const char*, const char*);

#ifndef soap_read_ns1__argChangResponse
#define soap_read_ns1__argChangResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__argChangResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__argChangResponse * SOAP_FMAC2 soap_instantiate_ns1__argChangResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns1__argChangResponse * soap_new_ns1__argChangResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__argChangResponse(soap, n, NULL, NULL, NULL); }

inline ns1__argChangResponse * soap_new_req_ns1__argChangResponse(struct soap *soap, bool return_) { ns1__argChangResponse *_p = soap_instantiate_ns1__argChangResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__argChangResponse::return_ = return_; } return _p; }

inline ns1__argChangResponse * soap_new_set_ns1__argChangResponse(struct soap *soap, bool return_) { ns1__argChangResponse *_p = soap_instantiate_ns1__argChangResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__argChangResponse::return_ = return_; } return _p; }

inline void soap_delete_ns1__argChangResponse(struct soap *soap, ns1__argChangResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__argChangResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__argChang
#define SOAP_TYPE_ns1__argChang (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__argChang(struct soap*, const char*, int, const ns1__argChang *, const char*);
SOAP_FMAC3 ns1__argChang * SOAP_FMAC4 soap_in_ns1__argChang(struct soap*, const char*, ns1__argChang *, const char*);

#ifndef soap_write_ns1__argChang
#define soap_write_ns1__argChang(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:argChang", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__argChang * SOAP_FMAC4 soap_get_ns1__argChang(struct soap*, ns1__argChang *, const char*, const char*);

#ifndef soap_read_ns1__argChang
#define soap_read_ns1__argChang(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__argChang(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns1__argChang * SOAP_FMAC2 soap_instantiate_ns1__argChang(struct soap*, int, const char*, const char*, size_t*);

inline ns1__argChang * soap_new_ns1__argChang(struct soap *soap, int n = -1) { return soap_instantiate_ns1__argChang(soap, n, NULL, NULL, NULL); }

inline ns1__argChang * soap_new_req_ns1__argChang(struct soap *soap) { ns1__argChang *_p = soap_instantiate_ns1__argChang(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__argChang * soap_new_set_ns1__argChang(struct soap *soap, std::wstring *registCode, std::wstring *argName, std::wstring *oldValue, std::wstring *newValue, std::wstring *changeTime, std::wstring *remark) { ns1__argChang *_p = soap_instantiate_ns1__argChang(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__argChang::registCode = registCode; _p->ns1__argChang::argName = argName; _p->ns1__argChang::oldValue = oldValue; _p->ns1__argChang::newValue = newValue; _p->ns1__argChang::changeTime = changeTime; _p->ns1__argChang::remark = remark; } return _p; }

inline void soap_delete_ns1__argChang(struct soap *soap, ns1__argChang *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__argChang(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (326)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (325)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (322)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (320)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (319)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__cgjLSPSelfcheck_
#define SOAP_TYPE___ns1__cgjLSPSelfcheck_ (318)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__cgjLSPSelfcheck_(struct soap*, struct __ns1__cgjLSPSelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__cgjLSPSelfcheck_(struct soap*, const struct __ns1__cgjLSPSelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__cgjLSPSelfcheck_(struct soap*, const char*, int, const struct __ns1__cgjLSPSelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__cgjLSPSelfcheck_ * SOAP_FMAC4 soap_in___ns1__cgjLSPSelfcheck_(struct soap*, const char*, struct __ns1__cgjLSPSelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__cgjLSPSelfcheck_(struct soap*, const struct __ns1__cgjLSPSelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__cgjLSPSelfcheck_
#define soap_write___ns1__cgjLSPSelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__cgjLSPSelfcheck_(soap, data),0) || soap_put___ns1__cgjLSPSelfcheck_(soap, data, "-ns1:cgjLSPSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__cgjLSPSelfcheck_ * SOAP_FMAC4 soap_get___ns1__cgjLSPSelfcheck_(struct soap*, struct __ns1__cgjLSPSelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__cgjLSPSelfcheck_
#define soap_read___ns1__cgjLSPSelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__cgjLSPSelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__cgjLSPSelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__cgjLSPSelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__cgjLSPSelfcheck_ * soap_new___ns1__cgjLSPSelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__cgjLSPSelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__cgjLSPSelfcheck_ * soap_new_req___ns1__cgjLSPSelfcheck_(struct soap *soap) { struct __ns1__cgjLSPSelfcheck_ *_p = soap_instantiate___ns1__cgjLSPSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjLSPSelfcheck_(soap, _p); } return _p; }

inline struct __ns1__cgjLSPSelfcheck_ * soap_new_set___ns1__cgjLSPSelfcheck_(struct soap *soap, ns1__cgjLSPSelfcheck *ns1__cgjLSPSelfcheck_) { struct __ns1__cgjLSPSelfcheck_ *_p = soap_instantiate___ns1__cgjLSPSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjLSPSelfcheck_(soap, _p); _p->ns1__cgjLSPSelfcheck_ = ns1__cgjLSPSelfcheck_; } return _p; }

inline void soap_delete___ns1__cgjLSPSelfcheck_(struct soap *soap, struct __ns1__cgjLSPSelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__cgjLSPSelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__lljSelfcheck_
#define SOAP_TYPE___ns1__lljSelfcheck_ (316)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__lljSelfcheck_(struct soap*, struct __ns1__lljSelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__lljSelfcheck_(struct soap*, const struct __ns1__lljSelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__lljSelfcheck_(struct soap*, const char*, int, const struct __ns1__lljSelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__lljSelfcheck_ * SOAP_FMAC4 soap_in___ns1__lljSelfcheck_(struct soap*, const char*, struct __ns1__lljSelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__lljSelfcheck_(struct soap*, const struct __ns1__lljSelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__lljSelfcheck_
#define soap_write___ns1__lljSelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__lljSelfcheck_(soap, data),0) || soap_put___ns1__lljSelfcheck_(soap, data, "-ns1:lljSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__lljSelfcheck_ * SOAP_FMAC4 soap_get___ns1__lljSelfcheck_(struct soap*, struct __ns1__lljSelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__lljSelfcheck_
#define soap_read___ns1__lljSelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__lljSelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__lljSelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__lljSelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__lljSelfcheck_ * soap_new___ns1__lljSelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__lljSelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__lljSelfcheck_ * soap_new_req___ns1__lljSelfcheck_(struct soap *soap) { struct __ns1__lljSelfcheck_ *_p = soap_instantiate___ns1__lljSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lljSelfcheck_(soap, _p); } return _p; }

inline struct __ns1__lljSelfcheck_ * soap_new_set___ns1__lljSelfcheck_(struct soap *soap, ns1__lljSelfcheck *ns1__lljSelfcheck_) { struct __ns1__lljSelfcheck_ *_p = soap_instantiate___ns1__lljSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lljSelfcheck_(soap, _p); _p->ns1__lljSelfcheck_ = ns1__lljSelfcheck_; } return _p; }

inline void soap_delete___ns1__lljSelfcheck_(struct soap *soap, struct __ns1__lljSelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__lljSelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__cgjALPSelfcheck_
#define SOAP_TYPE___ns1__cgjALPSelfcheck_ (314)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__cgjALPSelfcheck_(struct soap*, struct __ns1__cgjALPSelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__cgjALPSelfcheck_(struct soap*, const struct __ns1__cgjALPSelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__cgjALPSelfcheck_(struct soap*, const char*, int, const struct __ns1__cgjALPSelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__cgjALPSelfcheck_ * SOAP_FMAC4 soap_in___ns1__cgjALPSelfcheck_(struct soap*, const char*, struct __ns1__cgjALPSelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__cgjALPSelfcheck_(struct soap*, const struct __ns1__cgjALPSelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__cgjALPSelfcheck_
#define soap_write___ns1__cgjALPSelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__cgjALPSelfcheck_(soap, data),0) || soap_put___ns1__cgjALPSelfcheck_(soap, data, "-ns1:cgjALPSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__cgjALPSelfcheck_ * SOAP_FMAC4 soap_get___ns1__cgjALPSelfcheck_(struct soap*, struct __ns1__cgjALPSelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__cgjALPSelfcheck_
#define soap_read___ns1__cgjALPSelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__cgjALPSelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__cgjALPSelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__cgjALPSelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__cgjALPSelfcheck_ * soap_new___ns1__cgjALPSelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__cgjALPSelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__cgjALPSelfcheck_ * soap_new_req___ns1__cgjALPSelfcheck_(struct soap *soap) { struct __ns1__cgjALPSelfcheck_ *_p = soap_instantiate___ns1__cgjALPSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjALPSelfcheck_(soap, _p); } return _p; }

inline struct __ns1__cgjALPSelfcheck_ * soap_new_set___ns1__cgjALPSelfcheck_(struct soap *soap, ns1__cgjALPSelfcheck *ns1__cgjALPSelfcheck_) { struct __ns1__cgjALPSelfcheck_ *_p = soap_instantiate___ns1__cgjALPSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjALPSelfcheck_(soap, _p); _p->ns1__cgjALPSelfcheck_ = ns1__cgjALPSelfcheck_; } return _p; }

inline void soap_delete___ns1__cgjALPSelfcheck_(struct soap *soap, struct __ns1__cgjALPSelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__cgjALPSelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__wqfxySelfcheck_
#define SOAP_TYPE___ns1__wqfxySelfcheck_ (312)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__wqfxySelfcheck_(struct soap*, struct __ns1__wqfxySelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__wqfxySelfcheck_(struct soap*, const struct __ns1__wqfxySelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__wqfxySelfcheck_(struct soap*, const char*, int, const struct __ns1__wqfxySelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__wqfxySelfcheck_ * SOAP_FMAC4 soap_in___ns1__wqfxySelfcheck_(struct soap*, const char*, struct __ns1__wqfxySelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__wqfxySelfcheck_(struct soap*, const struct __ns1__wqfxySelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__wqfxySelfcheck_
#define soap_write___ns1__wqfxySelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__wqfxySelfcheck_(soap, data),0) || soap_put___ns1__wqfxySelfcheck_(soap, data, "-ns1:wqfxySelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__wqfxySelfcheck_ * SOAP_FMAC4 soap_get___ns1__wqfxySelfcheck_(struct soap*, struct __ns1__wqfxySelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__wqfxySelfcheck_
#define soap_read___ns1__wqfxySelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__wqfxySelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__wqfxySelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__wqfxySelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__wqfxySelfcheck_ * soap_new___ns1__wqfxySelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__wqfxySelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__wqfxySelfcheck_ * soap_new_req___ns1__wqfxySelfcheck_(struct soap *soap) { struct __ns1__wqfxySelfcheck_ *_p = soap_instantiate___ns1__wqfxySelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__wqfxySelfcheck_(soap, _p); } return _p; }

inline struct __ns1__wqfxySelfcheck_ * soap_new_set___ns1__wqfxySelfcheck_(struct soap *soap, ns1__wqfxySelfcheck *ns1__wqfxySelfcheck_) { struct __ns1__wqfxySelfcheck_ *_p = soap_instantiate___ns1__wqfxySelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__wqfxySelfcheck_(soap, _p); _p->ns1__wqfxySelfcheck_ = ns1__wqfxySelfcheck_; } return _p; }

inline void soap_delete___ns1__wqfxySelfcheck_(struct soap *soap, struct __ns1__wqfxySelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__wqfxySelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__sendMessage_USCOREFC_
#define SOAP_TYPE___ns1__sendMessage_USCOREFC_ (310)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__sendMessage_USCOREFC_(struct soap*, struct __ns1__sendMessage_USCOREFC_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__sendMessage_USCOREFC_(struct soap*, const struct __ns1__sendMessage_USCOREFC_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__sendMessage_USCOREFC_(struct soap*, const char*, int, const struct __ns1__sendMessage_USCOREFC_ *, const char*);
SOAP_FMAC3 struct __ns1__sendMessage_USCOREFC_ * SOAP_FMAC4 soap_in___ns1__sendMessage_USCOREFC_(struct soap*, const char*, struct __ns1__sendMessage_USCOREFC_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__sendMessage_USCOREFC_(struct soap*, const struct __ns1__sendMessage_USCOREFC_ *, const char*, const char*);

#ifndef soap_write___ns1__sendMessage_USCOREFC_
#define soap_write___ns1__sendMessage_USCOREFC_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__sendMessage_USCOREFC_(soap, data),0) || soap_put___ns1__sendMessage_USCOREFC_(soap, data, "-ns1:sendMessage_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__sendMessage_USCOREFC_ * SOAP_FMAC4 soap_get___ns1__sendMessage_USCOREFC_(struct soap*, struct __ns1__sendMessage_USCOREFC_ *, const char*, const char*);

#ifndef soap_read___ns1__sendMessage_USCOREFC_
#define soap_read___ns1__sendMessage_USCOREFC_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__sendMessage_USCOREFC_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__sendMessage_USCOREFC_ * SOAP_FMAC2 soap_instantiate___ns1__sendMessage_USCOREFC_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__sendMessage_USCOREFC_ * soap_new___ns1__sendMessage_USCOREFC_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__sendMessage_USCOREFC_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__sendMessage_USCOREFC_ * soap_new_req___ns1__sendMessage_USCOREFC_(struct soap *soap) { struct __ns1__sendMessage_USCOREFC_ *_p = soap_instantiate___ns1__sendMessage_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sendMessage_USCOREFC_(soap, _p); } return _p; }

inline struct __ns1__sendMessage_USCOREFC_ * soap_new_set___ns1__sendMessage_USCOREFC_(struct soap *soap, ns1__sendMessage_USCOREFC *ns1__sendMessage_USCOREFC_) { struct __ns1__sendMessage_USCOREFC_ *_p = soap_instantiate___ns1__sendMessage_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sendMessage_USCOREFC_(soap, _p); _p->ns1__sendMessage_USCOREFC_ = ns1__sendMessage_USCOREFC_; } return _p; }

inline void soap_delete___ns1__sendMessage_USCOREFC_(struct soap *soap, struct __ns1__sendMessage_USCOREFC_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__sendMessage_USCOREFC_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__sdsqtfxySelfcheck_
#define SOAP_TYPE___ns1__sdsqtfxySelfcheck_ (308)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__sdsqtfxySelfcheck_(struct soap*, struct __ns1__sdsqtfxySelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__sdsqtfxySelfcheck_(struct soap*, const struct __ns1__sdsqtfxySelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__sdsqtfxySelfcheck_(struct soap*, const char*, int, const struct __ns1__sdsqtfxySelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__sdsqtfxySelfcheck_ * SOAP_FMAC4 soap_in___ns1__sdsqtfxySelfcheck_(struct soap*, const char*, struct __ns1__sdsqtfxySelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__sdsqtfxySelfcheck_(struct soap*, const struct __ns1__sdsqtfxySelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__sdsqtfxySelfcheck_
#define soap_write___ns1__sdsqtfxySelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__sdsqtfxySelfcheck_(soap, data),0) || soap_put___ns1__sdsqtfxySelfcheck_(soap, data, "-ns1:sdsqtfxySelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__sdsqtfxySelfcheck_ * SOAP_FMAC4 soap_get___ns1__sdsqtfxySelfcheck_(struct soap*, struct __ns1__sdsqtfxySelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__sdsqtfxySelfcheck_
#define soap_read___ns1__sdsqtfxySelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__sdsqtfxySelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__sdsqtfxySelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__sdsqtfxySelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__sdsqtfxySelfcheck_ * soap_new___ns1__sdsqtfxySelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__sdsqtfxySelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__sdsqtfxySelfcheck_ * soap_new_req___ns1__sdsqtfxySelfcheck_(struct soap *soap) { struct __ns1__sdsqtfxySelfcheck_ *_p = soap_instantiate___ns1__sdsqtfxySelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sdsqtfxySelfcheck_(soap, _p); } return _p; }

inline struct __ns1__sdsqtfxySelfcheck_ * soap_new_set___ns1__sdsqtfxySelfcheck_(struct soap *soap, ns1__sdsqtfxySelfcheck *ns1__sdsqtfxySelfcheck_) { struct __ns1__sdsqtfxySelfcheck_ *_p = soap_instantiate___ns1__sdsqtfxySelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sdsqtfxySelfcheck_(soap, _p); _p->ns1__sdsqtfxySelfcheck_ = ns1__sdsqtfxySelfcheck_; } return _p; }

inline void soap_delete___ns1__sdsqtfxySelfcheck_(struct soap *soap, struct __ns1__sdsqtfxySelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__sdsqtfxySelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__qyfxSelfcheck_
#define SOAP_TYPE___ns1__qyfxSelfcheck_ (306)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__qyfxSelfcheck_(struct soap*, struct __ns1__qyfxSelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__qyfxSelfcheck_(struct soap*, const struct __ns1__qyfxSelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__qyfxSelfcheck_(struct soap*, const char*, int, const struct __ns1__qyfxSelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__qyfxSelfcheck_ * SOAP_FMAC4 soap_in___ns1__qyfxSelfcheck_(struct soap*, const char*, struct __ns1__qyfxSelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__qyfxSelfcheck_(struct soap*, const struct __ns1__qyfxSelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__qyfxSelfcheck_
#define soap_write___ns1__qyfxSelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__qyfxSelfcheck_(soap, data),0) || soap_put___ns1__qyfxSelfcheck_(soap, data, "-ns1:qyfxSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__qyfxSelfcheck_ * SOAP_FMAC4 soap_get___ns1__qyfxSelfcheck_(struct soap*, struct __ns1__qyfxSelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__qyfxSelfcheck_
#define soap_read___ns1__qyfxSelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__qyfxSelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__qyfxSelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__qyfxSelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__qyfxSelfcheck_ * soap_new___ns1__qyfxSelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__qyfxSelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__qyfxSelfcheck_ * soap_new_req___ns1__qyfxSelfcheck_(struct soap *soap) { struct __ns1__qyfxSelfcheck_ *_p = soap_instantiate___ns1__qyfxSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__qyfxSelfcheck_(soap, _p); } return _p; }

inline struct __ns1__qyfxSelfcheck_ * soap_new_set___ns1__qyfxSelfcheck_(struct soap *soap, ns1__qyfxSelfcheck *ns1__qyfxSelfcheck_) { struct __ns1__qyfxSelfcheck_ *_p = soap_instantiate___ns1__qyfxSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__qyfxSelfcheck_(soap, _p); _p->ns1__qyfxSelfcheck_ = ns1__qyfxSelfcheck_; } return _p; }

inline void soap_delete___ns1__qyfxSelfcheck_(struct soap *soap, struct __ns1__qyfxSelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__qyfxSelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__lightproofSmokeData_
#define SOAP_TYPE___ns1__lightproofSmokeData_ (304)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__lightproofSmokeData_(struct soap*, struct __ns1__lightproofSmokeData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__lightproofSmokeData_(struct soap*, const struct __ns1__lightproofSmokeData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__lightproofSmokeData_(struct soap*, const char*, int, const struct __ns1__lightproofSmokeData_ *, const char*);
SOAP_FMAC3 struct __ns1__lightproofSmokeData_ * SOAP_FMAC4 soap_in___ns1__lightproofSmokeData_(struct soap*, const char*, struct __ns1__lightproofSmokeData_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__lightproofSmokeData_(struct soap*, const struct __ns1__lightproofSmokeData_ *, const char*, const char*);

#ifndef soap_write___ns1__lightproofSmokeData_
#define soap_write___ns1__lightproofSmokeData_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__lightproofSmokeData_(soap, data),0) || soap_put___ns1__lightproofSmokeData_(soap, data, "-ns1:lightproofSmokeData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__lightproofSmokeData_ * SOAP_FMAC4 soap_get___ns1__lightproofSmokeData_(struct soap*, struct __ns1__lightproofSmokeData_ *, const char*, const char*);

#ifndef soap_read___ns1__lightproofSmokeData_
#define soap_read___ns1__lightproofSmokeData_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__lightproofSmokeData_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__lightproofSmokeData_ * SOAP_FMAC2 soap_instantiate___ns1__lightproofSmokeData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__lightproofSmokeData_ * soap_new___ns1__lightproofSmokeData_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__lightproofSmokeData_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__lightproofSmokeData_ * soap_new_req___ns1__lightproofSmokeData_(struct soap *soap) { struct __ns1__lightproofSmokeData_ *_p = soap_instantiate___ns1__lightproofSmokeData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeData_(soap, _p); } return _p; }

inline struct __ns1__lightproofSmokeData_ * soap_new_set___ns1__lightproofSmokeData_(struct soap *soap, ns1__lightproofSmokeData *ns1__lightproofSmokeData_) { struct __ns1__lightproofSmokeData_ *_p = soap_instantiate___ns1__lightproofSmokeData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeData_(soap, _p); _p->ns1__lightproofSmokeData_ = ns1__lightproofSmokeData_; } return _p; }

inline void soap_delete___ns1__lightproofSmokeData_(struct soap *soap, struct __ns1__lightproofSmokeData_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__lightproofSmokeData_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__lightproofSmokeData_USCOREFC_
#define SOAP_TYPE___ns1__lightproofSmokeData_USCOREFC_ (302)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__lightproofSmokeData_USCOREFC_(struct soap*, struct __ns1__lightproofSmokeData_USCOREFC_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__lightproofSmokeData_USCOREFC_(struct soap*, const struct __ns1__lightproofSmokeData_USCOREFC_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__lightproofSmokeData_USCOREFC_(struct soap*, const char*, int, const struct __ns1__lightproofSmokeData_USCOREFC_ *, const char*);
SOAP_FMAC3 struct __ns1__lightproofSmokeData_USCOREFC_ * SOAP_FMAC4 soap_in___ns1__lightproofSmokeData_USCOREFC_(struct soap*, const char*, struct __ns1__lightproofSmokeData_USCOREFC_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__lightproofSmokeData_USCOREFC_(struct soap*, const struct __ns1__lightproofSmokeData_USCOREFC_ *, const char*, const char*);

#ifndef soap_write___ns1__lightproofSmokeData_USCOREFC_
#define soap_write___ns1__lightproofSmokeData_USCOREFC_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__lightproofSmokeData_USCOREFC_(soap, data),0) || soap_put___ns1__lightproofSmokeData_USCOREFC_(soap, data, "-ns1:lightproofSmokeData_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__lightproofSmokeData_USCOREFC_ * SOAP_FMAC4 soap_get___ns1__lightproofSmokeData_USCOREFC_(struct soap*, struct __ns1__lightproofSmokeData_USCOREFC_ *, const char*, const char*);

#ifndef soap_read___ns1__lightproofSmokeData_USCOREFC_
#define soap_read___ns1__lightproofSmokeData_USCOREFC_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__lightproofSmokeData_USCOREFC_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__lightproofSmokeData_USCOREFC_ * SOAP_FMAC2 soap_instantiate___ns1__lightproofSmokeData_USCOREFC_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__lightproofSmokeData_USCOREFC_ * soap_new___ns1__lightproofSmokeData_USCOREFC_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__lightproofSmokeData_USCOREFC_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__lightproofSmokeData_USCOREFC_ * soap_new_req___ns1__lightproofSmokeData_USCOREFC_(struct soap *soap) { struct __ns1__lightproofSmokeData_USCOREFC_ *_p = soap_instantiate___ns1__lightproofSmokeData_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeData_USCOREFC_(soap, _p); } return _p; }

inline struct __ns1__lightproofSmokeData_USCOREFC_ * soap_new_set___ns1__lightproofSmokeData_USCOREFC_(struct soap *soap, ns1__lightproofSmokeData_USCOREFC *ns1__lightproofSmokeData_USCOREFC_) { struct __ns1__lightproofSmokeData_USCOREFC_ *_p = soap_instantiate___ns1__lightproofSmokeData_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeData_USCOREFC_(soap, _p); _p->ns1__lightproofSmokeData_USCOREFC_ = ns1__lightproofSmokeData_USCOREFC_; } return _p; }

inline void soap_delete___ns1__lightproofSmokeData_USCOREFC_(struct soap *soap, struct __ns1__lightproofSmokeData_USCOREFC_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__lightproofSmokeData_USCOREFC_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__wqfxyAdjust_
#define SOAP_TYPE___ns1__wqfxyAdjust_ (300)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__wqfxyAdjust_(struct soap*, struct __ns1__wqfxyAdjust_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__wqfxyAdjust_(struct soap*, const struct __ns1__wqfxyAdjust_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__wqfxyAdjust_(struct soap*, const char*, int, const struct __ns1__wqfxyAdjust_ *, const char*);
SOAP_FMAC3 struct __ns1__wqfxyAdjust_ * SOAP_FMAC4 soap_in___ns1__wqfxyAdjust_(struct soap*, const char*, struct __ns1__wqfxyAdjust_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__wqfxyAdjust_(struct soap*, const struct __ns1__wqfxyAdjust_ *, const char*, const char*);

#ifndef soap_write___ns1__wqfxyAdjust_
#define soap_write___ns1__wqfxyAdjust_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__wqfxyAdjust_(soap, data),0) || soap_put___ns1__wqfxyAdjust_(soap, data, "-ns1:wqfxyAdjust", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__wqfxyAdjust_ * SOAP_FMAC4 soap_get___ns1__wqfxyAdjust_(struct soap*, struct __ns1__wqfxyAdjust_ *, const char*, const char*);

#ifndef soap_read___ns1__wqfxyAdjust_
#define soap_read___ns1__wqfxyAdjust_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__wqfxyAdjust_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__wqfxyAdjust_ * SOAP_FMAC2 soap_instantiate___ns1__wqfxyAdjust_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__wqfxyAdjust_ * soap_new___ns1__wqfxyAdjust_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__wqfxyAdjust_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__wqfxyAdjust_ * soap_new_req___ns1__wqfxyAdjust_(struct soap *soap) { struct __ns1__wqfxyAdjust_ *_p = soap_instantiate___ns1__wqfxyAdjust_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__wqfxyAdjust_(soap, _p); } return _p; }

inline struct __ns1__wqfxyAdjust_ * soap_new_set___ns1__wqfxyAdjust_(struct soap *soap, ns1__wqfxyAdjust *ns1__wqfxyAdjust_) { struct __ns1__wqfxyAdjust_ *_p = soap_instantiate___ns1__wqfxyAdjust_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__wqfxyAdjust_(soap, _p); _p->ns1__wqfxyAdjust_ = ns1__wqfxyAdjust_; } return _p; }

inline void soap_delete___ns1__wqfxyAdjust_(struct soap *soap, struct __ns1__wqfxyAdjust_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__wqfxyAdjust_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__cgjPLHPSelfcheck_
#define SOAP_TYPE___ns1__cgjPLHPSelfcheck_ (298)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__cgjPLHPSelfcheck_(struct soap*, struct __ns1__cgjPLHPSelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__cgjPLHPSelfcheck_(struct soap*, const struct __ns1__cgjPLHPSelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__cgjPLHPSelfcheck_(struct soap*, const char*, int, const struct __ns1__cgjPLHPSelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__cgjPLHPSelfcheck_ * SOAP_FMAC4 soap_in___ns1__cgjPLHPSelfcheck_(struct soap*, const char*, struct __ns1__cgjPLHPSelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__cgjPLHPSelfcheck_(struct soap*, const struct __ns1__cgjPLHPSelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__cgjPLHPSelfcheck_
#define soap_write___ns1__cgjPLHPSelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__cgjPLHPSelfcheck_(soap, data),0) || soap_put___ns1__cgjPLHPSelfcheck_(soap, data, "-ns1:cgjPLHPSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__cgjPLHPSelfcheck_ * SOAP_FMAC4 soap_get___ns1__cgjPLHPSelfcheck_(struct soap*, struct __ns1__cgjPLHPSelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__cgjPLHPSelfcheck_
#define soap_read___ns1__cgjPLHPSelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__cgjPLHPSelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__cgjPLHPSelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__cgjPLHPSelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__cgjPLHPSelfcheck_ * soap_new___ns1__cgjPLHPSelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__cgjPLHPSelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__cgjPLHPSelfcheck_ * soap_new_req___ns1__cgjPLHPSelfcheck_(struct soap *soap) { struct __ns1__cgjPLHPSelfcheck_ *_p = soap_instantiate___ns1__cgjPLHPSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjPLHPSelfcheck_(soap, _p); } return _p; }

inline struct __ns1__cgjPLHPSelfcheck_ * soap_new_set___ns1__cgjPLHPSelfcheck_(struct soap *soap, ns1__cgjPLHPSelfcheck *ns1__cgjPLHPSelfcheck_) { struct __ns1__cgjPLHPSelfcheck_ *_p = soap_instantiate___ns1__cgjPLHPSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjPLHPSelfcheck_(soap, _p); _p->ns1__cgjPLHPSelfcheck_ = ns1__cgjPLHPSelfcheck_; } return _p; }

inline void soap_delete___ns1__cgjPLHPSelfcheck_(struct soap *soap, struct __ns1__cgjPLHPSelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__cgjPLHPSelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__doubleIdleLog_
#define SOAP_TYPE___ns1__doubleIdleLog_ (296)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__doubleIdleLog_(struct soap*, struct __ns1__doubleIdleLog_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__doubleIdleLog_(struct soap*, const struct __ns1__doubleIdleLog_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__doubleIdleLog_(struct soap*, const char*, int, const struct __ns1__doubleIdleLog_ *, const char*);
SOAP_FMAC3 struct __ns1__doubleIdleLog_ * SOAP_FMAC4 soap_in___ns1__doubleIdleLog_(struct soap*, const char*, struct __ns1__doubleIdleLog_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__doubleIdleLog_(struct soap*, const struct __ns1__doubleIdleLog_ *, const char*, const char*);

#ifndef soap_write___ns1__doubleIdleLog_
#define soap_write___ns1__doubleIdleLog_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__doubleIdleLog_(soap, data),0) || soap_put___ns1__doubleIdleLog_(soap, data, "-ns1:doubleIdleLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__doubleIdleLog_ * SOAP_FMAC4 soap_get___ns1__doubleIdleLog_(struct soap*, struct __ns1__doubleIdleLog_ *, const char*, const char*);

#ifndef soap_read___ns1__doubleIdleLog_
#define soap_read___ns1__doubleIdleLog_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__doubleIdleLog_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__doubleIdleLog_ * SOAP_FMAC2 soap_instantiate___ns1__doubleIdleLog_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__doubleIdleLog_ * soap_new___ns1__doubleIdleLog_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__doubleIdleLog_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__doubleIdleLog_ * soap_new_req___ns1__doubleIdleLog_(struct soap *soap) { struct __ns1__doubleIdleLog_ *_p = soap_instantiate___ns1__doubleIdleLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleLog_(soap, _p); } return _p; }

inline struct __ns1__doubleIdleLog_ * soap_new_set___ns1__doubleIdleLog_(struct soap *soap, ns1__doubleIdleLog *ns1__doubleIdleLog_) { struct __ns1__doubleIdleLog_ *_p = soap_instantiate___ns1__doubleIdleLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleLog_(soap, _p); _p->ns1__doubleIdleLog_ = ns1__doubleIdleLog_; } return _p; }

inline void soap_delete___ns1__doubleIdleLog_(struct soap *soap, struct __ns1__doubleIdleLog_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__doubleIdleLog_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__doubleIdleData_
#define SOAP_TYPE___ns1__doubleIdleData_ (294)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__doubleIdleData_(struct soap*, struct __ns1__doubleIdleData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__doubleIdleData_(struct soap*, const struct __ns1__doubleIdleData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__doubleIdleData_(struct soap*, const char*, int, const struct __ns1__doubleIdleData_ *, const char*);
SOAP_FMAC3 struct __ns1__doubleIdleData_ * SOAP_FMAC4 soap_in___ns1__doubleIdleData_(struct soap*, const char*, struct __ns1__doubleIdleData_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__doubleIdleData_(struct soap*, const struct __ns1__doubleIdleData_ *, const char*, const char*);

#ifndef soap_write___ns1__doubleIdleData_
#define soap_write___ns1__doubleIdleData_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__doubleIdleData_(soap, data),0) || soap_put___ns1__doubleIdleData_(soap, data, "-ns1:doubleIdleData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__doubleIdleData_ * SOAP_FMAC4 soap_get___ns1__doubleIdleData_(struct soap*, struct __ns1__doubleIdleData_ *, const char*, const char*);

#ifndef soap_read___ns1__doubleIdleData_
#define soap_read___ns1__doubleIdleData_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__doubleIdleData_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__doubleIdleData_ * SOAP_FMAC2 soap_instantiate___ns1__doubleIdleData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__doubleIdleData_ * soap_new___ns1__doubleIdleData_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__doubleIdleData_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__doubleIdleData_ * soap_new_req___ns1__doubleIdleData_(struct soap *soap) { struct __ns1__doubleIdleData_ *_p = soap_instantiate___ns1__doubleIdleData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleData_(soap, _p); } return _p; }

inline struct __ns1__doubleIdleData_ * soap_new_set___ns1__doubleIdleData_(struct soap *soap, ns1__doubleIdleData *ns1__doubleIdleData_) { struct __ns1__doubleIdleData_ *_p = soap_instantiate___ns1__doubleIdleData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleData_(soap, _p); _p->ns1__doubleIdleData_ = ns1__doubleIdleData_; } return _p; }

inline void soap_delete___ns1__doubleIdleData_(struct soap *soap, struct __ns1__doubleIdleData_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__doubleIdleData_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getSatate_
#define SOAP_TYPE___ns1__getSatate_ (292)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getSatate_(struct soap*, struct __ns1__getSatate_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getSatate_(struct soap*, const struct __ns1__getSatate_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getSatate_(struct soap*, const char*, int, const struct __ns1__getSatate_ *, const char*);
SOAP_FMAC3 struct __ns1__getSatate_ * SOAP_FMAC4 soap_in___ns1__getSatate_(struct soap*, const char*, struct __ns1__getSatate_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getSatate_(struct soap*, const struct __ns1__getSatate_ *, const char*, const char*);

#ifndef soap_write___ns1__getSatate_
#define soap_write___ns1__getSatate_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__getSatate_(soap, data),0) || soap_put___ns1__getSatate_(soap, data, "-ns1:getSatate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__getSatate_ * SOAP_FMAC4 soap_get___ns1__getSatate_(struct soap*, struct __ns1__getSatate_ *, const char*, const char*);

#ifndef soap_read___ns1__getSatate_
#define soap_read___ns1__getSatate_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getSatate_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__getSatate_ * SOAP_FMAC2 soap_instantiate___ns1__getSatate_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__getSatate_ * soap_new___ns1__getSatate_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__getSatate_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__getSatate_ * soap_new_req___ns1__getSatate_(struct soap *soap) { struct __ns1__getSatate_ *_p = soap_instantiate___ns1__getSatate_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getSatate_(soap, _p); } return _p; }

inline struct __ns1__getSatate_ * soap_new_set___ns1__getSatate_(struct soap *soap, ns1__getSatate *ns1__getSatate_) { struct __ns1__getSatate_ *_p = soap_instantiate___ns1__getSatate_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getSatate_(soap, _p); _p->ns1__getSatate_ = ns1__getSatate_; } return _p; }

inline void soap_delete___ns1__getSatate_(struct soap *soap, struct __ns1__getSatate_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getSatate_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__motoDbIdleData_
#define SOAP_TYPE___ns1__motoDbIdleData_ (290)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__motoDbIdleData_(struct soap*, struct __ns1__motoDbIdleData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__motoDbIdleData_(struct soap*, const struct __ns1__motoDbIdleData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__motoDbIdleData_(struct soap*, const char*, int, const struct __ns1__motoDbIdleData_ *, const char*);
SOAP_FMAC3 struct __ns1__motoDbIdleData_ * SOAP_FMAC4 soap_in___ns1__motoDbIdleData_(struct soap*, const char*, struct __ns1__motoDbIdleData_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__motoDbIdleData_(struct soap*, const struct __ns1__motoDbIdleData_ *, const char*, const char*);

#ifndef soap_write___ns1__motoDbIdleData_
#define soap_write___ns1__motoDbIdleData_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__motoDbIdleData_(soap, data),0) || soap_put___ns1__motoDbIdleData_(soap, data, "-ns1:motoDbIdleData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__motoDbIdleData_ * SOAP_FMAC4 soap_get___ns1__motoDbIdleData_(struct soap*, struct __ns1__motoDbIdleData_ *, const char*, const char*);

#ifndef soap_read___ns1__motoDbIdleData_
#define soap_read___ns1__motoDbIdleData_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__motoDbIdleData_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__motoDbIdleData_ * SOAP_FMAC2 soap_instantiate___ns1__motoDbIdleData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__motoDbIdleData_ * soap_new___ns1__motoDbIdleData_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__motoDbIdleData_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__motoDbIdleData_ * soap_new_req___ns1__motoDbIdleData_(struct soap *soap) { struct __ns1__motoDbIdleData_ *_p = soap_instantiate___ns1__motoDbIdleData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__motoDbIdleData_(soap, _p); } return _p; }

inline struct __ns1__motoDbIdleData_ * soap_new_set___ns1__motoDbIdleData_(struct soap *soap, ns1__motoDbIdleData *ns1__motoDbIdleData_) { struct __ns1__motoDbIdleData_ *_p = soap_instantiate___ns1__motoDbIdleData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__motoDbIdleData_(soap, _p); _p->ns1__motoDbIdleData_ = ns1__motoDbIdleData_; } return _p; }

inline void soap_delete___ns1__motoDbIdleData_(struct soap *soap, struct __ns1__motoDbIdleData_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__motoDbIdleData_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__vmasData_
#define SOAP_TYPE___ns1__vmasData_ (288)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__vmasData_(struct soap*, struct __ns1__vmasData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__vmasData_(struct soap*, const struct __ns1__vmasData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__vmasData_(struct soap*, const char*, int, const struct __ns1__vmasData_ *, const char*);
SOAP_FMAC3 struct __ns1__vmasData_ * SOAP_FMAC4 soap_in___ns1__vmasData_(struct soap*, const char*, struct __ns1__vmasData_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__vmasData_(struct soap*, const struct __ns1__vmasData_ *, const char*, const char*);

#ifndef soap_write___ns1__vmasData_
#define soap_write___ns1__vmasData_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__vmasData_(soap, data),0) || soap_put___ns1__vmasData_(soap, data, "-ns1:vmasData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__vmasData_ * SOAP_FMAC4 soap_get___ns1__vmasData_(struct soap*, struct __ns1__vmasData_ *, const char*, const char*);

#ifndef soap_read___ns1__vmasData_
#define soap_read___ns1__vmasData_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__vmasData_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__vmasData_ * SOAP_FMAC2 soap_instantiate___ns1__vmasData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__vmasData_ * soap_new___ns1__vmasData_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__vmasData_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__vmasData_ * soap_new_req___ns1__vmasData_(struct soap *soap) { struct __ns1__vmasData_ *_p = soap_instantiate___ns1__vmasData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__vmasData_(soap, _p); } return _p; }

inline struct __ns1__vmasData_ * soap_new_set___ns1__vmasData_(struct soap *soap, ns1__vmasData *ns1__vmasData_) { struct __ns1__vmasData_ *_p = soap_instantiate___ns1__vmasData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__vmasData_(soap, _p); _p->ns1__vmasData_ = ns1__vmasData_; } return _p; }

inline void soap_delete___ns1__vmasData_(struct soap *soap, struct __ns1__vmasData_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__vmasData_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__loadDownData_
#define SOAP_TYPE___ns1__loadDownData_ (286)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__loadDownData_(struct soap*, struct __ns1__loadDownData_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__loadDownData_(struct soap*, const struct __ns1__loadDownData_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__loadDownData_(struct soap*, const char*, int, const struct __ns1__loadDownData_ *, const char*);
SOAP_FMAC3 struct __ns1__loadDownData_ * SOAP_FMAC4 soap_in___ns1__loadDownData_(struct soap*, const char*, struct __ns1__loadDownData_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__loadDownData_(struct soap*, const struct __ns1__loadDownData_ *, const char*, const char*);

#ifndef soap_write___ns1__loadDownData_
#define soap_write___ns1__loadDownData_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__loadDownData_(soap, data),0) || soap_put___ns1__loadDownData_(soap, data, "-ns1:loadDownData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__loadDownData_ * SOAP_FMAC4 soap_get___ns1__loadDownData_(struct soap*, struct __ns1__loadDownData_ *, const char*, const char*);

#ifndef soap_read___ns1__loadDownData_
#define soap_read___ns1__loadDownData_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__loadDownData_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__loadDownData_ * SOAP_FMAC2 soap_instantiate___ns1__loadDownData_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__loadDownData_ * soap_new___ns1__loadDownData_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__loadDownData_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__loadDownData_ * soap_new_req___ns1__loadDownData_(struct soap *soap) { struct __ns1__loadDownData_ *_p = soap_instantiate___ns1__loadDownData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__loadDownData_(soap, _p); } return _p; }

inline struct __ns1__loadDownData_ * soap_new_set___ns1__loadDownData_(struct soap *soap, ns1__loadDownData *ns1__loadDownData_) { struct __ns1__loadDownData_ *_p = soap_instantiate___ns1__loadDownData_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__loadDownData_(soap, _p); _p->ns1__loadDownData_ = ns1__loadDownData_; } return _p; }

inline void soap_delete___ns1__loadDownData_(struct soap *soap, struct __ns1__loadDownData_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__loadDownData_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__lightproofSmokeDataLog_USCOREFC_
#define SOAP_TYPE___ns1__lightproofSmokeDataLog_USCOREFC_ (284)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__lightproofSmokeDataLog_USCOREFC_(struct soap*, struct __ns1__lightproofSmokeDataLog_USCOREFC_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__lightproofSmokeDataLog_USCOREFC_(struct soap*, const struct __ns1__lightproofSmokeDataLog_USCOREFC_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__lightproofSmokeDataLog_USCOREFC_(struct soap*, const char*, int, const struct __ns1__lightproofSmokeDataLog_USCOREFC_ *, const char*);
SOAP_FMAC3 struct __ns1__lightproofSmokeDataLog_USCOREFC_ * SOAP_FMAC4 soap_in___ns1__lightproofSmokeDataLog_USCOREFC_(struct soap*, const char*, struct __ns1__lightproofSmokeDataLog_USCOREFC_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__lightproofSmokeDataLog_USCOREFC_(struct soap*, const struct __ns1__lightproofSmokeDataLog_USCOREFC_ *, const char*, const char*);

#ifndef soap_write___ns1__lightproofSmokeDataLog_USCOREFC_
#define soap_write___ns1__lightproofSmokeDataLog_USCOREFC_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__lightproofSmokeDataLog_USCOREFC_(soap, data),0) || soap_put___ns1__lightproofSmokeDataLog_USCOREFC_(soap, data, "-ns1:lightproofSmokeDataLog_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__lightproofSmokeDataLog_USCOREFC_ * SOAP_FMAC4 soap_get___ns1__lightproofSmokeDataLog_USCOREFC_(struct soap*, struct __ns1__lightproofSmokeDataLog_USCOREFC_ *, const char*, const char*);

#ifndef soap_read___ns1__lightproofSmokeDataLog_USCOREFC_
#define soap_read___ns1__lightproofSmokeDataLog_USCOREFC_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__lightproofSmokeDataLog_USCOREFC_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__lightproofSmokeDataLog_USCOREFC_ * SOAP_FMAC2 soap_instantiate___ns1__lightproofSmokeDataLog_USCOREFC_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__lightproofSmokeDataLog_USCOREFC_ * soap_new___ns1__lightproofSmokeDataLog_USCOREFC_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__lightproofSmokeDataLog_USCOREFC_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__lightproofSmokeDataLog_USCOREFC_ * soap_new_req___ns1__lightproofSmokeDataLog_USCOREFC_(struct soap *soap) { struct __ns1__lightproofSmokeDataLog_USCOREFC_ *_p = soap_instantiate___ns1__lightproofSmokeDataLog_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeDataLog_USCOREFC_(soap, _p); } return _p; }

inline struct __ns1__lightproofSmokeDataLog_USCOREFC_ * soap_new_set___ns1__lightproofSmokeDataLog_USCOREFC_(struct soap *soap, ns1__lightproofSmokeDataLog_USCOREFC *ns1__lightproofSmokeDataLog_USCOREFC_) { struct __ns1__lightproofSmokeDataLog_USCOREFC_ *_p = soap_instantiate___ns1__lightproofSmokeDataLog_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeDataLog_USCOREFC_(soap, _p); _p->ns1__lightproofSmokeDataLog_USCOREFC_ = ns1__lightproofSmokeDataLog_USCOREFC_; } return _p; }

inline void soap_delete___ns1__lightproofSmokeDataLog_USCOREFC_(struct soap *soap, struct __ns1__lightproofSmokeDataLog_USCOREFC_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__lightproofSmokeDataLog_USCOREFC_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__pqfxySelfcheck_
#define SOAP_TYPE___ns1__pqfxySelfcheck_ (282)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__pqfxySelfcheck_(struct soap*, struct __ns1__pqfxySelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__pqfxySelfcheck_(struct soap*, const struct __ns1__pqfxySelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__pqfxySelfcheck_(struct soap*, const char*, int, const struct __ns1__pqfxySelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__pqfxySelfcheck_ * SOAP_FMAC4 soap_in___ns1__pqfxySelfcheck_(struct soap*, const char*, struct __ns1__pqfxySelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__pqfxySelfcheck_(struct soap*, const struct __ns1__pqfxySelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__pqfxySelfcheck_
#define soap_write___ns1__pqfxySelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__pqfxySelfcheck_(soap, data),0) || soap_put___ns1__pqfxySelfcheck_(soap, data, "-ns1:pqfxySelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__pqfxySelfcheck_ * SOAP_FMAC4 soap_get___ns1__pqfxySelfcheck_(struct soap*, struct __ns1__pqfxySelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__pqfxySelfcheck_
#define soap_read___ns1__pqfxySelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__pqfxySelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__pqfxySelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__pqfxySelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__pqfxySelfcheck_ * soap_new___ns1__pqfxySelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__pqfxySelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__pqfxySelfcheck_ * soap_new_req___ns1__pqfxySelfcheck_(struct soap *soap) { struct __ns1__pqfxySelfcheck_ *_p = soap_instantiate___ns1__pqfxySelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__pqfxySelfcheck_(soap, _p); } return _p; }

inline struct __ns1__pqfxySelfcheck_ * soap_new_set___ns1__pqfxySelfcheck_(struct soap *soap, ns1__pqfxySelfcheck *ns1__pqfxySelfcheck_) { struct __ns1__pqfxySelfcheck_ *_p = soap_instantiate___ns1__pqfxySelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__pqfxySelfcheck_(soap, _p); _p->ns1__pqfxySelfcheck_ = ns1__pqfxySelfcheck_; } return _p; }

inline void soap_delete___ns1__pqfxySelfcheck_(struct soap *soap, struct __ns1__pqfxySelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__pqfxySelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__hjcsgyqSelfcheck_
#define SOAP_TYPE___ns1__hjcsgyqSelfcheck_ (280)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__hjcsgyqSelfcheck_(struct soap*, struct __ns1__hjcsgyqSelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__hjcsgyqSelfcheck_(struct soap*, const struct __ns1__hjcsgyqSelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__hjcsgyqSelfcheck_(struct soap*, const char*, int, const struct __ns1__hjcsgyqSelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__hjcsgyqSelfcheck_ * SOAP_FMAC4 soap_in___ns1__hjcsgyqSelfcheck_(struct soap*, const char*, struct __ns1__hjcsgyqSelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__hjcsgyqSelfcheck_(struct soap*, const struct __ns1__hjcsgyqSelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__hjcsgyqSelfcheck_
#define soap_write___ns1__hjcsgyqSelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__hjcsgyqSelfcheck_(soap, data),0) || soap_put___ns1__hjcsgyqSelfcheck_(soap, data, "-ns1:hjcsgyqSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__hjcsgyqSelfcheck_ * SOAP_FMAC4 soap_get___ns1__hjcsgyqSelfcheck_(struct soap*, struct __ns1__hjcsgyqSelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__hjcsgyqSelfcheck_
#define soap_read___ns1__hjcsgyqSelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__hjcsgyqSelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__hjcsgyqSelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__hjcsgyqSelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__hjcsgyqSelfcheck_ * soap_new___ns1__hjcsgyqSelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__hjcsgyqSelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__hjcsgyqSelfcheck_ * soap_new_req___ns1__hjcsgyqSelfcheck_(struct soap *soap) { struct __ns1__hjcsgyqSelfcheck_ *_p = soap_instantiate___ns1__hjcsgyqSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__hjcsgyqSelfcheck_(soap, _p); } return _p; }

inline struct __ns1__hjcsgyqSelfcheck_ * soap_new_set___ns1__hjcsgyqSelfcheck_(struct soap *soap, ns1__hjcsgyqSelfcheck *ns1__hjcsgyqSelfcheck_) { struct __ns1__hjcsgyqSelfcheck_ *_p = soap_instantiate___ns1__hjcsgyqSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__hjcsgyqSelfcheck_(soap, _p); _p->ns1__hjcsgyqSelfcheck_ = ns1__hjcsgyqSelfcheck_; } return _p; }

inline void soap_delete___ns1__hjcsgyqSelfcheck_(struct soap *soap, struct __ns1__hjcsgyqSelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__hjcsgyqSelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__cycdyhwAdjust_
#define SOAP_TYPE___ns1__cycdyhwAdjust_ (278)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__cycdyhwAdjust_(struct soap*, struct __ns1__cycdyhwAdjust_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__cycdyhwAdjust_(struct soap*, const struct __ns1__cycdyhwAdjust_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__cycdyhwAdjust_(struct soap*, const char*, int, const struct __ns1__cycdyhwAdjust_ *, const char*);
SOAP_FMAC3 struct __ns1__cycdyhwAdjust_ * SOAP_FMAC4 soap_in___ns1__cycdyhwAdjust_(struct soap*, const char*, struct __ns1__cycdyhwAdjust_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__cycdyhwAdjust_(struct soap*, const struct __ns1__cycdyhwAdjust_ *, const char*, const char*);

#ifndef soap_write___ns1__cycdyhwAdjust_
#define soap_write___ns1__cycdyhwAdjust_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__cycdyhwAdjust_(soap, data),0) || soap_put___ns1__cycdyhwAdjust_(soap, data, "-ns1:cycdyhwAdjust", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__cycdyhwAdjust_ * SOAP_FMAC4 soap_get___ns1__cycdyhwAdjust_(struct soap*, struct __ns1__cycdyhwAdjust_ *, const char*, const char*);

#ifndef soap_read___ns1__cycdyhwAdjust_
#define soap_read___ns1__cycdyhwAdjust_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__cycdyhwAdjust_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__cycdyhwAdjust_ * SOAP_FMAC2 soap_instantiate___ns1__cycdyhwAdjust_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__cycdyhwAdjust_ * soap_new___ns1__cycdyhwAdjust_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__cycdyhwAdjust_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__cycdyhwAdjust_ * soap_new_req___ns1__cycdyhwAdjust_(struct soap *soap) { struct __ns1__cycdyhwAdjust_ *_p = soap_instantiate___ns1__cycdyhwAdjust_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cycdyhwAdjust_(soap, _p); } return _p; }

inline struct __ns1__cycdyhwAdjust_ * soap_new_set___ns1__cycdyhwAdjust_(struct soap *soap, ns1__cycdyhwAdjust *ns1__cycdyhwAdjust_) { struct __ns1__cycdyhwAdjust_ *_p = soap_instantiate___ns1__cycdyhwAdjust_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cycdyhwAdjust_(soap, _p); _p->ns1__cycdyhwAdjust_ = ns1__cycdyhwAdjust_; } return _p; }

inline void soap_delete___ns1__cycdyhwAdjust_(struct soap *soap, struct __ns1__cycdyhwAdjust_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__cycdyhwAdjust_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__software2centerNew_USCOREFC_
#define SOAP_TYPE___ns1__software2centerNew_USCOREFC_ (276)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__software2centerNew_USCOREFC_(struct soap*, struct __ns1__software2centerNew_USCOREFC_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__software2centerNew_USCOREFC_(struct soap*, const struct __ns1__software2centerNew_USCOREFC_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__software2centerNew_USCOREFC_(struct soap*, const char*, int, const struct __ns1__software2centerNew_USCOREFC_ *, const char*);
SOAP_FMAC3 struct __ns1__software2centerNew_USCOREFC_ * SOAP_FMAC4 soap_in___ns1__software2centerNew_USCOREFC_(struct soap*, const char*, struct __ns1__software2centerNew_USCOREFC_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__software2centerNew_USCOREFC_(struct soap*, const struct __ns1__software2centerNew_USCOREFC_ *, const char*, const char*);

#ifndef soap_write___ns1__software2centerNew_USCOREFC_
#define soap_write___ns1__software2centerNew_USCOREFC_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__software2centerNew_USCOREFC_(soap, data),0) || soap_put___ns1__software2centerNew_USCOREFC_(soap, data, "-ns1:software2centerNew_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__software2centerNew_USCOREFC_ * SOAP_FMAC4 soap_get___ns1__software2centerNew_USCOREFC_(struct soap*, struct __ns1__software2centerNew_USCOREFC_ *, const char*, const char*);

#ifndef soap_read___ns1__software2centerNew_USCOREFC_
#define soap_read___ns1__software2centerNew_USCOREFC_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__software2centerNew_USCOREFC_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__software2centerNew_USCOREFC_ * SOAP_FMAC2 soap_instantiate___ns1__software2centerNew_USCOREFC_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__software2centerNew_USCOREFC_ * soap_new___ns1__software2centerNew_USCOREFC_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__software2centerNew_USCOREFC_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__software2centerNew_USCOREFC_ * soap_new_req___ns1__software2centerNew_USCOREFC_(struct soap *soap) { struct __ns1__software2centerNew_USCOREFC_ *_p = soap_instantiate___ns1__software2centerNew_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__software2centerNew_USCOREFC_(soap, _p); } return _p; }

inline struct __ns1__software2centerNew_USCOREFC_ * soap_new_set___ns1__software2centerNew_USCOREFC_(struct soap *soap, ns1__software2centerNew_USCOREFC *ns1__software2centerNew_USCOREFC_) { struct __ns1__software2centerNew_USCOREFC_ *_p = soap_instantiate___ns1__software2centerNew_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__software2centerNew_USCOREFC_(soap, _p); _p->ns1__software2centerNew_USCOREFC_ = ns1__software2centerNew_USCOREFC_; } return _p; }

inline void soap_delete___ns1__software2centerNew_USCOREFC_(struct soap *soap, struct __ns1__software2centerNew_USCOREFC_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__software2centerNew_USCOREFC_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getCarInfo_USCOREFC_
#define SOAP_TYPE___ns1__getCarInfo_USCOREFC_ (274)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getCarInfo_USCOREFC_(struct soap*, struct __ns1__getCarInfo_USCOREFC_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getCarInfo_USCOREFC_(struct soap*, const struct __ns1__getCarInfo_USCOREFC_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getCarInfo_USCOREFC_(struct soap*, const char*, int, const struct __ns1__getCarInfo_USCOREFC_ *, const char*);
SOAP_FMAC3 struct __ns1__getCarInfo_USCOREFC_ * SOAP_FMAC4 soap_in___ns1__getCarInfo_USCOREFC_(struct soap*, const char*, struct __ns1__getCarInfo_USCOREFC_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getCarInfo_USCOREFC_(struct soap*, const struct __ns1__getCarInfo_USCOREFC_ *, const char*, const char*);

#ifndef soap_write___ns1__getCarInfo_USCOREFC_
#define soap_write___ns1__getCarInfo_USCOREFC_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__getCarInfo_USCOREFC_(soap, data),0) || soap_put___ns1__getCarInfo_USCOREFC_(soap, data, "-ns1:getCarInfo_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__getCarInfo_USCOREFC_ * SOAP_FMAC4 soap_get___ns1__getCarInfo_USCOREFC_(struct soap*, struct __ns1__getCarInfo_USCOREFC_ *, const char*, const char*);

#ifndef soap_read___ns1__getCarInfo_USCOREFC_
#define soap_read___ns1__getCarInfo_USCOREFC_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getCarInfo_USCOREFC_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__getCarInfo_USCOREFC_ * SOAP_FMAC2 soap_instantiate___ns1__getCarInfo_USCOREFC_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__getCarInfo_USCOREFC_ * soap_new___ns1__getCarInfo_USCOREFC_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__getCarInfo_USCOREFC_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__getCarInfo_USCOREFC_ * soap_new_req___ns1__getCarInfo_USCOREFC_(struct soap *soap) { struct __ns1__getCarInfo_USCOREFC_ *_p = soap_instantiate___ns1__getCarInfo_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getCarInfo_USCOREFC_(soap, _p); } return _p; }

inline struct __ns1__getCarInfo_USCOREFC_ * soap_new_set___ns1__getCarInfo_USCOREFC_(struct soap *soap, ns1__getCarInfo_USCOREFC *ns1__getCarInfo_USCOREFC_) { struct __ns1__getCarInfo_USCOREFC_ *_p = soap_instantiate___ns1__getCarInfo_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getCarInfo_USCOREFC_(soap, _p); _p->ns1__getCarInfo_USCOREFC_ = ns1__getCarInfo_USCOREFC_; } return _p; }

inline void soap_delete___ns1__getCarInfo_USCOREFC_(struct soap *soap, struct __ns1__getCarInfo_USCOREFC_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getCarInfo_USCOREFC_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__obdResultLog_
#define SOAP_TYPE___ns1__obdResultLog_ (272)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__obdResultLog_(struct soap*, struct __ns1__obdResultLog_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__obdResultLog_(struct soap*, const struct __ns1__obdResultLog_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__obdResultLog_(struct soap*, const char*, int, const struct __ns1__obdResultLog_ *, const char*);
SOAP_FMAC3 struct __ns1__obdResultLog_ * SOAP_FMAC4 soap_in___ns1__obdResultLog_(struct soap*, const char*, struct __ns1__obdResultLog_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__obdResultLog_(struct soap*, const struct __ns1__obdResultLog_ *, const char*, const char*);

#ifndef soap_write___ns1__obdResultLog_
#define soap_write___ns1__obdResultLog_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__obdResultLog_(soap, data),0) || soap_put___ns1__obdResultLog_(soap, data, "-ns1:obdResultLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__obdResultLog_ * SOAP_FMAC4 soap_get___ns1__obdResultLog_(struct soap*, struct __ns1__obdResultLog_ *, const char*, const char*);

#ifndef soap_read___ns1__obdResultLog_
#define soap_read___ns1__obdResultLog_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__obdResultLog_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__obdResultLog_ * SOAP_FMAC2 soap_instantiate___ns1__obdResultLog_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__obdResultLog_ * soap_new___ns1__obdResultLog_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__obdResultLog_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__obdResultLog_ * soap_new_req___ns1__obdResultLog_(struct soap *soap) { struct __ns1__obdResultLog_ *_p = soap_instantiate___ns1__obdResultLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__obdResultLog_(soap, _p); } return _p; }

inline struct __ns1__obdResultLog_ * soap_new_set___ns1__obdResultLog_(struct soap *soap, ns1__obdResultLog *ns1__obdResultLog_) { struct __ns1__obdResultLog_ *_p = soap_instantiate___ns1__obdResultLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__obdResultLog_(soap, _p); _p->ns1__obdResultLog_ = ns1__obdResultLog_; } return _p; }

inline void soap_delete___ns1__obdResultLog_(struct soap *soap, struct __ns1__obdResultLog_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__obdResultLog_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__dyhwAdjust_
#define SOAP_TYPE___ns1__dyhwAdjust_ (270)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__dyhwAdjust_(struct soap*, struct __ns1__dyhwAdjust_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__dyhwAdjust_(struct soap*, const struct __ns1__dyhwAdjust_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__dyhwAdjust_(struct soap*, const char*, int, const struct __ns1__dyhwAdjust_ *, const char*);
SOAP_FMAC3 struct __ns1__dyhwAdjust_ * SOAP_FMAC4 soap_in___ns1__dyhwAdjust_(struct soap*, const char*, struct __ns1__dyhwAdjust_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__dyhwAdjust_(struct soap*, const struct __ns1__dyhwAdjust_ *, const char*, const char*);

#ifndef soap_write___ns1__dyhwAdjust_
#define soap_write___ns1__dyhwAdjust_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__dyhwAdjust_(soap, data),0) || soap_put___ns1__dyhwAdjust_(soap, data, "-ns1:dyhwAdjust", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__dyhwAdjust_ * SOAP_FMAC4 soap_get___ns1__dyhwAdjust_(struct soap*, struct __ns1__dyhwAdjust_ *, const char*, const char*);

#ifndef soap_read___ns1__dyhwAdjust_
#define soap_read___ns1__dyhwAdjust_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__dyhwAdjust_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__dyhwAdjust_ * SOAP_FMAC2 soap_instantiate___ns1__dyhwAdjust_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__dyhwAdjust_ * soap_new___ns1__dyhwAdjust_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__dyhwAdjust_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__dyhwAdjust_ * soap_new_req___ns1__dyhwAdjust_(struct soap *soap) { struct __ns1__dyhwAdjust_ *_p = soap_instantiate___ns1__dyhwAdjust_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__dyhwAdjust_(soap, _p); } return _p; }

inline struct __ns1__dyhwAdjust_ * soap_new_set___ns1__dyhwAdjust_(struct soap *soap, ns1__dyhwAdjust *ns1__dyhwAdjust_) { struct __ns1__dyhwAdjust_ *_p = soap_instantiate___ns1__dyhwAdjust_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__dyhwAdjust_(soap, _p); _p->ns1__dyhwAdjust_ = ns1__dyhwAdjust_; } return _p; }

inline void soap_delete___ns1__dyhwAdjust_(struct soap *soap, struct __ns1__dyhwAdjust_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__dyhwAdjust_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__loadDownLog_
#define SOAP_TYPE___ns1__loadDownLog_ (268)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__loadDownLog_(struct soap*, struct __ns1__loadDownLog_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__loadDownLog_(struct soap*, const struct __ns1__loadDownLog_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__loadDownLog_(struct soap*, const char*, int, const struct __ns1__loadDownLog_ *, const char*);
SOAP_FMAC3 struct __ns1__loadDownLog_ * SOAP_FMAC4 soap_in___ns1__loadDownLog_(struct soap*, const char*, struct __ns1__loadDownLog_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__loadDownLog_(struct soap*, const struct __ns1__loadDownLog_ *, const char*, const char*);

#ifndef soap_write___ns1__loadDownLog_
#define soap_write___ns1__loadDownLog_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__loadDownLog_(soap, data),0) || soap_put___ns1__loadDownLog_(soap, data, "-ns1:loadDownLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__loadDownLog_ * SOAP_FMAC4 soap_get___ns1__loadDownLog_(struct soap*, struct __ns1__loadDownLog_ *, const char*, const char*);

#ifndef soap_read___ns1__loadDownLog_
#define soap_read___ns1__loadDownLog_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__loadDownLog_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__loadDownLog_ * SOAP_FMAC2 soap_instantiate___ns1__loadDownLog_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__loadDownLog_ * soap_new___ns1__loadDownLog_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__loadDownLog_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__loadDownLog_ * soap_new_req___ns1__loadDownLog_(struct soap *soap) { struct __ns1__loadDownLog_ *_p = soap_instantiate___ns1__loadDownLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__loadDownLog_(soap, _p); } return _p; }

inline struct __ns1__loadDownLog_ * soap_new_set___ns1__loadDownLog_(struct soap *soap, ns1__loadDownLog *ns1__loadDownLog_) { struct __ns1__loadDownLog_ *_p = soap_instantiate___ns1__loadDownLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__loadDownLog_(soap, _p); _p->ns1__loadDownLog_ = ns1__loadDownLog_; } return _p; }

inline void soap_delete___ns1__loadDownLog_(struct soap *soap, struct __ns1__loadDownLog_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__loadDownLog_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__dyhwSelfcheck_
#define SOAP_TYPE___ns1__dyhwSelfcheck_ (266)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__dyhwSelfcheck_(struct soap*, struct __ns1__dyhwSelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__dyhwSelfcheck_(struct soap*, const struct __ns1__dyhwSelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__dyhwSelfcheck_(struct soap*, const char*, int, const struct __ns1__dyhwSelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__dyhwSelfcheck_ * SOAP_FMAC4 soap_in___ns1__dyhwSelfcheck_(struct soap*, const char*, struct __ns1__dyhwSelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__dyhwSelfcheck_(struct soap*, const struct __ns1__dyhwSelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__dyhwSelfcheck_
#define soap_write___ns1__dyhwSelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__dyhwSelfcheck_(soap, data),0) || soap_put___ns1__dyhwSelfcheck_(soap, data, "-ns1:dyhwSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__dyhwSelfcheck_ * SOAP_FMAC4 soap_get___ns1__dyhwSelfcheck_(struct soap*, struct __ns1__dyhwSelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__dyhwSelfcheck_
#define soap_read___ns1__dyhwSelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__dyhwSelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__dyhwSelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__dyhwSelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__dyhwSelfcheck_ * soap_new___ns1__dyhwSelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__dyhwSelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__dyhwSelfcheck_ * soap_new_req___ns1__dyhwSelfcheck_(struct soap *soap) { struct __ns1__dyhwSelfcheck_ *_p = soap_instantiate___ns1__dyhwSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__dyhwSelfcheck_(soap, _p); } return _p; }

inline struct __ns1__dyhwSelfcheck_ * soap_new_set___ns1__dyhwSelfcheck_(struct soap *soap, ns1__dyhwSelfcheck *ns1__dyhwSelfcheck_) { struct __ns1__dyhwSelfcheck_ *_p = soap_instantiate___ns1__dyhwSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__dyhwSelfcheck_(soap, _p); _p->ns1__dyhwSelfcheck_ = ns1__dyhwSelfcheck_; } return _p; }

inline void soap_delete___ns1__dyhwSelfcheck_(struct soap *soap, struct __ns1__dyhwSelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__dyhwSelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__ydjSelfcheck_
#define SOAP_TYPE___ns1__ydjSelfcheck_ (264)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ydjSelfcheck_(struct soap*, struct __ns1__ydjSelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ydjSelfcheck_(struct soap*, const struct __ns1__ydjSelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ydjSelfcheck_(struct soap*, const char*, int, const struct __ns1__ydjSelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__ydjSelfcheck_ * SOAP_FMAC4 soap_in___ns1__ydjSelfcheck_(struct soap*, const char*, struct __ns1__ydjSelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ydjSelfcheck_(struct soap*, const struct __ns1__ydjSelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__ydjSelfcheck_
#define soap_write___ns1__ydjSelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__ydjSelfcheck_(soap, data),0) || soap_put___ns1__ydjSelfcheck_(soap, data, "-ns1:ydjSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__ydjSelfcheck_ * SOAP_FMAC4 soap_get___ns1__ydjSelfcheck_(struct soap*, struct __ns1__ydjSelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__ydjSelfcheck_
#define soap_read___ns1__ydjSelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__ydjSelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__ydjSelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__ydjSelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ydjSelfcheck_ * soap_new___ns1__ydjSelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__ydjSelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__ydjSelfcheck_ * soap_new_req___ns1__ydjSelfcheck_(struct soap *soap) { struct __ns1__ydjSelfcheck_ *_p = soap_instantiate___ns1__ydjSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__ydjSelfcheck_(soap, _p); } return _p; }

inline struct __ns1__ydjSelfcheck_ * soap_new_set___ns1__ydjSelfcheck_(struct soap *soap, ns1__ydjSelfcheck *ns1__ydjSelfcheck_) { struct __ns1__ydjSelfcheck_ *_p = soap_instantiate___ns1__ydjSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__ydjSelfcheck_(soap, _p); _p->ns1__ydjSelfcheck_ = ns1__ydjSelfcheck_; } return _p; }

inline void soap_delete___ns1__ydjSelfcheck_(struct soap *soap, struct __ns1__ydjSelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__ydjSelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__vmasLog_
#define SOAP_TYPE___ns1__vmasLog_ (262)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__vmasLog_(struct soap*, struct __ns1__vmasLog_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__vmasLog_(struct soap*, const struct __ns1__vmasLog_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__vmasLog_(struct soap*, const char*, int, const struct __ns1__vmasLog_ *, const char*);
SOAP_FMAC3 struct __ns1__vmasLog_ * SOAP_FMAC4 soap_in___ns1__vmasLog_(struct soap*, const char*, struct __ns1__vmasLog_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__vmasLog_(struct soap*, const struct __ns1__vmasLog_ *, const char*, const char*);

#ifndef soap_write___ns1__vmasLog_
#define soap_write___ns1__vmasLog_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__vmasLog_(soap, data),0) || soap_put___ns1__vmasLog_(soap, data, "-ns1:vmasLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__vmasLog_ * SOAP_FMAC4 soap_get___ns1__vmasLog_(struct soap*, struct __ns1__vmasLog_ *, const char*, const char*);

#ifndef soap_read___ns1__vmasLog_
#define soap_read___ns1__vmasLog_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__vmasLog_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__vmasLog_ * SOAP_FMAC2 soap_instantiate___ns1__vmasLog_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__vmasLog_ * soap_new___ns1__vmasLog_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__vmasLog_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__vmasLog_ * soap_new_req___ns1__vmasLog_(struct soap *soap) { struct __ns1__vmasLog_ *_p = soap_instantiate___ns1__vmasLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__vmasLog_(soap, _p); } return _p; }

inline struct __ns1__vmasLog_ * soap_new_set___ns1__vmasLog_(struct soap *soap, ns1__vmasLog *ns1__vmasLog_) { struct __ns1__vmasLog_ *_p = soap_instantiate___ns1__vmasLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__vmasLog_(soap, _p); _p->ns1__vmasLog_ = ns1__vmasLog_; } return _p; }

inline void soap_delete___ns1__vmasLog_(struct soap *soap, struct __ns1__vmasLog_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__vmasLog_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__doubleIdleLog_USCOREFC_
#define SOAP_TYPE___ns1__doubleIdleLog_USCOREFC_ (260)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__doubleIdleLog_USCOREFC_(struct soap*, struct __ns1__doubleIdleLog_USCOREFC_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__doubleIdleLog_USCOREFC_(struct soap*, const struct __ns1__doubleIdleLog_USCOREFC_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__doubleIdleLog_USCOREFC_(struct soap*, const char*, int, const struct __ns1__doubleIdleLog_USCOREFC_ *, const char*);
SOAP_FMAC3 struct __ns1__doubleIdleLog_USCOREFC_ * SOAP_FMAC4 soap_in___ns1__doubleIdleLog_USCOREFC_(struct soap*, const char*, struct __ns1__doubleIdleLog_USCOREFC_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__doubleIdleLog_USCOREFC_(struct soap*, const struct __ns1__doubleIdleLog_USCOREFC_ *, const char*, const char*);

#ifndef soap_write___ns1__doubleIdleLog_USCOREFC_
#define soap_write___ns1__doubleIdleLog_USCOREFC_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__doubleIdleLog_USCOREFC_(soap, data),0) || soap_put___ns1__doubleIdleLog_USCOREFC_(soap, data, "-ns1:doubleIdleLog_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__doubleIdleLog_USCOREFC_ * SOAP_FMAC4 soap_get___ns1__doubleIdleLog_USCOREFC_(struct soap*, struct __ns1__doubleIdleLog_USCOREFC_ *, const char*, const char*);

#ifndef soap_read___ns1__doubleIdleLog_USCOREFC_
#define soap_read___ns1__doubleIdleLog_USCOREFC_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__doubleIdleLog_USCOREFC_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__doubleIdleLog_USCOREFC_ * SOAP_FMAC2 soap_instantiate___ns1__doubleIdleLog_USCOREFC_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__doubleIdleLog_USCOREFC_ * soap_new___ns1__doubleIdleLog_USCOREFC_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__doubleIdleLog_USCOREFC_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__doubleIdleLog_USCOREFC_ * soap_new_req___ns1__doubleIdleLog_USCOREFC_(struct soap *soap) { struct __ns1__doubleIdleLog_USCOREFC_ *_p = soap_instantiate___ns1__doubleIdleLog_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleLog_USCOREFC_(soap, _p); } return _p; }

inline struct __ns1__doubleIdleLog_USCOREFC_ * soap_new_set___ns1__doubleIdleLog_USCOREFC_(struct soap *soap, ns1__doubleIdleLog_USCOREFC *ns1__doubleIdleLog_USCOREFC_) { struct __ns1__doubleIdleLog_USCOREFC_ *_p = soap_instantiate___ns1__doubleIdleLog_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleLog_USCOREFC_(soap, _p); _p->ns1__doubleIdleLog_USCOREFC_ = ns1__doubleIdleLog_USCOREFC_; } return _p; }

inline void soap_delete___ns1__doubleIdleLog_USCOREFC_(struct soap *soap, struct __ns1__doubleIdleLog_USCOREFC_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__doubleIdleLog_USCOREFC_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__obdResult_
#define SOAP_TYPE___ns1__obdResult_ (258)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__obdResult_(struct soap*, struct __ns1__obdResult_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__obdResult_(struct soap*, const struct __ns1__obdResult_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__obdResult_(struct soap*, const char*, int, const struct __ns1__obdResult_ *, const char*);
SOAP_FMAC3 struct __ns1__obdResult_ * SOAP_FMAC4 soap_in___ns1__obdResult_(struct soap*, const char*, struct __ns1__obdResult_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__obdResult_(struct soap*, const struct __ns1__obdResult_ *, const char*, const char*);

#ifndef soap_write___ns1__obdResult_
#define soap_write___ns1__obdResult_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__obdResult_(soap, data),0) || soap_put___ns1__obdResult_(soap, data, "-ns1:obdResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__obdResult_ * SOAP_FMAC4 soap_get___ns1__obdResult_(struct soap*, struct __ns1__obdResult_ *, const char*, const char*);

#ifndef soap_read___ns1__obdResult_
#define soap_read___ns1__obdResult_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__obdResult_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__obdResult_ * SOAP_FMAC2 soap_instantiate___ns1__obdResult_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__obdResult_ * soap_new___ns1__obdResult_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__obdResult_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__obdResult_ * soap_new_req___ns1__obdResult_(struct soap *soap) { struct __ns1__obdResult_ *_p = soap_instantiate___ns1__obdResult_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__obdResult_(soap, _p); } return _p; }

inline struct __ns1__obdResult_ * soap_new_set___ns1__obdResult_(struct soap *soap, ns1__obdResult *ns1__obdResult_) { struct __ns1__obdResult_ *_p = soap_instantiate___ns1__obdResult_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__obdResult_(soap, _p); _p->ns1__obdResult_ = ns1__obdResult_; } return _p; }

inline void soap_delete___ns1__obdResult_(struct soap *soap, struct __ns1__obdResult_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__obdResult_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__cgjSelfcheck_
#define SOAP_TYPE___ns1__cgjSelfcheck_ (256)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__cgjSelfcheck_(struct soap*, struct __ns1__cgjSelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__cgjSelfcheck_(struct soap*, const struct __ns1__cgjSelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__cgjSelfcheck_(struct soap*, const char*, int, const struct __ns1__cgjSelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__cgjSelfcheck_ * SOAP_FMAC4 soap_in___ns1__cgjSelfcheck_(struct soap*, const char*, struct __ns1__cgjSelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__cgjSelfcheck_(struct soap*, const struct __ns1__cgjSelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__cgjSelfcheck_
#define soap_write___ns1__cgjSelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__cgjSelfcheck_(soap, data),0) || soap_put___ns1__cgjSelfcheck_(soap, data, "-ns1:cgjSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__cgjSelfcheck_ * SOAP_FMAC4 soap_get___ns1__cgjSelfcheck_(struct soap*, struct __ns1__cgjSelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__cgjSelfcheck_
#define soap_read___ns1__cgjSelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__cgjSelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__cgjSelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__cgjSelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__cgjSelfcheck_ * soap_new___ns1__cgjSelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__cgjSelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__cgjSelfcheck_ * soap_new_req___ns1__cgjSelfcheck_(struct soap *soap) { struct __ns1__cgjSelfcheck_ *_p = soap_instantiate___ns1__cgjSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjSelfcheck_(soap, _p); } return _p; }

inline struct __ns1__cgjSelfcheck_ * soap_new_set___ns1__cgjSelfcheck_(struct soap *soap, ns1__cgjSelfcheck *ns1__cgjSelfcheck_) { struct __ns1__cgjSelfcheck_ *_p = soap_instantiate___ns1__cgjSelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjSelfcheck_(soap, _p); _p->ns1__cgjSelfcheck_ = ns1__cgjSelfcheck_; } return _p; }

inline void soap_delete___ns1__cgjSelfcheck_(struct soap *soap, struct __ns1__cgjSelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__cgjSelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__cgjLASelfcheck_
#define SOAP_TYPE___ns1__cgjLASelfcheck_ (254)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__cgjLASelfcheck_(struct soap*, struct __ns1__cgjLASelfcheck_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__cgjLASelfcheck_(struct soap*, const struct __ns1__cgjLASelfcheck_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__cgjLASelfcheck_(struct soap*, const char*, int, const struct __ns1__cgjLASelfcheck_ *, const char*);
SOAP_FMAC3 struct __ns1__cgjLASelfcheck_ * SOAP_FMAC4 soap_in___ns1__cgjLASelfcheck_(struct soap*, const char*, struct __ns1__cgjLASelfcheck_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__cgjLASelfcheck_(struct soap*, const struct __ns1__cgjLASelfcheck_ *, const char*, const char*);

#ifndef soap_write___ns1__cgjLASelfcheck_
#define soap_write___ns1__cgjLASelfcheck_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__cgjLASelfcheck_(soap, data),0) || soap_put___ns1__cgjLASelfcheck_(soap, data, "-ns1:cgjLASelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__cgjLASelfcheck_ * SOAP_FMAC4 soap_get___ns1__cgjLASelfcheck_(struct soap*, struct __ns1__cgjLASelfcheck_ *, const char*, const char*);

#ifndef soap_read___ns1__cgjLASelfcheck_
#define soap_read___ns1__cgjLASelfcheck_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__cgjLASelfcheck_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__cgjLASelfcheck_ * SOAP_FMAC2 soap_instantiate___ns1__cgjLASelfcheck_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__cgjLASelfcheck_ * soap_new___ns1__cgjLASelfcheck_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__cgjLASelfcheck_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__cgjLASelfcheck_ * soap_new_req___ns1__cgjLASelfcheck_(struct soap *soap) { struct __ns1__cgjLASelfcheck_ *_p = soap_instantiate___ns1__cgjLASelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjLASelfcheck_(soap, _p); } return _p; }

inline struct __ns1__cgjLASelfcheck_ * soap_new_set___ns1__cgjLASelfcheck_(struct soap *soap, ns1__cgjLASelfcheck *ns1__cgjLASelfcheck_) { struct __ns1__cgjLASelfcheck_ *_p = soap_instantiate___ns1__cgjLASelfcheck_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjLASelfcheck_(soap, _p); _p->ns1__cgjLASelfcheck_ = ns1__cgjLASelfcheck_; } return _p; }

inline void soap_delete___ns1__cgjLASelfcheck_(struct soap *soap, struct __ns1__cgjLASelfcheck_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__cgjLASelfcheck_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__doubleIdleData_USCOREFC_
#define SOAP_TYPE___ns1__doubleIdleData_USCOREFC_ (252)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__doubleIdleData_USCOREFC_(struct soap*, struct __ns1__doubleIdleData_USCOREFC_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__doubleIdleData_USCOREFC_(struct soap*, const struct __ns1__doubleIdleData_USCOREFC_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__doubleIdleData_USCOREFC_(struct soap*, const char*, int, const struct __ns1__doubleIdleData_USCOREFC_ *, const char*);
SOAP_FMAC3 struct __ns1__doubleIdleData_USCOREFC_ * SOAP_FMAC4 soap_in___ns1__doubleIdleData_USCOREFC_(struct soap*, const char*, struct __ns1__doubleIdleData_USCOREFC_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__doubleIdleData_USCOREFC_(struct soap*, const struct __ns1__doubleIdleData_USCOREFC_ *, const char*, const char*);

#ifndef soap_write___ns1__doubleIdleData_USCOREFC_
#define soap_write___ns1__doubleIdleData_USCOREFC_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__doubleIdleData_USCOREFC_(soap, data),0) || soap_put___ns1__doubleIdleData_USCOREFC_(soap, data, "-ns1:doubleIdleData_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__doubleIdleData_USCOREFC_ * SOAP_FMAC4 soap_get___ns1__doubleIdleData_USCOREFC_(struct soap*, struct __ns1__doubleIdleData_USCOREFC_ *, const char*, const char*);

#ifndef soap_read___ns1__doubleIdleData_USCOREFC_
#define soap_read___ns1__doubleIdleData_USCOREFC_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__doubleIdleData_USCOREFC_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__doubleIdleData_USCOREFC_ * SOAP_FMAC2 soap_instantiate___ns1__doubleIdleData_USCOREFC_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__doubleIdleData_USCOREFC_ * soap_new___ns1__doubleIdleData_USCOREFC_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__doubleIdleData_USCOREFC_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__doubleIdleData_USCOREFC_ * soap_new_req___ns1__doubleIdleData_USCOREFC_(struct soap *soap) { struct __ns1__doubleIdleData_USCOREFC_ *_p = soap_instantiate___ns1__doubleIdleData_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleData_USCOREFC_(soap, _p); } return _p; }

inline struct __ns1__doubleIdleData_USCOREFC_ * soap_new_set___ns1__doubleIdleData_USCOREFC_(struct soap *soap, ns1__doubleIdleData_USCOREFC *ns1__doubleIdleData_USCOREFC_) { struct __ns1__doubleIdleData_USCOREFC_ *_p = soap_instantiate___ns1__doubleIdleData_USCOREFC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleData_USCOREFC_(soap, _p); _p->ns1__doubleIdleData_USCOREFC_ = ns1__doubleIdleData_USCOREFC_; } return _p; }

inline void soap_delete___ns1__doubleIdleData_USCOREFC_(struct soap *soap, struct __ns1__doubleIdleData_USCOREFC_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__doubleIdleData_USCOREFC_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__bgAirHC_
#define SOAP_TYPE___ns1__bgAirHC_ (250)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__bgAirHC_(struct soap*, struct __ns1__bgAirHC_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__bgAirHC_(struct soap*, const struct __ns1__bgAirHC_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__bgAirHC_(struct soap*, const char*, int, const struct __ns1__bgAirHC_ *, const char*);
SOAP_FMAC3 struct __ns1__bgAirHC_ * SOAP_FMAC4 soap_in___ns1__bgAirHC_(struct soap*, const char*, struct __ns1__bgAirHC_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__bgAirHC_(struct soap*, const struct __ns1__bgAirHC_ *, const char*, const char*);

#ifndef soap_write___ns1__bgAirHC_
#define soap_write___ns1__bgAirHC_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__bgAirHC_(soap, data),0) || soap_put___ns1__bgAirHC_(soap, data, "-ns1:bgAirHC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__bgAirHC_ * SOAP_FMAC4 soap_get___ns1__bgAirHC_(struct soap*, struct __ns1__bgAirHC_ *, const char*, const char*);

#ifndef soap_read___ns1__bgAirHC_
#define soap_read___ns1__bgAirHC_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__bgAirHC_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__bgAirHC_ * SOAP_FMAC2 soap_instantiate___ns1__bgAirHC_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__bgAirHC_ * soap_new___ns1__bgAirHC_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__bgAirHC_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__bgAirHC_ * soap_new_req___ns1__bgAirHC_(struct soap *soap) { struct __ns1__bgAirHC_ *_p = soap_instantiate___ns1__bgAirHC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__bgAirHC_(soap, _p); } return _p; }

inline struct __ns1__bgAirHC_ * soap_new_set___ns1__bgAirHC_(struct soap *soap, ns1__bgAirHC *ns1__bgAirHC_) { struct __ns1__bgAirHC_ *_p = soap_instantiate___ns1__bgAirHC_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__bgAirHC_(soap, _p); _p->ns1__bgAirHC_ = ns1__bgAirHC_; } return _p; }

inline void soap_delete___ns1__bgAirHC_(struct soap *soap, struct __ns1__bgAirHC_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__bgAirHC_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__sendMessage_
#define SOAP_TYPE___ns1__sendMessage_ (248)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__sendMessage_(struct soap*, struct __ns1__sendMessage_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__sendMessage_(struct soap*, const struct __ns1__sendMessage_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__sendMessage_(struct soap*, const char*, int, const struct __ns1__sendMessage_ *, const char*);
SOAP_FMAC3 struct __ns1__sendMessage_ * SOAP_FMAC4 soap_in___ns1__sendMessage_(struct soap*, const char*, struct __ns1__sendMessage_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__sendMessage_(struct soap*, const struct __ns1__sendMessage_ *, const char*, const char*);

#ifndef soap_write___ns1__sendMessage_
#define soap_write___ns1__sendMessage_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__sendMessage_(soap, data),0) || soap_put___ns1__sendMessage_(soap, data, "-ns1:sendMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__sendMessage_ * SOAP_FMAC4 soap_get___ns1__sendMessage_(struct soap*, struct __ns1__sendMessage_ *, const char*, const char*);

#ifndef soap_read___ns1__sendMessage_
#define soap_read___ns1__sendMessage_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__sendMessage_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__sendMessage_ * SOAP_FMAC2 soap_instantiate___ns1__sendMessage_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__sendMessage_ * soap_new___ns1__sendMessage_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__sendMessage_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__sendMessage_ * soap_new_req___ns1__sendMessage_(struct soap *soap) { struct __ns1__sendMessage_ *_p = soap_instantiate___ns1__sendMessage_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sendMessage_(soap, _p); } return _p; }

inline struct __ns1__sendMessage_ * soap_new_set___ns1__sendMessage_(struct soap *soap, ns1__sendMessage *ns1__sendMessage_) { struct __ns1__sendMessage_ *_p = soap_instantiate___ns1__sendMessage_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sendMessage_(soap, _p); _p->ns1__sendMessage_ = ns1__sendMessage_; } return _p; }

inline void soap_delete___ns1__sendMessage_(struct soap *soap, struct __ns1__sendMessage_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__sendMessage_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getCarInfo_
#define SOAP_TYPE___ns1__getCarInfo_ (246)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getCarInfo_(struct soap*, struct __ns1__getCarInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getCarInfo_(struct soap*, const struct __ns1__getCarInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getCarInfo_(struct soap*, const char*, int, const struct __ns1__getCarInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__getCarInfo_ * SOAP_FMAC4 soap_in___ns1__getCarInfo_(struct soap*, const char*, struct __ns1__getCarInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getCarInfo_(struct soap*, const struct __ns1__getCarInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__getCarInfo_
#define soap_write___ns1__getCarInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__getCarInfo_(soap, data),0) || soap_put___ns1__getCarInfo_(soap, data, "-ns1:getCarInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__getCarInfo_ * SOAP_FMAC4 soap_get___ns1__getCarInfo_(struct soap*, struct __ns1__getCarInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__getCarInfo_
#define soap_read___ns1__getCarInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getCarInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__getCarInfo_ * SOAP_FMAC2 soap_instantiate___ns1__getCarInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__getCarInfo_ * soap_new___ns1__getCarInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__getCarInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__getCarInfo_ * soap_new_req___ns1__getCarInfo_(struct soap *soap) { struct __ns1__getCarInfo_ *_p = soap_instantiate___ns1__getCarInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getCarInfo_(soap, _p); } return _p; }

inline struct __ns1__getCarInfo_ * soap_new_set___ns1__getCarInfo_(struct soap *soap, ns1__getCarInfo *ns1__getCarInfo_) { struct __ns1__getCarInfo_ *_p = soap_instantiate___ns1__getCarInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getCarInfo_(soap, _p); _p->ns1__getCarInfo_ = ns1__getCarInfo_; } return _p; }

inline void soap_delete___ns1__getCarInfo_(struct soap *soap, struct __ns1__getCarInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getCarInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__lightproofSmokeLog_
#define SOAP_TYPE___ns1__lightproofSmokeLog_ (244)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__lightproofSmokeLog_(struct soap*, struct __ns1__lightproofSmokeLog_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__lightproofSmokeLog_(struct soap*, const struct __ns1__lightproofSmokeLog_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__lightproofSmokeLog_(struct soap*, const char*, int, const struct __ns1__lightproofSmokeLog_ *, const char*);
SOAP_FMAC3 struct __ns1__lightproofSmokeLog_ * SOAP_FMAC4 soap_in___ns1__lightproofSmokeLog_(struct soap*, const char*, struct __ns1__lightproofSmokeLog_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__lightproofSmokeLog_(struct soap*, const struct __ns1__lightproofSmokeLog_ *, const char*, const char*);

#ifndef soap_write___ns1__lightproofSmokeLog_
#define soap_write___ns1__lightproofSmokeLog_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__lightproofSmokeLog_(soap, data),0) || soap_put___ns1__lightproofSmokeLog_(soap, data, "-ns1:lightproofSmokeLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__lightproofSmokeLog_ * SOAP_FMAC4 soap_get___ns1__lightproofSmokeLog_(struct soap*, struct __ns1__lightproofSmokeLog_ *, const char*, const char*);

#ifndef soap_read___ns1__lightproofSmokeLog_
#define soap_read___ns1__lightproofSmokeLog_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__lightproofSmokeLog_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__lightproofSmokeLog_ * SOAP_FMAC2 soap_instantiate___ns1__lightproofSmokeLog_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__lightproofSmokeLog_ * soap_new___ns1__lightproofSmokeLog_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__lightproofSmokeLog_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__lightproofSmokeLog_ * soap_new_req___ns1__lightproofSmokeLog_(struct soap *soap) { struct __ns1__lightproofSmokeLog_ *_p = soap_instantiate___ns1__lightproofSmokeLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeLog_(soap, _p); } return _p; }

inline struct __ns1__lightproofSmokeLog_ * soap_new_set___ns1__lightproofSmokeLog_(struct soap *soap, ns1__lightproofSmokeLog *ns1__lightproofSmokeLog_) { struct __ns1__lightproofSmokeLog_ *_p = soap_instantiate___ns1__lightproofSmokeLog_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeLog_(soap, _p); _p->ns1__lightproofSmokeLog_ = ns1__lightproofSmokeLog_; } return _p; }

inline void soap_delete___ns1__lightproofSmokeLog_(struct soap *soap, struct __ns1__lightproofSmokeLog_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__lightproofSmokeLog_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__argChang_
#define SOAP_TYPE___ns1__argChang_ (242)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__argChang_(struct soap*, struct __ns1__argChang_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__argChang_(struct soap*, const struct __ns1__argChang_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__argChang_(struct soap*, const char*, int, const struct __ns1__argChang_ *, const char*);
SOAP_FMAC3 struct __ns1__argChang_ * SOAP_FMAC4 soap_in___ns1__argChang_(struct soap*, const char*, struct __ns1__argChang_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__argChang_(struct soap*, const struct __ns1__argChang_ *, const char*, const char*);

#ifndef soap_write___ns1__argChang_
#define soap_write___ns1__argChang_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__argChang_(soap, data),0) || soap_put___ns1__argChang_(soap, data, "-ns1:argChang", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__argChang_ * SOAP_FMAC4 soap_get___ns1__argChang_(struct soap*, struct __ns1__argChang_ *, const char*, const char*);

#ifndef soap_read___ns1__argChang_
#define soap_read___ns1__argChang_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__argChang_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__argChang_ * SOAP_FMAC2 soap_instantiate___ns1__argChang_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__argChang_ * soap_new___ns1__argChang_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__argChang_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__argChang_ * soap_new_req___ns1__argChang_(struct soap *soap) { struct __ns1__argChang_ *_p = soap_instantiate___ns1__argChang_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__argChang_(soap, _p); } return _p; }

inline struct __ns1__argChang_ * soap_new_set___ns1__argChang_(struct soap *soap, ns1__argChang *ns1__argChang_) { struct __ns1__argChang_ *_p = soap_instantiate___ns1__argChang_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__argChang_(soap, _p); _p->ns1__argChang_ = ns1__argChang_; } return _p; }

inline void soap_delete___ns1__argChang_(struct soap *soap, struct __ns1__argChang_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__argChang_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__cgjLSPSelfcheck
#define SOAP_TYPE___ns1__cgjLSPSelfcheck (240)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__cgjLSPSelfcheck(struct soap*, struct __ns1__cgjLSPSelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__cgjLSPSelfcheck(struct soap*, const struct __ns1__cgjLSPSelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__cgjLSPSelfcheck(struct soap*, const char*, int, const struct __ns1__cgjLSPSelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__cgjLSPSelfcheck * SOAP_FMAC4 soap_in___ns1__cgjLSPSelfcheck(struct soap*, const char*, struct __ns1__cgjLSPSelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__cgjLSPSelfcheck(struct soap*, const struct __ns1__cgjLSPSelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__cgjLSPSelfcheck
#define soap_write___ns1__cgjLSPSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__cgjLSPSelfcheck(soap, data),0) || soap_put___ns1__cgjLSPSelfcheck(soap, data, "-ns1:cgjLSPSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__cgjLSPSelfcheck * SOAP_FMAC4 soap_get___ns1__cgjLSPSelfcheck(struct soap*, struct __ns1__cgjLSPSelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__cgjLSPSelfcheck
#define soap_read___ns1__cgjLSPSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__cgjLSPSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__cgjLSPSelfcheck * SOAP_FMAC2 soap_instantiate___ns1__cgjLSPSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__cgjLSPSelfcheck * soap_new___ns1__cgjLSPSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__cgjLSPSelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__cgjLSPSelfcheck * soap_new_req___ns1__cgjLSPSelfcheck(struct soap *soap) { struct __ns1__cgjLSPSelfcheck *_p = soap_instantiate___ns1__cgjLSPSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjLSPSelfcheck(soap, _p); } return _p; }

inline struct __ns1__cgjLSPSelfcheck * soap_new_set___ns1__cgjLSPSelfcheck(struct soap *soap, ns1__cgjLSPSelfcheck *ns1__cgjLSPSelfcheck_) { struct __ns1__cgjLSPSelfcheck *_p = soap_instantiate___ns1__cgjLSPSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjLSPSelfcheck(soap, _p); _p->ns1__cgjLSPSelfcheck_ = ns1__cgjLSPSelfcheck_; } return _p; }

inline void soap_delete___ns1__cgjLSPSelfcheck(struct soap *soap, struct __ns1__cgjLSPSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__cgjLSPSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__lljSelfcheck
#define SOAP_TYPE___ns1__lljSelfcheck (236)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__lljSelfcheck(struct soap*, struct __ns1__lljSelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__lljSelfcheck(struct soap*, const struct __ns1__lljSelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__lljSelfcheck(struct soap*, const char*, int, const struct __ns1__lljSelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__lljSelfcheck * SOAP_FMAC4 soap_in___ns1__lljSelfcheck(struct soap*, const char*, struct __ns1__lljSelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__lljSelfcheck(struct soap*, const struct __ns1__lljSelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__lljSelfcheck
#define soap_write___ns1__lljSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__lljSelfcheck(soap, data),0) || soap_put___ns1__lljSelfcheck(soap, data, "-ns1:lljSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__lljSelfcheck * SOAP_FMAC4 soap_get___ns1__lljSelfcheck(struct soap*, struct __ns1__lljSelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__lljSelfcheck
#define soap_read___ns1__lljSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__lljSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__lljSelfcheck * SOAP_FMAC2 soap_instantiate___ns1__lljSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__lljSelfcheck * soap_new___ns1__lljSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__lljSelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__lljSelfcheck * soap_new_req___ns1__lljSelfcheck(struct soap *soap) { struct __ns1__lljSelfcheck *_p = soap_instantiate___ns1__lljSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lljSelfcheck(soap, _p); } return _p; }

inline struct __ns1__lljSelfcheck * soap_new_set___ns1__lljSelfcheck(struct soap *soap, ns1__lljSelfcheck *ns1__lljSelfcheck_) { struct __ns1__lljSelfcheck *_p = soap_instantiate___ns1__lljSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lljSelfcheck(soap, _p); _p->ns1__lljSelfcheck_ = ns1__lljSelfcheck_; } return _p; }

inline void soap_delete___ns1__lljSelfcheck(struct soap *soap, struct __ns1__lljSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__lljSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__cgjALPSelfcheck
#define SOAP_TYPE___ns1__cgjALPSelfcheck (232)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__cgjALPSelfcheck(struct soap*, struct __ns1__cgjALPSelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__cgjALPSelfcheck(struct soap*, const struct __ns1__cgjALPSelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__cgjALPSelfcheck(struct soap*, const char*, int, const struct __ns1__cgjALPSelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__cgjALPSelfcheck * SOAP_FMAC4 soap_in___ns1__cgjALPSelfcheck(struct soap*, const char*, struct __ns1__cgjALPSelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__cgjALPSelfcheck(struct soap*, const struct __ns1__cgjALPSelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__cgjALPSelfcheck
#define soap_write___ns1__cgjALPSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__cgjALPSelfcheck(soap, data),0) || soap_put___ns1__cgjALPSelfcheck(soap, data, "-ns1:cgjALPSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__cgjALPSelfcheck * SOAP_FMAC4 soap_get___ns1__cgjALPSelfcheck(struct soap*, struct __ns1__cgjALPSelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__cgjALPSelfcheck
#define soap_read___ns1__cgjALPSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__cgjALPSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__cgjALPSelfcheck * SOAP_FMAC2 soap_instantiate___ns1__cgjALPSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__cgjALPSelfcheck * soap_new___ns1__cgjALPSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__cgjALPSelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__cgjALPSelfcheck * soap_new_req___ns1__cgjALPSelfcheck(struct soap *soap) { struct __ns1__cgjALPSelfcheck *_p = soap_instantiate___ns1__cgjALPSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjALPSelfcheck(soap, _p); } return _p; }

inline struct __ns1__cgjALPSelfcheck * soap_new_set___ns1__cgjALPSelfcheck(struct soap *soap, ns1__cgjALPSelfcheck *ns1__cgjALPSelfcheck_) { struct __ns1__cgjALPSelfcheck *_p = soap_instantiate___ns1__cgjALPSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjALPSelfcheck(soap, _p); _p->ns1__cgjALPSelfcheck_ = ns1__cgjALPSelfcheck_; } return _p; }

inline void soap_delete___ns1__cgjALPSelfcheck(struct soap *soap, struct __ns1__cgjALPSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__cgjALPSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__wqfxySelfcheck
#define SOAP_TYPE___ns1__wqfxySelfcheck (228)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__wqfxySelfcheck(struct soap*, struct __ns1__wqfxySelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__wqfxySelfcheck(struct soap*, const struct __ns1__wqfxySelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__wqfxySelfcheck(struct soap*, const char*, int, const struct __ns1__wqfxySelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__wqfxySelfcheck * SOAP_FMAC4 soap_in___ns1__wqfxySelfcheck(struct soap*, const char*, struct __ns1__wqfxySelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__wqfxySelfcheck(struct soap*, const struct __ns1__wqfxySelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__wqfxySelfcheck
#define soap_write___ns1__wqfxySelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__wqfxySelfcheck(soap, data),0) || soap_put___ns1__wqfxySelfcheck(soap, data, "-ns1:wqfxySelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__wqfxySelfcheck * SOAP_FMAC4 soap_get___ns1__wqfxySelfcheck(struct soap*, struct __ns1__wqfxySelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__wqfxySelfcheck
#define soap_read___ns1__wqfxySelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__wqfxySelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__wqfxySelfcheck * SOAP_FMAC2 soap_instantiate___ns1__wqfxySelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__wqfxySelfcheck * soap_new___ns1__wqfxySelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__wqfxySelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__wqfxySelfcheck * soap_new_req___ns1__wqfxySelfcheck(struct soap *soap) { struct __ns1__wqfxySelfcheck *_p = soap_instantiate___ns1__wqfxySelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__wqfxySelfcheck(soap, _p); } return _p; }

inline struct __ns1__wqfxySelfcheck * soap_new_set___ns1__wqfxySelfcheck(struct soap *soap, ns1__wqfxySelfcheck *ns1__wqfxySelfcheck_) { struct __ns1__wqfxySelfcheck *_p = soap_instantiate___ns1__wqfxySelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__wqfxySelfcheck(soap, _p); _p->ns1__wqfxySelfcheck_ = ns1__wqfxySelfcheck_; } return _p; }

inline void soap_delete___ns1__wqfxySelfcheck(struct soap *soap, struct __ns1__wqfxySelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__wqfxySelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__sendMessage_USCOREFC
#define SOAP_TYPE___ns1__sendMessage_USCOREFC (224)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__sendMessage_USCOREFC(struct soap*, struct __ns1__sendMessage_USCOREFC *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__sendMessage_USCOREFC(struct soap*, const struct __ns1__sendMessage_USCOREFC *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__sendMessage_USCOREFC(struct soap*, const char*, int, const struct __ns1__sendMessage_USCOREFC *, const char*);
SOAP_FMAC3 struct __ns1__sendMessage_USCOREFC * SOAP_FMAC4 soap_in___ns1__sendMessage_USCOREFC(struct soap*, const char*, struct __ns1__sendMessage_USCOREFC *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__sendMessage_USCOREFC(struct soap*, const struct __ns1__sendMessage_USCOREFC *, const char*, const char*);

#ifndef soap_write___ns1__sendMessage_USCOREFC
#define soap_write___ns1__sendMessage_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__sendMessage_USCOREFC(soap, data),0) || soap_put___ns1__sendMessage_USCOREFC(soap, data, "-ns1:sendMessage_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__sendMessage_USCOREFC * SOAP_FMAC4 soap_get___ns1__sendMessage_USCOREFC(struct soap*, struct __ns1__sendMessage_USCOREFC *, const char*, const char*);

#ifndef soap_read___ns1__sendMessage_USCOREFC
#define soap_read___ns1__sendMessage_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__sendMessage_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__sendMessage_USCOREFC * SOAP_FMAC2 soap_instantiate___ns1__sendMessage_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__sendMessage_USCOREFC * soap_new___ns1__sendMessage_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate___ns1__sendMessage_USCOREFC(soap, n, NULL, NULL, NULL); }

inline struct __ns1__sendMessage_USCOREFC * soap_new_req___ns1__sendMessage_USCOREFC(struct soap *soap) { struct __ns1__sendMessage_USCOREFC *_p = soap_instantiate___ns1__sendMessage_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sendMessage_USCOREFC(soap, _p); } return _p; }

inline struct __ns1__sendMessage_USCOREFC * soap_new_set___ns1__sendMessage_USCOREFC(struct soap *soap, ns1__sendMessage_USCOREFC *ns1__sendMessage_USCOREFC_) { struct __ns1__sendMessage_USCOREFC *_p = soap_instantiate___ns1__sendMessage_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sendMessage_USCOREFC(soap, _p); _p->ns1__sendMessage_USCOREFC_ = ns1__sendMessage_USCOREFC_; } return _p; }

inline void soap_delete___ns1__sendMessage_USCOREFC(struct soap *soap, struct __ns1__sendMessage_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__sendMessage_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__sdsqtfxySelfcheck
#define SOAP_TYPE___ns1__sdsqtfxySelfcheck (221)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__sdsqtfxySelfcheck(struct soap*, struct __ns1__sdsqtfxySelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__sdsqtfxySelfcheck(struct soap*, const struct __ns1__sdsqtfxySelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__sdsqtfxySelfcheck(struct soap*, const char*, int, const struct __ns1__sdsqtfxySelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__sdsqtfxySelfcheck * SOAP_FMAC4 soap_in___ns1__sdsqtfxySelfcheck(struct soap*, const char*, struct __ns1__sdsqtfxySelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__sdsqtfxySelfcheck(struct soap*, const struct __ns1__sdsqtfxySelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__sdsqtfxySelfcheck
#define soap_write___ns1__sdsqtfxySelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__sdsqtfxySelfcheck(soap, data),0) || soap_put___ns1__sdsqtfxySelfcheck(soap, data, "-ns1:sdsqtfxySelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__sdsqtfxySelfcheck * SOAP_FMAC4 soap_get___ns1__sdsqtfxySelfcheck(struct soap*, struct __ns1__sdsqtfxySelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__sdsqtfxySelfcheck
#define soap_read___ns1__sdsqtfxySelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__sdsqtfxySelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__sdsqtfxySelfcheck * SOAP_FMAC2 soap_instantiate___ns1__sdsqtfxySelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__sdsqtfxySelfcheck * soap_new___ns1__sdsqtfxySelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__sdsqtfxySelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__sdsqtfxySelfcheck * soap_new_req___ns1__sdsqtfxySelfcheck(struct soap *soap) { struct __ns1__sdsqtfxySelfcheck *_p = soap_instantiate___ns1__sdsqtfxySelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sdsqtfxySelfcheck(soap, _p); } return _p; }

inline struct __ns1__sdsqtfxySelfcheck * soap_new_set___ns1__sdsqtfxySelfcheck(struct soap *soap, ns1__sdsqtfxySelfcheck *ns1__sdsqtfxySelfcheck_) { struct __ns1__sdsqtfxySelfcheck *_p = soap_instantiate___ns1__sdsqtfxySelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sdsqtfxySelfcheck(soap, _p); _p->ns1__sdsqtfxySelfcheck_ = ns1__sdsqtfxySelfcheck_; } return _p; }

inline void soap_delete___ns1__sdsqtfxySelfcheck(struct soap *soap, struct __ns1__sdsqtfxySelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__sdsqtfxySelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__qyfxSelfcheck
#define SOAP_TYPE___ns1__qyfxSelfcheck (217)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__qyfxSelfcheck(struct soap*, struct __ns1__qyfxSelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__qyfxSelfcheck(struct soap*, const struct __ns1__qyfxSelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__qyfxSelfcheck(struct soap*, const char*, int, const struct __ns1__qyfxSelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__qyfxSelfcheck * SOAP_FMAC4 soap_in___ns1__qyfxSelfcheck(struct soap*, const char*, struct __ns1__qyfxSelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__qyfxSelfcheck(struct soap*, const struct __ns1__qyfxSelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__qyfxSelfcheck
#define soap_write___ns1__qyfxSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__qyfxSelfcheck(soap, data),0) || soap_put___ns1__qyfxSelfcheck(soap, data, "-ns1:qyfxSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__qyfxSelfcheck * SOAP_FMAC4 soap_get___ns1__qyfxSelfcheck(struct soap*, struct __ns1__qyfxSelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__qyfxSelfcheck
#define soap_read___ns1__qyfxSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__qyfxSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__qyfxSelfcheck * SOAP_FMAC2 soap_instantiate___ns1__qyfxSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__qyfxSelfcheck * soap_new___ns1__qyfxSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__qyfxSelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__qyfxSelfcheck * soap_new_req___ns1__qyfxSelfcheck(struct soap *soap) { struct __ns1__qyfxSelfcheck *_p = soap_instantiate___ns1__qyfxSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__qyfxSelfcheck(soap, _p); } return _p; }

inline struct __ns1__qyfxSelfcheck * soap_new_set___ns1__qyfxSelfcheck(struct soap *soap, ns1__qyfxSelfcheck *ns1__qyfxSelfcheck_) { struct __ns1__qyfxSelfcheck *_p = soap_instantiate___ns1__qyfxSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__qyfxSelfcheck(soap, _p); _p->ns1__qyfxSelfcheck_ = ns1__qyfxSelfcheck_; } return _p; }

inline void soap_delete___ns1__qyfxSelfcheck(struct soap *soap, struct __ns1__qyfxSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__qyfxSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__lightproofSmokeData
#define SOAP_TYPE___ns1__lightproofSmokeData (213)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__lightproofSmokeData(struct soap*, struct __ns1__lightproofSmokeData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__lightproofSmokeData(struct soap*, const struct __ns1__lightproofSmokeData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__lightproofSmokeData(struct soap*, const char*, int, const struct __ns1__lightproofSmokeData *, const char*);
SOAP_FMAC3 struct __ns1__lightproofSmokeData * SOAP_FMAC4 soap_in___ns1__lightproofSmokeData(struct soap*, const char*, struct __ns1__lightproofSmokeData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__lightproofSmokeData(struct soap*, const struct __ns1__lightproofSmokeData *, const char*, const char*);

#ifndef soap_write___ns1__lightproofSmokeData
#define soap_write___ns1__lightproofSmokeData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__lightproofSmokeData(soap, data),0) || soap_put___ns1__lightproofSmokeData(soap, data, "-ns1:lightproofSmokeData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__lightproofSmokeData * SOAP_FMAC4 soap_get___ns1__lightproofSmokeData(struct soap*, struct __ns1__lightproofSmokeData *, const char*, const char*);

#ifndef soap_read___ns1__lightproofSmokeData
#define soap_read___ns1__lightproofSmokeData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__lightproofSmokeData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__lightproofSmokeData * SOAP_FMAC2 soap_instantiate___ns1__lightproofSmokeData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__lightproofSmokeData * soap_new___ns1__lightproofSmokeData(struct soap *soap, int n = -1) { return soap_instantiate___ns1__lightproofSmokeData(soap, n, NULL, NULL, NULL); }

inline struct __ns1__lightproofSmokeData * soap_new_req___ns1__lightproofSmokeData(struct soap *soap) { struct __ns1__lightproofSmokeData *_p = soap_instantiate___ns1__lightproofSmokeData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeData(soap, _p); } return _p; }

inline struct __ns1__lightproofSmokeData * soap_new_set___ns1__lightproofSmokeData(struct soap *soap, ns1__lightproofSmokeData *ns1__lightproofSmokeData_) { struct __ns1__lightproofSmokeData *_p = soap_instantiate___ns1__lightproofSmokeData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeData(soap, _p); _p->ns1__lightproofSmokeData_ = ns1__lightproofSmokeData_; } return _p; }

inline void soap_delete___ns1__lightproofSmokeData(struct soap *soap, struct __ns1__lightproofSmokeData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__lightproofSmokeData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__lightproofSmokeData_USCOREFC
#define SOAP_TYPE___ns1__lightproofSmokeData_USCOREFC (210)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__lightproofSmokeData_USCOREFC(struct soap*, struct __ns1__lightproofSmokeData_USCOREFC *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__lightproofSmokeData_USCOREFC(struct soap*, const struct __ns1__lightproofSmokeData_USCOREFC *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__lightproofSmokeData_USCOREFC(struct soap*, const char*, int, const struct __ns1__lightproofSmokeData_USCOREFC *, const char*);
SOAP_FMAC3 struct __ns1__lightproofSmokeData_USCOREFC * SOAP_FMAC4 soap_in___ns1__lightproofSmokeData_USCOREFC(struct soap*, const char*, struct __ns1__lightproofSmokeData_USCOREFC *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__lightproofSmokeData_USCOREFC(struct soap*, const struct __ns1__lightproofSmokeData_USCOREFC *, const char*, const char*);

#ifndef soap_write___ns1__lightproofSmokeData_USCOREFC
#define soap_write___ns1__lightproofSmokeData_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__lightproofSmokeData_USCOREFC(soap, data),0) || soap_put___ns1__lightproofSmokeData_USCOREFC(soap, data, "-ns1:lightproofSmokeData_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__lightproofSmokeData_USCOREFC * SOAP_FMAC4 soap_get___ns1__lightproofSmokeData_USCOREFC(struct soap*, struct __ns1__lightproofSmokeData_USCOREFC *, const char*, const char*);

#ifndef soap_read___ns1__lightproofSmokeData_USCOREFC
#define soap_read___ns1__lightproofSmokeData_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__lightproofSmokeData_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__lightproofSmokeData_USCOREFC * SOAP_FMAC2 soap_instantiate___ns1__lightproofSmokeData_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__lightproofSmokeData_USCOREFC * soap_new___ns1__lightproofSmokeData_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate___ns1__lightproofSmokeData_USCOREFC(soap, n, NULL, NULL, NULL); }

inline struct __ns1__lightproofSmokeData_USCOREFC * soap_new_req___ns1__lightproofSmokeData_USCOREFC(struct soap *soap) { struct __ns1__lightproofSmokeData_USCOREFC *_p = soap_instantiate___ns1__lightproofSmokeData_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeData_USCOREFC(soap, _p); } return _p; }

inline struct __ns1__lightproofSmokeData_USCOREFC * soap_new_set___ns1__lightproofSmokeData_USCOREFC(struct soap *soap, ns1__lightproofSmokeData_USCOREFC *ns1__lightproofSmokeData_USCOREFC_) { struct __ns1__lightproofSmokeData_USCOREFC *_p = soap_instantiate___ns1__lightproofSmokeData_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeData_USCOREFC(soap, _p); _p->ns1__lightproofSmokeData_USCOREFC_ = ns1__lightproofSmokeData_USCOREFC_; } return _p; }

inline void soap_delete___ns1__lightproofSmokeData_USCOREFC(struct soap *soap, struct __ns1__lightproofSmokeData_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__lightproofSmokeData_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__wqfxyAdjust
#define SOAP_TYPE___ns1__wqfxyAdjust (206)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__wqfxyAdjust(struct soap*, struct __ns1__wqfxyAdjust *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__wqfxyAdjust(struct soap*, const struct __ns1__wqfxyAdjust *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__wqfxyAdjust(struct soap*, const char*, int, const struct __ns1__wqfxyAdjust *, const char*);
SOAP_FMAC3 struct __ns1__wqfxyAdjust * SOAP_FMAC4 soap_in___ns1__wqfxyAdjust(struct soap*, const char*, struct __ns1__wqfxyAdjust *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__wqfxyAdjust(struct soap*, const struct __ns1__wqfxyAdjust *, const char*, const char*);

#ifndef soap_write___ns1__wqfxyAdjust
#define soap_write___ns1__wqfxyAdjust(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__wqfxyAdjust(soap, data),0) || soap_put___ns1__wqfxyAdjust(soap, data, "-ns1:wqfxyAdjust", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__wqfxyAdjust * SOAP_FMAC4 soap_get___ns1__wqfxyAdjust(struct soap*, struct __ns1__wqfxyAdjust *, const char*, const char*);

#ifndef soap_read___ns1__wqfxyAdjust
#define soap_read___ns1__wqfxyAdjust(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__wqfxyAdjust(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__wqfxyAdjust * SOAP_FMAC2 soap_instantiate___ns1__wqfxyAdjust(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__wqfxyAdjust * soap_new___ns1__wqfxyAdjust(struct soap *soap, int n = -1) { return soap_instantiate___ns1__wqfxyAdjust(soap, n, NULL, NULL, NULL); }

inline struct __ns1__wqfxyAdjust * soap_new_req___ns1__wqfxyAdjust(struct soap *soap) { struct __ns1__wqfxyAdjust *_p = soap_instantiate___ns1__wqfxyAdjust(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__wqfxyAdjust(soap, _p); } return _p; }

inline struct __ns1__wqfxyAdjust * soap_new_set___ns1__wqfxyAdjust(struct soap *soap, ns1__wqfxyAdjust *ns1__wqfxyAdjust_) { struct __ns1__wqfxyAdjust *_p = soap_instantiate___ns1__wqfxyAdjust(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__wqfxyAdjust(soap, _p); _p->ns1__wqfxyAdjust_ = ns1__wqfxyAdjust_; } return _p; }

inline void soap_delete___ns1__wqfxyAdjust(struct soap *soap, struct __ns1__wqfxyAdjust *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__wqfxyAdjust(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__cgjPLHPSelfcheck
#define SOAP_TYPE___ns1__cgjPLHPSelfcheck (202)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__cgjPLHPSelfcheck(struct soap*, struct __ns1__cgjPLHPSelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__cgjPLHPSelfcheck(struct soap*, const struct __ns1__cgjPLHPSelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__cgjPLHPSelfcheck(struct soap*, const char*, int, const struct __ns1__cgjPLHPSelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__cgjPLHPSelfcheck * SOAP_FMAC4 soap_in___ns1__cgjPLHPSelfcheck(struct soap*, const char*, struct __ns1__cgjPLHPSelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__cgjPLHPSelfcheck(struct soap*, const struct __ns1__cgjPLHPSelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__cgjPLHPSelfcheck
#define soap_write___ns1__cgjPLHPSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__cgjPLHPSelfcheck(soap, data),0) || soap_put___ns1__cgjPLHPSelfcheck(soap, data, "-ns1:cgjPLHPSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__cgjPLHPSelfcheck * SOAP_FMAC4 soap_get___ns1__cgjPLHPSelfcheck(struct soap*, struct __ns1__cgjPLHPSelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__cgjPLHPSelfcheck
#define soap_read___ns1__cgjPLHPSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__cgjPLHPSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__cgjPLHPSelfcheck * SOAP_FMAC2 soap_instantiate___ns1__cgjPLHPSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__cgjPLHPSelfcheck * soap_new___ns1__cgjPLHPSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__cgjPLHPSelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__cgjPLHPSelfcheck * soap_new_req___ns1__cgjPLHPSelfcheck(struct soap *soap) { struct __ns1__cgjPLHPSelfcheck *_p = soap_instantiate___ns1__cgjPLHPSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjPLHPSelfcheck(soap, _p); } return _p; }

inline struct __ns1__cgjPLHPSelfcheck * soap_new_set___ns1__cgjPLHPSelfcheck(struct soap *soap, ns1__cgjPLHPSelfcheck *ns1__cgjPLHPSelfcheck_) { struct __ns1__cgjPLHPSelfcheck *_p = soap_instantiate___ns1__cgjPLHPSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjPLHPSelfcheck(soap, _p); _p->ns1__cgjPLHPSelfcheck_ = ns1__cgjPLHPSelfcheck_; } return _p; }

inline void soap_delete___ns1__cgjPLHPSelfcheck(struct soap *soap, struct __ns1__cgjPLHPSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__cgjPLHPSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__doubleIdleLog
#define SOAP_TYPE___ns1__doubleIdleLog (198)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__doubleIdleLog(struct soap*, struct __ns1__doubleIdleLog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__doubleIdleLog(struct soap*, const struct __ns1__doubleIdleLog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__doubleIdleLog(struct soap*, const char*, int, const struct __ns1__doubleIdleLog *, const char*);
SOAP_FMAC3 struct __ns1__doubleIdleLog * SOAP_FMAC4 soap_in___ns1__doubleIdleLog(struct soap*, const char*, struct __ns1__doubleIdleLog *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__doubleIdleLog(struct soap*, const struct __ns1__doubleIdleLog *, const char*, const char*);

#ifndef soap_write___ns1__doubleIdleLog
#define soap_write___ns1__doubleIdleLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__doubleIdleLog(soap, data),0) || soap_put___ns1__doubleIdleLog(soap, data, "-ns1:doubleIdleLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__doubleIdleLog * SOAP_FMAC4 soap_get___ns1__doubleIdleLog(struct soap*, struct __ns1__doubleIdleLog *, const char*, const char*);

#ifndef soap_read___ns1__doubleIdleLog
#define soap_read___ns1__doubleIdleLog(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__doubleIdleLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__doubleIdleLog * SOAP_FMAC2 soap_instantiate___ns1__doubleIdleLog(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__doubleIdleLog * soap_new___ns1__doubleIdleLog(struct soap *soap, int n = -1) { return soap_instantiate___ns1__doubleIdleLog(soap, n, NULL, NULL, NULL); }

inline struct __ns1__doubleIdleLog * soap_new_req___ns1__doubleIdleLog(struct soap *soap) { struct __ns1__doubleIdleLog *_p = soap_instantiate___ns1__doubleIdleLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleLog(soap, _p); } return _p; }

inline struct __ns1__doubleIdleLog * soap_new_set___ns1__doubleIdleLog(struct soap *soap, ns1__doubleIdleLog *ns1__doubleIdleLog_) { struct __ns1__doubleIdleLog *_p = soap_instantiate___ns1__doubleIdleLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleLog(soap, _p); _p->ns1__doubleIdleLog_ = ns1__doubleIdleLog_; } return _p; }

inline void soap_delete___ns1__doubleIdleLog(struct soap *soap, struct __ns1__doubleIdleLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__doubleIdleLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__doubleIdleData
#define SOAP_TYPE___ns1__doubleIdleData (195)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__doubleIdleData(struct soap*, struct __ns1__doubleIdleData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__doubleIdleData(struct soap*, const struct __ns1__doubleIdleData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__doubleIdleData(struct soap*, const char*, int, const struct __ns1__doubleIdleData *, const char*);
SOAP_FMAC3 struct __ns1__doubleIdleData * SOAP_FMAC4 soap_in___ns1__doubleIdleData(struct soap*, const char*, struct __ns1__doubleIdleData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__doubleIdleData(struct soap*, const struct __ns1__doubleIdleData *, const char*, const char*);

#ifndef soap_write___ns1__doubleIdleData
#define soap_write___ns1__doubleIdleData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__doubleIdleData(soap, data),0) || soap_put___ns1__doubleIdleData(soap, data, "-ns1:doubleIdleData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__doubleIdleData * SOAP_FMAC4 soap_get___ns1__doubleIdleData(struct soap*, struct __ns1__doubleIdleData *, const char*, const char*);

#ifndef soap_read___ns1__doubleIdleData
#define soap_read___ns1__doubleIdleData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__doubleIdleData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__doubleIdleData * SOAP_FMAC2 soap_instantiate___ns1__doubleIdleData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__doubleIdleData * soap_new___ns1__doubleIdleData(struct soap *soap, int n = -1) { return soap_instantiate___ns1__doubleIdleData(soap, n, NULL, NULL, NULL); }

inline struct __ns1__doubleIdleData * soap_new_req___ns1__doubleIdleData(struct soap *soap) { struct __ns1__doubleIdleData *_p = soap_instantiate___ns1__doubleIdleData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleData(soap, _p); } return _p; }

inline struct __ns1__doubleIdleData * soap_new_set___ns1__doubleIdleData(struct soap *soap, ns1__doubleIdleData *ns1__doubleIdleData_) { struct __ns1__doubleIdleData *_p = soap_instantiate___ns1__doubleIdleData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleData(soap, _p); _p->ns1__doubleIdleData_ = ns1__doubleIdleData_; } return _p; }

inline void soap_delete___ns1__doubleIdleData(struct soap *soap, struct __ns1__doubleIdleData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__doubleIdleData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getSatate
#define SOAP_TYPE___ns1__getSatate (192)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getSatate(struct soap*, struct __ns1__getSatate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getSatate(struct soap*, const struct __ns1__getSatate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getSatate(struct soap*, const char*, int, const struct __ns1__getSatate *, const char*);
SOAP_FMAC3 struct __ns1__getSatate * SOAP_FMAC4 soap_in___ns1__getSatate(struct soap*, const char*, struct __ns1__getSatate *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getSatate(struct soap*, const struct __ns1__getSatate *, const char*, const char*);

#ifndef soap_write___ns1__getSatate
#define soap_write___ns1__getSatate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__getSatate(soap, data),0) || soap_put___ns1__getSatate(soap, data, "-ns1:getSatate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__getSatate * SOAP_FMAC4 soap_get___ns1__getSatate(struct soap*, struct __ns1__getSatate *, const char*, const char*);

#ifndef soap_read___ns1__getSatate
#define soap_read___ns1__getSatate(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getSatate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__getSatate * SOAP_FMAC2 soap_instantiate___ns1__getSatate(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__getSatate * soap_new___ns1__getSatate(struct soap *soap, int n = -1) { return soap_instantiate___ns1__getSatate(soap, n, NULL, NULL, NULL); }

inline struct __ns1__getSatate * soap_new_req___ns1__getSatate(struct soap *soap) { struct __ns1__getSatate *_p = soap_instantiate___ns1__getSatate(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getSatate(soap, _p); } return _p; }

inline struct __ns1__getSatate * soap_new_set___ns1__getSatate(struct soap *soap, ns1__getSatate *ns1__getSatate_) { struct __ns1__getSatate *_p = soap_instantiate___ns1__getSatate(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getSatate(soap, _p); _p->ns1__getSatate_ = ns1__getSatate_; } return _p; }

inline void soap_delete___ns1__getSatate(struct soap *soap, struct __ns1__getSatate *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getSatate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__motoDbIdleData
#define SOAP_TYPE___ns1__motoDbIdleData (188)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__motoDbIdleData(struct soap*, struct __ns1__motoDbIdleData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__motoDbIdleData(struct soap*, const struct __ns1__motoDbIdleData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__motoDbIdleData(struct soap*, const char*, int, const struct __ns1__motoDbIdleData *, const char*);
SOAP_FMAC3 struct __ns1__motoDbIdleData * SOAP_FMAC4 soap_in___ns1__motoDbIdleData(struct soap*, const char*, struct __ns1__motoDbIdleData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__motoDbIdleData(struct soap*, const struct __ns1__motoDbIdleData *, const char*, const char*);

#ifndef soap_write___ns1__motoDbIdleData
#define soap_write___ns1__motoDbIdleData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__motoDbIdleData(soap, data),0) || soap_put___ns1__motoDbIdleData(soap, data, "-ns1:motoDbIdleData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__motoDbIdleData * SOAP_FMAC4 soap_get___ns1__motoDbIdleData(struct soap*, struct __ns1__motoDbIdleData *, const char*, const char*);

#ifndef soap_read___ns1__motoDbIdleData
#define soap_read___ns1__motoDbIdleData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__motoDbIdleData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__motoDbIdleData * SOAP_FMAC2 soap_instantiate___ns1__motoDbIdleData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__motoDbIdleData * soap_new___ns1__motoDbIdleData(struct soap *soap, int n = -1) { return soap_instantiate___ns1__motoDbIdleData(soap, n, NULL, NULL, NULL); }

inline struct __ns1__motoDbIdleData * soap_new_req___ns1__motoDbIdleData(struct soap *soap) { struct __ns1__motoDbIdleData *_p = soap_instantiate___ns1__motoDbIdleData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__motoDbIdleData(soap, _p); } return _p; }

inline struct __ns1__motoDbIdleData * soap_new_set___ns1__motoDbIdleData(struct soap *soap, ns1__motoDbIdleData *ns1__motoDbIdleData_) { struct __ns1__motoDbIdleData *_p = soap_instantiate___ns1__motoDbIdleData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__motoDbIdleData(soap, _p); _p->ns1__motoDbIdleData_ = ns1__motoDbIdleData_; } return _p; }

inline void soap_delete___ns1__motoDbIdleData(struct soap *soap, struct __ns1__motoDbIdleData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__motoDbIdleData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__vmasData
#define SOAP_TYPE___ns1__vmasData (184)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__vmasData(struct soap*, struct __ns1__vmasData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__vmasData(struct soap*, const struct __ns1__vmasData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__vmasData(struct soap*, const char*, int, const struct __ns1__vmasData *, const char*);
SOAP_FMAC3 struct __ns1__vmasData * SOAP_FMAC4 soap_in___ns1__vmasData(struct soap*, const char*, struct __ns1__vmasData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__vmasData(struct soap*, const struct __ns1__vmasData *, const char*, const char*);

#ifndef soap_write___ns1__vmasData
#define soap_write___ns1__vmasData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__vmasData(soap, data),0) || soap_put___ns1__vmasData(soap, data, "-ns1:vmasData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__vmasData * SOAP_FMAC4 soap_get___ns1__vmasData(struct soap*, struct __ns1__vmasData *, const char*, const char*);

#ifndef soap_read___ns1__vmasData
#define soap_read___ns1__vmasData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__vmasData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__vmasData * SOAP_FMAC2 soap_instantiate___ns1__vmasData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__vmasData * soap_new___ns1__vmasData(struct soap *soap, int n = -1) { return soap_instantiate___ns1__vmasData(soap, n, NULL, NULL, NULL); }

inline struct __ns1__vmasData * soap_new_req___ns1__vmasData(struct soap *soap) { struct __ns1__vmasData *_p = soap_instantiate___ns1__vmasData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__vmasData(soap, _p); } return _p; }

inline struct __ns1__vmasData * soap_new_set___ns1__vmasData(struct soap *soap, ns1__vmasData *ns1__vmasData_) { struct __ns1__vmasData *_p = soap_instantiate___ns1__vmasData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__vmasData(soap, _p); _p->ns1__vmasData_ = ns1__vmasData_; } return _p; }

inline void soap_delete___ns1__vmasData(struct soap *soap, struct __ns1__vmasData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__vmasData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__loadDownData
#define SOAP_TYPE___ns1__loadDownData (180)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__loadDownData(struct soap*, struct __ns1__loadDownData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__loadDownData(struct soap*, const struct __ns1__loadDownData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__loadDownData(struct soap*, const char*, int, const struct __ns1__loadDownData *, const char*);
SOAP_FMAC3 struct __ns1__loadDownData * SOAP_FMAC4 soap_in___ns1__loadDownData(struct soap*, const char*, struct __ns1__loadDownData *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__loadDownData(struct soap*, const struct __ns1__loadDownData *, const char*, const char*);

#ifndef soap_write___ns1__loadDownData
#define soap_write___ns1__loadDownData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__loadDownData(soap, data),0) || soap_put___ns1__loadDownData(soap, data, "-ns1:loadDownData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__loadDownData * SOAP_FMAC4 soap_get___ns1__loadDownData(struct soap*, struct __ns1__loadDownData *, const char*, const char*);

#ifndef soap_read___ns1__loadDownData
#define soap_read___ns1__loadDownData(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__loadDownData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__loadDownData * SOAP_FMAC2 soap_instantiate___ns1__loadDownData(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__loadDownData * soap_new___ns1__loadDownData(struct soap *soap, int n = -1) { return soap_instantiate___ns1__loadDownData(soap, n, NULL, NULL, NULL); }

inline struct __ns1__loadDownData * soap_new_req___ns1__loadDownData(struct soap *soap) { struct __ns1__loadDownData *_p = soap_instantiate___ns1__loadDownData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__loadDownData(soap, _p); } return _p; }

inline struct __ns1__loadDownData * soap_new_set___ns1__loadDownData(struct soap *soap, ns1__loadDownData *ns1__loadDownData_) { struct __ns1__loadDownData *_p = soap_instantiate___ns1__loadDownData(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__loadDownData(soap, _p); _p->ns1__loadDownData_ = ns1__loadDownData_; } return _p; }

inline void soap_delete___ns1__loadDownData(struct soap *soap, struct __ns1__loadDownData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__loadDownData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__lightproofSmokeDataLog_USCOREFC
#define SOAP_TYPE___ns1__lightproofSmokeDataLog_USCOREFC (176)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, struct __ns1__lightproofSmokeDataLog_USCOREFC *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, const struct __ns1__lightproofSmokeDataLog_USCOREFC *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, const char*, int, const struct __ns1__lightproofSmokeDataLog_USCOREFC *, const char*);
SOAP_FMAC3 struct __ns1__lightproofSmokeDataLog_USCOREFC * SOAP_FMAC4 soap_in___ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, const char*, struct __ns1__lightproofSmokeDataLog_USCOREFC *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, const struct __ns1__lightproofSmokeDataLog_USCOREFC *, const char*, const char*);

#ifndef soap_write___ns1__lightproofSmokeDataLog_USCOREFC
#define soap_write___ns1__lightproofSmokeDataLog_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__lightproofSmokeDataLog_USCOREFC(soap, data),0) || soap_put___ns1__lightproofSmokeDataLog_USCOREFC(soap, data, "-ns1:lightproofSmokeDataLog_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__lightproofSmokeDataLog_USCOREFC * SOAP_FMAC4 soap_get___ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, struct __ns1__lightproofSmokeDataLog_USCOREFC *, const char*, const char*);

#ifndef soap_read___ns1__lightproofSmokeDataLog_USCOREFC
#define soap_read___ns1__lightproofSmokeDataLog_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__lightproofSmokeDataLog_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__lightproofSmokeDataLog_USCOREFC * SOAP_FMAC2 soap_instantiate___ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__lightproofSmokeDataLog_USCOREFC * soap_new___ns1__lightproofSmokeDataLog_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate___ns1__lightproofSmokeDataLog_USCOREFC(soap, n, NULL, NULL, NULL); }

inline struct __ns1__lightproofSmokeDataLog_USCOREFC * soap_new_req___ns1__lightproofSmokeDataLog_USCOREFC(struct soap *soap) { struct __ns1__lightproofSmokeDataLog_USCOREFC *_p = soap_instantiate___ns1__lightproofSmokeDataLog_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeDataLog_USCOREFC(soap, _p); } return _p; }

inline struct __ns1__lightproofSmokeDataLog_USCOREFC * soap_new_set___ns1__lightproofSmokeDataLog_USCOREFC(struct soap *soap, ns1__lightproofSmokeDataLog_USCOREFC *ns1__lightproofSmokeDataLog_USCOREFC_) { struct __ns1__lightproofSmokeDataLog_USCOREFC *_p = soap_instantiate___ns1__lightproofSmokeDataLog_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeDataLog_USCOREFC(soap, _p); _p->ns1__lightproofSmokeDataLog_USCOREFC_ = ns1__lightproofSmokeDataLog_USCOREFC_; } return _p; }

inline void soap_delete___ns1__lightproofSmokeDataLog_USCOREFC(struct soap *soap, struct __ns1__lightproofSmokeDataLog_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__lightproofSmokeDataLog_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__pqfxySelfcheck
#define SOAP_TYPE___ns1__pqfxySelfcheck (172)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__pqfxySelfcheck(struct soap*, struct __ns1__pqfxySelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__pqfxySelfcheck(struct soap*, const struct __ns1__pqfxySelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__pqfxySelfcheck(struct soap*, const char*, int, const struct __ns1__pqfxySelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__pqfxySelfcheck * SOAP_FMAC4 soap_in___ns1__pqfxySelfcheck(struct soap*, const char*, struct __ns1__pqfxySelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__pqfxySelfcheck(struct soap*, const struct __ns1__pqfxySelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__pqfxySelfcheck
#define soap_write___ns1__pqfxySelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__pqfxySelfcheck(soap, data),0) || soap_put___ns1__pqfxySelfcheck(soap, data, "-ns1:pqfxySelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__pqfxySelfcheck * SOAP_FMAC4 soap_get___ns1__pqfxySelfcheck(struct soap*, struct __ns1__pqfxySelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__pqfxySelfcheck
#define soap_read___ns1__pqfxySelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__pqfxySelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__pqfxySelfcheck * SOAP_FMAC2 soap_instantiate___ns1__pqfxySelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__pqfxySelfcheck * soap_new___ns1__pqfxySelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__pqfxySelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__pqfxySelfcheck * soap_new_req___ns1__pqfxySelfcheck(struct soap *soap) { struct __ns1__pqfxySelfcheck *_p = soap_instantiate___ns1__pqfxySelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__pqfxySelfcheck(soap, _p); } return _p; }

inline struct __ns1__pqfxySelfcheck * soap_new_set___ns1__pqfxySelfcheck(struct soap *soap, ns1__pqfxySelfcheck *ns1__pqfxySelfcheck_) { struct __ns1__pqfxySelfcheck *_p = soap_instantiate___ns1__pqfxySelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__pqfxySelfcheck(soap, _p); _p->ns1__pqfxySelfcheck_ = ns1__pqfxySelfcheck_; } return _p; }

inline void soap_delete___ns1__pqfxySelfcheck(struct soap *soap, struct __ns1__pqfxySelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__pqfxySelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__hjcsgyqSelfcheck
#define SOAP_TYPE___ns1__hjcsgyqSelfcheck (168)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__hjcsgyqSelfcheck(struct soap*, struct __ns1__hjcsgyqSelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__hjcsgyqSelfcheck(struct soap*, const struct __ns1__hjcsgyqSelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__hjcsgyqSelfcheck(struct soap*, const char*, int, const struct __ns1__hjcsgyqSelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__hjcsgyqSelfcheck * SOAP_FMAC4 soap_in___ns1__hjcsgyqSelfcheck(struct soap*, const char*, struct __ns1__hjcsgyqSelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__hjcsgyqSelfcheck(struct soap*, const struct __ns1__hjcsgyqSelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__hjcsgyqSelfcheck
#define soap_write___ns1__hjcsgyqSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__hjcsgyqSelfcheck(soap, data),0) || soap_put___ns1__hjcsgyqSelfcheck(soap, data, "-ns1:hjcsgyqSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__hjcsgyqSelfcheck * SOAP_FMAC4 soap_get___ns1__hjcsgyqSelfcheck(struct soap*, struct __ns1__hjcsgyqSelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__hjcsgyqSelfcheck
#define soap_read___ns1__hjcsgyqSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__hjcsgyqSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__hjcsgyqSelfcheck * SOAP_FMAC2 soap_instantiate___ns1__hjcsgyqSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__hjcsgyqSelfcheck * soap_new___ns1__hjcsgyqSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__hjcsgyqSelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__hjcsgyqSelfcheck * soap_new_req___ns1__hjcsgyqSelfcheck(struct soap *soap) { struct __ns1__hjcsgyqSelfcheck *_p = soap_instantiate___ns1__hjcsgyqSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__hjcsgyqSelfcheck(soap, _p); } return _p; }

inline struct __ns1__hjcsgyqSelfcheck * soap_new_set___ns1__hjcsgyqSelfcheck(struct soap *soap, ns1__hjcsgyqSelfcheck *ns1__hjcsgyqSelfcheck_) { struct __ns1__hjcsgyqSelfcheck *_p = soap_instantiate___ns1__hjcsgyqSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__hjcsgyqSelfcheck(soap, _p); _p->ns1__hjcsgyqSelfcheck_ = ns1__hjcsgyqSelfcheck_; } return _p; }

inline void soap_delete___ns1__hjcsgyqSelfcheck(struct soap *soap, struct __ns1__hjcsgyqSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__hjcsgyqSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__cycdyhwAdjust
#define SOAP_TYPE___ns1__cycdyhwAdjust (164)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__cycdyhwAdjust(struct soap*, struct __ns1__cycdyhwAdjust *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__cycdyhwAdjust(struct soap*, const struct __ns1__cycdyhwAdjust *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__cycdyhwAdjust(struct soap*, const char*, int, const struct __ns1__cycdyhwAdjust *, const char*);
SOAP_FMAC3 struct __ns1__cycdyhwAdjust * SOAP_FMAC4 soap_in___ns1__cycdyhwAdjust(struct soap*, const char*, struct __ns1__cycdyhwAdjust *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__cycdyhwAdjust(struct soap*, const struct __ns1__cycdyhwAdjust *, const char*, const char*);

#ifndef soap_write___ns1__cycdyhwAdjust
#define soap_write___ns1__cycdyhwAdjust(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__cycdyhwAdjust(soap, data),0) || soap_put___ns1__cycdyhwAdjust(soap, data, "-ns1:cycdyhwAdjust", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__cycdyhwAdjust * SOAP_FMAC4 soap_get___ns1__cycdyhwAdjust(struct soap*, struct __ns1__cycdyhwAdjust *, const char*, const char*);

#ifndef soap_read___ns1__cycdyhwAdjust
#define soap_read___ns1__cycdyhwAdjust(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__cycdyhwAdjust(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__cycdyhwAdjust * SOAP_FMAC2 soap_instantiate___ns1__cycdyhwAdjust(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__cycdyhwAdjust * soap_new___ns1__cycdyhwAdjust(struct soap *soap, int n = -1) { return soap_instantiate___ns1__cycdyhwAdjust(soap, n, NULL, NULL, NULL); }

inline struct __ns1__cycdyhwAdjust * soap_new_req___ns1__cycdyhwAdjust(struct soap *soap) { struct __ns1__cycdyhwAdjust *_p = soap_instantiate___ns1__cycdyhwAdjust(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cycdyhwAdjust(soap, _p); } return _p; }

inline struct __ns1__cycdyhwAdjust * soap_new_set___ns1__cycdyhwAdjust(struct soap *soap, ns1__cycdyhwAdjust *ns1__cycdyhwAdjust_) { struct __ns1__cycdyhwAdjust *_p = soap_instantiate___ns1__cycdyhwAdjust(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cycdyhwAdjust(soap, _p); _p->ns1__cycdyhwAdjust_ = ns1__cycdyhwAdjust_; } return _p; }

inline void soap_delete___ns1__cycdyhwAdjust(struct soap *soap, struct __ns1__cycdyhwAdjust *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__cycdyhwAdjust(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__software2centerNew_USCOREFC
#define SOAP_TYPE___ns1__software2centerNew_USCOREFC (160)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__software2centerNew_USCOREFC(struct soap*, struct __ns1__software2centerNew_USCOREFC *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__software2centerNew_USCOREFC(struct soap*, const struct __ns1__software2centerNew_USCOREFC *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__software2centerNew_USCOREFC(struct soap*, const char*, int, const struct __ns1__software2centerNew_USCOREFC *, const char*);
SOAP_FMAC3 struct __ns1__software2centerNew_USCOREFC * SOAP_FMAC4 soap_in___ns1__software2centerNew_USCOREFC(struct soap*, const char*, struct __ns1__software2centerNew_USCOREFC *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__software2centerNew_USCOREFC(struct soap*, const struct __ns1__software2centerNew_USCOREFC *, const char*, const char*);

#ifndef soap_write___ns1__software2centerNew_USCOREFC
#define soap_write___ns1__software2centerNew_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__software2centerNew_USCOREFC(soap, data),0) || soap_put___ns1__software2centerNew_USCOREFC(soap, data, "-ns1:software2centerNew_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__software2centerNew_USCOREFC * SOAP_FMAC4 soap_get___ns1__software2centerNew_USCOREFC(struct soap*, struct __ns1__software2centerNew_USCOREFC *, const char*, const char*);

#ifndef soap_read___ns1__software2centerNew_USCOREFC
#define soap_read___ns1__software2centerNew_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__software2centerNew_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__software2centerNew_USCOREFC * SOAP_FMAC2 soap_instantiate___ns1__software2centerNew_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__software2centerNew_USCOREFC * soap_new___ns1__software2centerNew_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate___ns1__software2centerNew_USCOREFC(soap, n, NULL, NULL, NULL); }

inline struct __ns1__software2centerNew_USCOREFC * soap_new_req___ns1__software2centerNew_USCOREFC(struct soap *soap) { struct __ns1__software2centerNew_USCOREFC *_p = soap_instantiate___ns1__software2centerNew_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__software2centerNew_USCOREFC(soap, _p); } return _p; }

inline struct __ns1__software2centerNew_USCOREFC * soap_new_set___ns1__software2centerNew_USCOREFC(struct soap *soap, ns1__software2centerNew_USCOREFC *ns1__software2centerNew_USCOREFC_) { struct __ns1__software2centerNew_USCOREFC *_p = soap_instantiate___ns1__software2centerNew_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__software2centerNew_USCOREFC(soap, _p); _p->ns1__software2centerNew_USCOREFC_ = ns1__software2centerNew_USCOREFC_; } return _p; }

inline void soap_delete___ns1__software2centerNew_USCOREFC(struct soap *soap, struct __ns1__software2centerNew_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__software2centerNew_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getCarInfo_USCOREFC
#define SOAP_TYPE___ns1__getCarInfo_USCOREFC (156)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getCarInfo_USCOREFC(struct soap*, struct __ns1__getCarInfo_USCOREFC *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getCarInfo_USCOREFC(struct soap*, const struct __ns1__getCarInfo_USCOREFC *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getCarInfo_USCOREFC(struct soap*, const char*, int, const struct __ns1__getCarInfo_USCOREFC *, const char*);
SOAP_FMAC3 struct __ns1__getCarInfo_USCOREFC * SOAP_FMAC4 soap_in___ns1__getCarInfo_USCOREFC(struct soap*, const char*, struct __ns1__getCarInfo_USCOREFC *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getCarInfo_USCOREFC(struct soap*, const struct __ns1__getCarInfo_USCOREFC *, const char*, const char*);

#ifndef soap_write___ns1__getCarInfo_USCOREFC
#define soap_write___ns1__getCarInfo_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__getCarInfo_USCOREFC(soap, data),0) || soap_put___ns1__getCarInfo_USCOREFC(soap, data, "-ns1:getCarInfo_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__getCarInfo_USCOREFC * SOAP_FMAC4 soap_get___ns1__getCarInfo_USCOREFC(struct soap*, struct __ns1__getCarInfo_USCOREFC *, const char*, const char*);

#ifndef soap_read___ns1__getCarInfo_USCOREFC
#define soap_read___ns1__getCarInfo_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getCarInfo_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__getCarInfo_USCOREFC * SOAP_FMAC2 soap_instantiate___ns1__getCarInfo_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__getCarInfo_USCOREFC * soap_new___ns1__getCarInfo_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate___ns1__getCarInfo_USCOREFC(soap, n, NULL, NULL, NULL); }

inline struct __ns1__getCarInfo_USCOREFC * soap_new_req___ns1__getCarInfo_USCOREFC(struct soap *soap) { struct __ns1__getCarInfo_USCOREFC *_p = soap_instantiate___ns1__getCarInfo_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getCarInfo_USCOREFC(soap, _p); } return _p; }

inline struct __ns1__getCarInfo_USCOREFC * soap_new_set___ns1__getCarInfo_USCOREFC(struct soap *soap, ns1__getCarInfo_USCOREFC *ns1__getCarInfo_USCOREFC_) { struct __ns1__getCarInfo_USCOREFC *_p = soap_instantiate___ns1__getCarInfo_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getCarInfo_USCOREFC(soap, _p); _p->ns1__getCarInfo_USCOREFC_ = ns1__getCarInfo_USCOREFC_; } return _p; }

inline void soap_delete___ns1__getCarInfo_USCOREFC(struct soap *soap, struct __ns1__getCarInfo_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getCarInfo_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__obdResultLog
#define SOAP_TYPE___ns1__obdResultLog (153)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__obdResultLog(struct soap*, struct __ns1__obdResultLog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__obdResultLog(struct soap*, const struct __ns1__obdResultLog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__obdResultLog(struct soap*, const char*, int, const struct __ns1__obdResultLog *, const char*);
SOAP_FMAC3 struct __ns1__obdResultLog * SOAP_FMAC4 soap_in___ns1__obdResultLog(struct soap*, const char*, struct __ns1__obdResultLog *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__obdResultLog(struct soap*, const struct __ns1__obdResultLog *, const char*, const char*);

#ifndef soap_write___ns1__obdResultLog
#define soap_write___ns1__obdResultLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__obdResultLog(soap, data),0) || soap_put___ns1__obdResultLog(soap, data, "-ns1:obdResultLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__obdResultLog * SOAP_FMAC4 soap_get___ns1__obdResultLog(struct soap*, struct __ns1__obdResultLog *, const char*, const char*);

#ifndef soap_read___ns1__obdResultLog
#define soap_read___ns1__obdResultLog(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__obdResultLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__obdResultLog * SOAP_FMAC2 soap_instantiate___ns1__obdResultLog(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__obdResultLog * soap_new___ns1__obdResultLog(struct soap *soap, int n = -1) { return soap_instantiate___ns1__obdResultLog(soap, n, NULL, NULL, NULL); }

inline struct __ns1__obdResultLog * soap_new_req___ns1__obdResultLog(struct soap *soap) { struct __ns1__obdResultLog *_p = soap_instantiate___ns1__obdResultLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__obdResultLog(soap, _p); } return _p; }

inline struct __ns1__obdResultLog * soap_new_set___ns1__obdResultLog(struct soap *soap, ns1__obdResultLog *ns1__obdResultLog_) { struct __ns1__obdResultLog *_p = soap_instantiate___ns1__obdResultLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__obdResultLog(soap, _p); _p->ns1__obdResultLog_ = ns1__obdResultLog_; } return _p; }

inline void soap_delete___ns1__obdResultLog(struct soap *soap, struct __ns1__obdResultLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__obdResultLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__dyhwAdjust
#define SOAP_TYPE___ns1__dyhwAdjust (149)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__dyhwAdjust(struct soap*, struct __ns1__dyhwAdjust *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__dyhwAdjust(struct soap*, const struct __ns1__dyhwAdjust *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__dyhwAdjust(struct soap*, const char*, int, const struct __ns1__dyhwAdjust *, const char*);
SOAP_FMAC3 struct __ns1__dyhwAdjust * SOAP_FMAC4 soap_in___ns1__dyhwAdjust(struct soap*, const char*, struct __ns1__dyhwAdjust *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__dyhwAdjust(struct soap*, const struct __ns1__dyhwAdjust *, const char*, const char*);

#ifndef soap_write___ns1__dyhwAdjust
#define soap_write___ns1__dyhwAdjust(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__dyhwAdjust(soap, data),0) || soap_put___ns1__dyhwAdjust(soap, data, "-ns1:dyhwAdjust", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__dyhwAdjust * SOAP_FMAC4 soap_get___ns1__dyhwAdjust(struct soap*, struct __ns1__dyhwAdjust *, const char*, const char*);

#ifndef soap_read___ns1__dyhwAdjust
#define soap_read___ns1__dyhwAdjust(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__dyhwAdjust(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__dyhwAdjust * SOAP_FMAC2 soap_instantiate___ns1__dyhwAdjust(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__dyhwAdjust * soap_new___ns1__dyhwAdjust(struct soap *soap, int n = -1) { return soap_instantiate___ns1__dyhwAdjust(soap, n, NULL, NULL, NULL); }

inline struct __ns1__dyhwAdjust * soap_new_req___ns1__dyhwAdjust(struct soap *soap) { struct __ns1__dyhwAdjust *_p = soap_instantiate___ns1__dyhwAdjust(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__dyhwAdjust(soap, _p); } return _p; }

inline struct __ns1__dyhwAdjust * soap_new_set___ns1__dyhwAdjust(struct soap *soap, ns1__dyhwAdjust *ns1__dyhwAdjust_) { struct __ns1__dyhwAdjust *_p = soap_instantiate___ns1__dyhwAdjust(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__dyhwAdjust(soap, _p); _p->ns1__dyhwAdjust_ = ns1__dyhwAdjust_; } return _p; }

inline void soap_delete___ns1__dyhwAdjust(struct soap *soap, struct __ns1__dyhwAdjust *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__dyhwAdjust(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__loadDownLog
#define SOAP_TYPE___ns1__loadDownLog (145)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__loadDownLog(struct soap*, struct __ns1__loadDownLog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__loadDownLog(struct soap*, const struct __ns1__loadDownLog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__loadDownLog(struct soap*, const char*, int, const struct __ns1__loadDownLog *, const char*);
SOAP_FMAC3 struct __ns1__loadDownLog * SOAP_FMAC4 soap_in___ns1__loadDownLog(struct soap*, const char*, struct __ns1__loadDownLog *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__loadDownLog(struct soap*, const struct __ns1__loadDownLog *, const char*, const char*);

#ifndef soap_write___ns1__loadDownLog
#define soap_write___ns1__loadDownLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__loadDownLog(soap, data),0) || soap_put___ns1__loadDownLog(soap, data, "-ns1:loadDownLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__loadDownLog * SOAP_FMAC4 soap_get___ns1__loadDownLog(struct soap*, struct __ns1__loadDownLog *, const char*, const char*);

#ifndef soap_read___ns1__loadDownLog
#define soap_read___ns1__loadDownLog(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__loadDownLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__loadDownLog * SOAP_FMAC2 soap_instantiate___ns1__loadDownLog(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__loadDownLog * soap_new___ns1__loadDownLog(struct soap *soap, int n = -1) { return soap_instantiate___ns1__loadDownLog(soap, n, NULL, NULL, NULL); }

inline struct __ns1__loadDownLog * soap_new_req___ns1__loadDownLog(struct soap *soap) { struct __ns1__loadDownLog *_p = soap_instantiate___ns1__loadDownLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__loadDownLog(soap, _p); } return _p; }

inline struct __ns1__loadDownLog * soap_new_set___ns1__loadDownLog(struct soap *soap, ns1__loadDownLog *ns1__loadDownLog_) { struct __ns1__loadDownLog *_p = soap_instantiate___ns1__loadDownLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__loadDownLog(soap, _p); _p->ns1__loadDownLog_ = ns1__loadDownLog_; } return _p; }

inline void soap_delete___ns1__loadDownLog(struct soap *soap, struct __ns1__loadDownLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__loadDownLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__dyhwSelfcheck
#define SOAP_TYPE___ns1__dyhwSelfcheck (141)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__dyhwSelfcheck(struct soap*, struct __ns1__dyhwSelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__dyhwSelfcheck(struct soap*, const struct __ns1__dyhwSelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__dyhwSelfcheck(struct soap*, const char*, int, const struct __ns1__dyhwSelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__dyhwSelfcheck * SOAP_FMAC4 soap_in___ns1__dyhwSelfcheck(struct soap*, const char*, struct __ns1__dyhwSelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__dyhwSelfcheck(struct soap*, const struct __ns1__dyhwSelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__dyhwSelfcheck
#define soap_write___ns1__dyhwSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__dyhwSelfcheck(soap, data),0) || soap_put___ns1__dyhwSelfcheck(soap, data, "-ns1:dyhwSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__dyhwSelfcheck * SOAP_FMAC4 soap_get___ns1__dyhwSelfcheck(struct soap*, struct __ns1__dyhwSelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__dyhwSelfcheck
#define soap_read___ns1__dyhwSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__dyhwSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__dyhwSelfcheck * SOAP_FMAC2 soap_instantiate___ns1__dyhwSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__dyhwSelfcheck * soap_new___ns1__dyhwSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__dyhwSelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__dyhwSelfcheck * soap_new_req___ns1__dyhwSelfcheck(struct soap *soap) { struct __ns1__dyhwSelfcheck *_p = soap_instantiate___ns1__dyhwSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__dyhwSelfcheck(soap, _p); } return _p; }

inline struct __ns1__dyhwSelfcheck * soap_new_set___ns1__dyhwSelfcheck(struct soap *soap, ns1__dyhwSelfcheck *ns1__dyhwSelfcheck_) { struct __ns1__dyhwSelfcheck *_p = soap_instantiate___ns1__dyhwSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__dyhwSelfcheck(soap, _p); _p->ns1__dyhwSelfcheck_ = ns1__dyhwSelfcheck_; } return _p; }

inline void soap_delete___ns1__dyhwSelfcheck(struct soap *soap, struct __ns1__dyhwSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__dyhwSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__ydjSelfcheck
#define SOAP_TYPE___ns1__ydjSelfcheck (137)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ydjSelfcheck(struct soap*, struct __ns1__ydjSelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ydjSelfcheck(struct soap*, const struct __ns1__ydjSelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ydjSelfcheck(struct soap*, const char*, int, const struct __ns1__ydjSelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__ydjSelfcheck * SOAP_FMAC4 soap_in___ns1__ydjSelfcheck(struct soap*, const char*, struct __ns1__ydjSelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ydjSelfcheck(struct soap*, const struct __ns1__ydjSelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__ydjSelfcheck
#define soap_write___ns1__ydjSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__ydjSelfcheck(soap, data),0) || soap_put___ns1__ydjSelfcheck(soap, data, "-ns1:ydjSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__ydjSelfcheck * SOAP_FMAC4 soap_get___ns1__ydjSelfcheck(struct soap*, struct __ns1__ydjSelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__ydjSelfcheck
#define soap_read___ns1__ydjSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__ydjSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__ydjSelfcheck * SOAP_FMAC2 soap_instantiate___ns1__ydjSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__ydjSelfcheck * soap_new___ns1__ydjSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__ydjSelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__ydjSelfcheck * soap_new_req___ns1__ydjSelfcheck(struct soap *soap) { struct __ns1__ydjSelfcheck *_p = soap_instantiate___ns1__ydjSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__ydjSelfcheck(soap, _p); } return _p; }

inline struct __ns1__ydjSelfcheck * soap_new_set___ns1__ydjSelfcheck(struct soap *soap, ns1__ydjSelfcheck *ns1__ydjSelfcheck_) { struct __ns1__ydjSelfcheck *_p = soap_instantiate___ns1__ydjSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__ydjSelfcheck(soap, _p); _p->ns1__ydjSelfcheck_ = ns1__ydjSelfcheck_; } return _p; }

inline void soap_delete___ns1__ydjSelfcheck(struct soap *soap, struct __ns1__ydjSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__ydjSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__vmasLog
#define SOAP_TYPE___ns1__vmasLog (133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__vmasLog(struct soap*, struct __ns1__vmasLog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__vmasLog(struct soap*, const struct __ns1__vmasLog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__vmasLog(struct soap*, const char*, int, const struct __ns1__vmasLog *, const char*);
SOAP_FMAC3 struct __ns1__vmasLog * SOAP_FMAC4 soap_in___ns1__vmasLog(struct soap*, const char*, struct __ns1__vmasLog *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__vmasLog(struct soap*, const struct __ns1__vmasLog *, const char*, const char*);

#ifndef soap_write___ns1__vmasLog
#define soap_write___ns1__vmasLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__vmasLog(soap, data),0) || soap_put___ns1__vmasLog(soap, data, "-ns1:vmasLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__vmasLog * SOAP_FMAC4 soap_get___ns1__vmasLog(struct soap*, struct __ns1__vmasLog *, const char*, const char*);

#ifndef soap_read___ns1__vmasLog
#define soap_read___ns1__vmasLog(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__vmasLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__vmasLog * SOAP_FMAC2 soap_instantiate___ns1__vmasLog(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__vmasLog * soap_new___ns1__vmasLog(struct soap *soap, int n = -1) { return soap_instantiate___ns1__vmasLog(soap, n, NULL, NULL, NULL); }

inline struct __ns1__vmasLog * soap_new_req___ns1__vmasLog(struct soap *soap) { struct __ns1__vmasLog *_p = soap_instantiate___ns1__vmasLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__vmasLog(soap, _p); } return _p; }

inline struct __ns1__vmasLog * soap_new_set___ns1__vmasLog(struct soap *soap, ns1__vmasLog *ns1__vmasLog_) { struct __ns1__vmasLog *_p = soap_instantiate___ns1__vmasLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__vmasLog(soap, _p); _p->ns1__vmasLog_ = ns1__vmasLog_; } return _p; }

inline void soap_delete___ns1__vmasLog(struct soap *soap, struct __ns1__vmasLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__vmasLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__doubleIdleLog_USCOREFC
#define SOAP_TYPE___ns1__doubleIdleLog_USCOREFC (129)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__doubleIdleLog_USCOREFC(struct soap*, struct __ns1__doubleIdleLog_USCOREFC *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__doubleIdleLog_USCOREFC(struct soap*, const struct __ns1__doubleIdleLog_USCOREFC *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__doubleIdleLog_USCOREFC(struct soap*, const char*, int, const struct __ns1__doubleIdleLog_USCOREFC *, const char*);
SOAP_FMAC3 struct __ns1__doubleIdleLog_USCOREFC * SOAP_FMAC4 soap_in___ns1__doubleIdleLog_USCOREFC(struct soap*, const char*, struct __ns1__doubleIdleLog_USCOREFC *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__doubleIdleLog_USCOREFC(struct soap*, const struct __ns1__doubleIdleLog_USCOREFC *, const char*, const char*);

#ifndef soap_write___ns1__doubleIdleLog_USCOREFC
#define soap_write___ns1__doubleIdleLog_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__doubleIdleLog_USCOREFC(soap, data),0) || soap_put___ns1__doubleIdleLog_USCOREFC(soap, data, "-ns1:doubleIdleLog_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__doubleIdleLog_USCOREFC * SOAP_FMAC4 soap_get___ns1__doubleIdleLog_USCOREFC(struct soap*, struct __ns1__doubleIdleLog_USCOREFC *, const char*, const char*);

#ifndef soap_read___ns1__doubleIdleLog_USCOREFC
#define soap_read___ns1__doubleIdleLog_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__doubleIdleLog_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__doubleIdleLog_USCOREFC * SOAP_FMAC2 soap_instantiate___ns1__doubleIdleLog_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__doubleIdleLog_USCOREFC * soap_new___ns1__doubleIdleLog_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate___ns1__doubleIdleLog_USCOREFC(soap, n, NULL, NULL, NULL); }

inline struct __ns1__doubleIdleLog_USCOREFC * soap_new_req___ns1__doubleIdleLog_USCOREFC(struct soap *soap) { struct __ns1__doubleIdleLog_USCOREFC *_p = soap_instantiate___ns1__doubleIdleLog_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleLog_USCOREFC(soap, _p); } return _p; }

inline struct __ns1__doubleIdleLog_USCOREFC * soap_new_set___ns1__doubleIdleLog_USCOREFC(struct soap *soap, ns1__doubleIdleLog_USCOREFC *ns1__doubleIdleLog_USCOREFC_) { struct __ns1__doubleIdleLog_USCOREFC *_p = soap_instantiate___ns1__doubleIdleLog_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleLog_USCOREFC(soap, _p); _p->ns1__doubleIdleLog_USCOREFC_ = ns1__doubleIdleLog_USCOREFC_; } return _p; }

inline void soap_delete___ns1__doubleIdleLog_USCOREFC(struct soap *soap, struct __ns1__doubleIdleLog_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__doubleIdleLog_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__obdResult
#define SOAP_TYPE___ns1__obdResult (125)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__obdResult(struct soap*, struct __ns1__obdResult *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__obdResult(struct soap*, const struct __ns1__obdResult *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__obdResult(struct soap*, const char*, int, const struct __ns1__obdResult *, const char*);
SOAP_FMAC3 struct __ns1__obdResult * SOAP_FMAC4 soap_in___ns1__obdResult(struct soap*, const char*, struct __ns1__obdResult *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__obdResult(struct soap*, const struct __ns1__obdResult *, const char*, const char*);

#ifndef soap_write___ns1__obdResult
#define soap_write___ns1__obdResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__obdResult(soap, data),0) || soap_put___ns1__obdResult(soap, data, "-ns1:obdResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__obdResult * SOAP_FMAC4 soap_get___ns1__obdResult(struct soap*, struct __ns1__obdResult *, const char*, const char*);

#ifndef soap_read___ns1__obdResult
#define soap_read___ns1__obdResult(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__obdResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__obdResult * SOAP_FMAC2 soap_instantiate___ns1__obdResult(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__obdResult * soap_new___ns1__obdResult(struct soap *soap, int n = -1) { return soap_instantiate___ns1__obdResult(soap, n, NULL, NULL, NULL); }

inline struct __ns1__obdResult * soap_new_req___ns1__obdResult(struct soap *soap) { struct __ns1__obdResult *_p = soap_instantiate___ns1__obdResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__obdResult(soap, _p); } return _p; }

inline struct __ns1__obdResult * soap_new_set___ns1__obdResult(struct soap *soap, ns1__obdResult *ns1__obdResult_) { struct __ns1__obdResult *_p = soap_instantiate___ns1__obdResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__obdResult(soap, _p); _p->ns1__obdResult_ = ns1__obdResult_; } return _p; }

inline void soap_delete___ns1__obdResult(struct soap *soap, struct __ns1__obdResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__obdResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__cgjSelfcheck
#define SOAP_TYPE___ns1__cgjSelfcheck (121)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__cgjSelfcheck(struct soap*, struct __ns1__cgjSelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__cgjSelfcheck(struct soap*, const struct __ns1__cgjSelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__cgjSelfcheck(struct soap*, const char*, int, const struct __ns1__cgjSelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__cgjSelfcheck * SOAP_FMAC4 soap_in___ns1__cgjSelfcheck(struct soap*, const char*, struct __ns1__cgjSelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__cgjSelfcheck(struct soap*, const struct __ns1__cgjSelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__cgjSelfcheck
#define soap_write___ns1__cgjSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__cgjSelfcheck(soap, data),0) || soap_put___ns1__cgjSelfcheck(soap, data, "-ns1:cgjSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__cgjSelfcheck * SOAP_FMAC4 soap_get___ns1__cgjSelfcheck(struct soap*, struct __ns1__cgjSelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__cgjSelfcheck
#define soap_read___ns1__cgjSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__cgjSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__cgjSelfcheck * SOAP_FMAC2 soap_instantiate___ns1__cgjSelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__cgjSelfcheck * soap_new___ns1__cgjSelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__cgjSelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__cgjSelfcheck * soap_new_req___ns1__cgjSelfcheck(struct soap *soap) { struct __ns1__cgjSelfcheck *_p = soap_instantiate___ns1__cgjSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjSelfcheck(soap, _p); } return _p; }

inline struct __ns1__cgjSelfcheck * soap_new_set___ns1__cgjSelfcheck(struct soap *soap, ns1__cgjSelfcheck *ns1__cgjSelfcheck_) { struct __ns1__cgjSelfcheck *_p = soap_instantiate___ns1__cgjSelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjSelfcheck(soap, _p); _p->ns1__cgjSelfcheck_ = ns1__cgjSelfcheck_; } return _p; }

inline void soap_delete___ns1__cgjSelfcheck(struct soap *soap, struct __ns1__cgjSelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__cgjSelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__cgjLASelfcheck
#define SOAP_TYPE___ns1__cgjLASelfcheck (117)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__cgjLASelfcheck(struct soap*, struct __ns1__cgjLASelfcheck *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__cgjLASelfcheck(struct soap*, const struct __ns1__cgjLASelfcheck *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__cgjLASelfcheck(struct soap*, const char*, int, const struct __ns1__cgjLASelfcheck *, const char*);
SOAP_FMAC3 struct __ns1__cgjLASelfcheck * SOAP_FMAC4 soap_in___ns1__cgjLASelfcheck(struct soap*, const char*, struct __ns1__cgjLASelfcheck *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__cgjLASelfcheck(struct soap*, const struct __ns1__cgjLASelfcheck *, const char*, const char*);

#ifndef soap_write___ns1__cgjLASelfcheck
#define soap_write___ns1__cgjLASelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__cgjLASelfcheck(soap, data),0) || soap_put___ns1__cgjLASelfcheck(soap, data, "-ns1:cgjLASelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__cgjLASelfcheck * SOAP_FMAC4 soap_get___ns1__cgjLASelfcheck(struct soap*, struct __ns1__cgjLASelfcheck *, const char*, const char*);

#ifndef soap_read___ns1__cgjLASelfcheck
#define soap_read___ns1__cgjLASelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__cgjLASelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__cgjLASelfcheck * SOAP_FMAC2 soap_instantiate___ns1__cgjLASelfcheck(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__cgjLASelfcheck * soap_new___ns1__cgjLASelfcheck(struct soap *soap, int n = -1) { return soap_instantiate___ns1__cgjLASelfcheck(soap, n, NULL, NULL, NULL); }

inline struct __ns1__cgjLASelfcheck * soap_new_req___ns1__cgjLASelfcheck(struct soap *soap) { struct __ns1__cgjLASelfcheck *_p = soap_instantiate___ns1__cgjLASelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjLASelfcheck(soap, _p); } return _p; }

inline struct __ns1__cgjLASelfcheck * soap_new_set___ns1__cgjLASelfcheck(struct soap *soap, ns1__cgjLASelfcheck *ns1__cgjLASelfcheck_) { struct __ns1__cgjLASelfcheck *_p = soap_instantiate___ns1__cgjLASelfcheck(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__cgjLASelfcheck(soap, _p); _p->ns1__cgjLASelfcheck_ = ns1__cgjLASelfcheck_; } return _p; }

inline void soap_delete___ns1__cgjLASelfcheck(struct soap *soap, struct __ns1__cgjLASelfcheck *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__cgjLASelfcheck(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__doubleIdleData_USCOREFC
#define SOAP_TYPE___ns1__doubleIdleData_USCOREFC (113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__doubleIdleData_USCOREFC(struct soap*, struct __ns1__doubleIdleData_USCOREFC *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__doubleIdleData_USCOREFC(struct soap*, const struct __ns1__doubleIdleData_USCOREFC *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__doubleIdleData_USCOREFC(struct soap*, const char*, int, const struct __ns1__doubleIdleData_USCOREFC *, const char*);
SOAP_FMAC3 struct __ns1__doubleIdleData_USCOREFC * SOAP_FMAC4 soap_in___ns1__doubleIdleData_USCOREFC(struct soap*, const char*, struct __ns1__doubleIdleData_USCOREFC *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__doubleIdleData_USCOREFC(struct soap*, const struct __ns1__doubleIdleData_USCOREFC *, const char*, const char*);

#ifndef soap_write___ns1__doubleIdleData_USCOREFC
#define soap_write___ns1__doubleIdleData_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__doubleIdleData_USCOREFC(soap, data),0) || soap_put___ns1__doubleIdleData_USCOREFC(soap, data, "-ns1:doubleIdleData_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__doubleIdleData_USCOREFC * SOAP_FMAC4 soap_get___ns1__doubleIdleData_USCOREFC(struct soap*, struct __ns1__doubleIdleData_USCOREFC *, const char*, const char*);

#ifndef soap_read___ns1__doubleIdleData_USCOREFC
#define soap_read___ns1__doubleIdleData_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__doubleIdleData_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__doubleIdleData_USCOREFC * SOAP_FMAC2 soap_instantiate___ns1__doubleIdleData_USCOREFC(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__doubleIdleData_USCOREFC * soap_new___ns1__doubleIdleData_USCOREFC(struct soap *soap, int n = -1) { return soap_instantiate___ns1__doubleIdleData_USCOREFC(soap, n, NULL, NULL, NULL); }

inline struct __ns1__doubleIdleData_USCOREFC * soap_new_req___ns1__doubleIdleData_USCOREFC(struct soap *soap) { struct __ns1__doubleIdleData_USCOREFC *_p = soap_instantiate___ns1__doubleIdleData_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleData_USCOREFC(soap, _p); } return _p; }

inline struct __ns1__doubleIdleData_USCOREFC * soap_new_set___ns1__doubleIdleData_USCOREFC(struct soap *soap, ns1__doubleIdleData_USCOREFC *ns1__doubleIdleData_USCOREFC_) { struct __ns1__doubleIdleData_USCOREFC *_p = soap_instantiate___ns1__doubleIdleData_USCOREFC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__doubleIdleData_USCOREFC(soap, _p); _p->ns1__doubleIdleData_USCOREFC_ = ns1__doubleIdleData_USCOREFC_; } return _p; }

inline void soap_delete___ns1__doubleIdleData_USCOREFC(struct soap *soap, struct __ns1__doubleIdleData_USCOREFC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__doubleIdleData_USCOREFC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__bgAirHC
#define SOAP_TYPE___ns1__bgAirHC (109)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__bgAirHC(struct soap*, struct __ns1__bgAirHC *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__bgAirHC(struct soap*, const struct __ns1__bgAirHC *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__bgAirHC(struct soap*, const char*, int, const struct __ns1__bgAirHC *, const char*);
SOAP_FMAC3 struct __ns1__bgAirHC * SOAP_FMAC4 soap_in___ns1__bgAirHC(struct soap*, const char*, struct __ns1__bgAirHC *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__bgAirHC(struct soap*, const struct __ns1__bgAirHC *, const char*, const char*);

#ifndef soap_write___ns1__bgAirHC
#define soap_write___ns1__bgAirHC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__bgAirHC(soap, data),0) || soap_put___ns1__bgAirHC(soap, data, "-ns1:bgAirHC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__bgAirHC * SOAP_FMAC4 soap_get___ns1__bgAirHC(struct soap*, struct __ns1__bgAirHC *, const char*, const char*);

#ifndef soap_read___ns1__bgAirHC
#define soap_read___ns1__bgAirHC(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__bgAirHC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__bgAirHC * SOAP_FMAC2 soap_instantiate___ns1__bgAirHC(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__bgAirHC * soap_new___ns1__bgAirHC(struct soap *soap, int n = -1) { return soap_instantiate___ns1__bgAirHC(soap, n, NULL, NULL, NULL); }

inline struct __ns1__bgAirHC * soap_new_req___ns1__bgAirHC(struct soap *soap) { struct __ns1__bgAirHC *_p = soap_instantiate___ns1__bgAirHC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__bgAirHC(soap, _p); } return _p; }

inline struct __ns1__bgAirHC * soap_new_set___ns1__bgAirHC(struct soap *soap, ns1__bgAirHC *ns1__bgAirHC_) { struct __ns1__bgAirHC *_p = soap_instantiate___ns1__bgAirHC(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__bgAirHC(soap, _p); _p->ns1__bgAirHC_ = ns1__bgAirHC_; } return _p; }

inline void soap_delete___ns1__bgAirHC(struct soap *soap, struct __ns1__bgAirHC *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__bgAirHC(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__sendMessage
#define SOAP_TYPE___ns1__sendMessage (105)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__sendMessage(struct soap*, struct __ns1__sendMessage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__sendMessage(struct soap*, const struct __ns1__sendMessage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__sendMessage(struct soap*, const char*, int, const struct __ns1__sendMessage *, const char*);
SOAP_FMAC3 struct __ns1__sendMessage * SOAP_FMAC4 soap_in___ns1__sendMessage(struct soap*, const char*, struct __ns1__sendMessage *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__sendMessage(struct soap*, const struct __ns1__sendMessage *, const char*, const char*);

#ifndef soap_write___ns1__sendMessage
#define soap_write___ns1__sendMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__sendMessage(soap, data),0) || soap_put___ns1__sendMessage(soap, data, "-ns1:sendMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__sendMessage * SOAP_FMAC4 soap_get___ns1__sendMessage(struct soap*, struct __ns1__sendMessage *, const char*, const char*);

#ifndef soap_read___ns1__sendMessage
#define soap_read___ns1__sendMessage(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__sendMessage(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__sendMessage * SOAP_FMAC2 soap_instantiate___ns1__sendMessage(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__sendMessage * soap_new___ns1__sendMessage(struct soap *soap, int n = -1) { return soap_instantiate___ns1__sendMessage(soap, n, NULL, NULL, NULL); }

inline struct __ns1__sendMessage * soap_new_req___ns1__sendMessage(struct soap *soap) { struct __ns1__sendMessage *_p = soap_instantiate___ns1__sendMessage(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sendMessage(soap, _p); } return _p; }

inline struct __ns1__sendMessage * soap_new_set___ns1__sendMessage(struct soap *soap, ns1__sendMessage *ns1__sendMessage_) { struct __ns1__sendMessage *_p = soap_instantiate___ns1__sendMessage(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__sendMessage(soap, _p); _p->ns1__sendMessage_ = ns1__sendMessage_; } return _p; }

inline void soap_delete___ns1__sendMessage(struct soap *soap, struct __ns1__sendMessage *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__sendMessage(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__getCarInfo
#define SOAP_TYPE___ns1__getCarInfo (101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getCarInfo(struct soap*, struct __ns1__getCarInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getCarInfo(struct soap*, const struct __ns1__getCarInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getCarInfo(struct soap*, const char*, int, const struct __ns1__getCarInfo *, const char*);
SOAP_FMAC3 struct __ns1__getCarInfo * SOAP_FMAC4 soap_in___ns1__getCarInfo(struct soap*, const char*, struct __ns1__getCarInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getCarInfo(struct soap*, const struct __ns1__getCarInfo *, const char*, const char*);

#ifndef soap_write___ns1__getCarInfo
#define soap_write___ns1__getCarInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__getCarInfo(soap, data),0) || soap_put___ns1__getCarInfo(soap, data, "-ns1:getCarInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__getCarInfo * SOAP_FMAC4 soap_get___ns1__getCarInfo(struct soap*, struct __ns1__getCarInfo *, const char*, const char*);

#ifndef soap_read___ns1__getCarInfo
#define soap_read___ns1__getCarInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__getCarInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__getCarInfo * SOAP_FMAC2 soap_instantiate___ns1__getCarInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__getCarInfo * soap_new___ns1__getCarInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__getCarInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__getCarInfo * soap_new_req___ns1__getCarInfo(struct soap *soap) { struct __ns1__getCarInfo *_p = soap_instantiate___ns1__getCarInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getCarInfo(soap, _p); } return _p; }

inline struct __ns1__getCarInfo * soap_new_set___ns1__getCarInfo(struct soap *soap, ns1__getCarInfo *ns1__getCarInfo_) { struct __ns1__getCarInfo *_p = soap_instantiate___ns1__getCarInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__getCarInfo(soap, _p); _p->ns1__getCarInfo_ = ns1__getCarInfo_; } return _p; }

inline void soap_delete___ns1__getCarInfo(struct soap *soap, struct __ns1__getCarInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getCarInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__lightproofSmokeLog
#define SOAP_TYPE___ns1__lightproofSmokeLog (97)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__lightproofSmokeLog(struct soap*, struct __ns1__lightproofSmokeLog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__lightproofSmokeLog(struct soap*, const struct __ns1__lightproofSmokeLog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__lightproofSmokeLog(struct soap*, const char*, int, const struct __ns1__lightproofSmokeLog *, const char*);
SOAP_FMAC3 struct __ns1__lightproofSmokeLog * SOAP_FMAC4 soap_in___ns1__lightproofSmokeLog(struct soap*, const char*, struct __ns1__lightproofSmokeLog *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__lightproofSmokeLog(struct soap*, const struct __ns1__lightproofSmokeLog *, const char*, const char*);

#ifndef soap_write___ns1__lightproofSmokeLog
#define soap_write___ns1__lightproofSmokeLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__lightproofSmokeLog(soap, data),0) || soap_put___ns1__lightproofSmokeLog(soap, data, "-ns1:lightproofSmokeLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__lightproofSmokeLog * SOAP_FMAC4 soap_get___ns1__lightproofSmokeLog(struct soap*, struct __ns1__lightproofSmokeLog *, const char*, const char*);

#ifndef soap_read___ns1__lightproofSmokeLog
#define soap_read___ns1__lightproofSmokeLog(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__lightproofSmokeLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__lightproofSmokeLog * SOAP_FMAC2 soap_instantiate___ns1__lightproofSmokeLog(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__lightproofSmokeLog * soap_new___ns1__lightproofSmokeLog(struct soap *soap, int n = -1) { return soap_instantiate___ns1__lightproofSmokeLog(soap, n, NULL, NULL, NULL); }

inline struct __ns1__lightproofSmokeLog * soap_new_req___ns1__lightproofSmokeLog(struct soap *soap) { struct __ns1__lightproofSmokeLog *_p = soap_instantiate___ns1__lightproofSmokeLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeLog(soap, _p); } return _p; }

inline struct __ns1__lightproofSmokeLog * soap_new_set___ns1__lightproofSmokeLog(struct soap *soap, ns1__lightproofSmokeLog *ns1__lightproofSmokeLog_) { struct __ns1__lightproofSmokeLog *_p = soap_instantiate___ns1__lightproofSmokeLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__lightproofSmokeLog(soap, _p); _p->ns1__lightproofSmokeLog_ = ns1__lightproofSmokeLog_; } return _p; }

inline void soap_delete___ns1__lightproofSmokeLog(struct soap *soap, struct __ns1__lightproofSmokeLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__lightproofSmokeLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__argChang
#define SOAP_TYPE___ns1__argChang (93)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__argChang(struct soap*, struct __ns1__argChang *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__argChang(struct soap*, const struct __ns1__argChang *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__argChang(struct soap*, const char*, int, const struct __ns1__argChang *, const char*);
SOAP_FMAC3 struct __ns1__argChang * SOAP_FMAC4 soap_in___ns1__argChang(struct soap*, const char*, struct __ns1__argChang *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__argChang(struct soap*, const struct __ns1__argChang *, const char*, const char*);

#ifndef soap_write___ns1__argChang
#define soap_write___ns1__argChang(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__argChang(soap, data),0) || soap_put___ns1__argChang(soap, data, "-ns1:argChang", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__argChang * SOAP_FMAC4 soap_get___ns1__argChang(struct soap*, struct __ns1__argChang *, const char*, const char*);

#ifndef soap_read___ns1__argChang
#define soap_read___ns1__argChang(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__argChang(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__argChang * SOAP_FMAC2 soap_instantiate___ns1__argChang(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__argChang * soap_new___ns1__argChang(struct soap *soap, int n = -1) { return soap_instantiate___ns1__argChang(soap, n, NULL, NULL, NULL); }

inline struct __ns1__argChang * soap_new_req___ns1__argChang(struct soap *soap) { struct __ns1__argChang *_p = soap_instantiate___ns1__argChang(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__argChang(soap, _p); } return _p; }

inline struct __ns1__argChang * soap_new_set___ns1__argChang(struct soap *soap, ns1__argChang *ns1__argChang_) { struct __ns1__argChang *_p = soap_instantiate___ns1__argChang(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__argChang(soap, _p); _p->ns1__argChang_ = ns1__argChang_; } return _p; }

inline void soap_delete___ns1__argChang(struct soap *soap, struct __ns1__argChang *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__argChang(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (328)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (327)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (321)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTons1__cgjLSPSelfcheck
#define SOAP_TYPE_PointerTons1__cgjLSPSelfcheck (237)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__cgjLSPSelfcheck(struct soap*, ns1__cgjLSPSelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__cgjLSPSelfcheck(struct soap*, const char *, int, ns1__cgjLSPSelfcheck *const*, const char *);
SOAP_FMAC3 ns1__cgjLSPSelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__cgjLSPSelfcheck(struct soap*, const char*, ns1__cgjLSPSelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__cgjLSPSelfcheck(struct soap*, ns1__cgjLSPSelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__cgjLSPSelfcheck
#define soap_write_PointerTons1__cgjLSPSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__cgjLSPSelfcheck(soap, data),0) || soap_put_PointerTons1__cgjLSPSelfcheck(soap, data, "ns1:cgjLSPSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjLSPSelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__cgjLSPSelfcheck(struct soap*, ns1__cgjLSPSelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__cgjLSPSelfcheck
#define soap_read_PointerTons1__cgjLSPSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__cgjLSPSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__lljSelfcheck
#define SOAP_TYPE_PointerTons1__lljSelfcheck (233)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__lljSelfcheck(struct soap*, ns1__lljSelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__lljSelfcheck(struct soap*, const char *, int, ns1__lljSelfcheck *const*, const char *);
SOAP_FMAC3 ns1__lljSelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__lljSelfcheck(struct soap*, const char*, ns1__lljSelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__lljSelfcheck(struct soap*, ns1__lljSelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__lljSelfcheck
#define soap_write_PointerTons1__lljSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__lljSelfcheck(soap, data),0) || soap_put_PointerTons1__lljSelfcheck(soap, data, "ns1:lljSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lljSelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__lljSelfcheck(struct soap*, ns1__lljSelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__lljSelfcheck
#define soap_read_PointerTons1__lljSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__lljSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__cgjALPSelfcheck
#define SOAP_TYPE_PointerTons1__cgjALPSelfcheck (229)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__cgjALPSelfcheck(struct soap*, ns1__cgjALPSelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__cgjALPSelfcheck(struct soap*, const char *, int, ns1__cgjALPSelfcheck *const*, const char *);
SOAP_FMAC3 ns1__cgjALPSelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__cgjALPSelfcheck(struct soap*, const char*, ns1__cgjALPSelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__cgjALPSelfcheck(struct soap*, ns1__cgjALPSelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__cgjALPSelfcheck
#define soap_write_PointerTons1__cgjALPSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__cgjALPSelfcheck(soap, data),0) || soap_put_PointerTons1__cgjALPSelfcheck(soap, data, "ns1:cgjALPSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjALPSelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__cgjALPSelfcheck(struct soap*, ns1__cgjALPSelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__cgjALPSelfcheck
#define soap_read_PointerTons1__cgjALPSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__cgjALPSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__wqfxySelfcheck
#define SOAP_TYPE_PointerTons1__wqfxySelfcheck (225)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__wqfxySelfcheck(struct soap*, ns1__wqfxySelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__wqfxySelfcheck(struct soap*, const char *, int, ns1__wqfxySelfcheck *const*, const char *);
SOAP_FMAC3 ns1__wqfxySelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__wqfxySelfcheck(struct soap*, const char*, ns1__wqfxySelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__wqfxySelfcheck(struct soap*, ns1__wqfxySelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__wqfxySelfcheck
#define soap_write_PointerTons1__wqfxySelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__wqfxySelfcheck(soap, data),0) || soap_put_PointerTons1__wqfxySelfcheck(soap, data, "ns1:wqfxySelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__wqfxySelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__wqfxySelfcheck(struct soap*, ns1__wqfxySelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__wqfxySelfcheck
#define soap_read_PointerTons1__wqfxySelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__wqfxySelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__sendMessage_USCOREFC
#define SOAP_TYPE_PointerTons1__sendMessage_USCOREFC (222)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__sendMessage_USCOREFC(struct soap*, ns1__sendMessage_USCOREFC *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__sendMessage_USCOREFC(struct soap*, const char *, int, ns1__sendMessage_USCOREFC *const*, const char *);
SOAP_FMAC3 ns1__sendMessage_USCOREFC ** SOAP_FMAC4 soap_in_PointerTons1__sendMessage_USCOREFC(struct soap*, const char*, ns1__sendMessage_USCOREFC **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__sendMessage_USCOREFC(struct soap*, ns1__sendMessage_USCOREFC *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__sendMessage_USCOREFC
#define soap_write_PointerTons1__sendMessage_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__sendMessage_USCOREFC(soap, data),0) || soap_put_PointerTons1__sendMessage_USCOREFC(soap, data, "ns1:sendMessage_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__sendMessage_USCOREFC ** SOAP_FMAC4 soap_get_PointerTons1__sendMessage_USCOREFC(struct soap*, ns1__sendMessage_USCOREFC **, const char*, const char*);

#ifndef soap_read_PointerTons1__sendMessage_USCOREFC
#define soap_read_PointerTons1__sendMessage_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__sendMessage_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__sdsqtfxySelfcheck
#define SOAP_TYPE_PointerTons1__sdsqtfxySelfcheck (218)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__sdsqtfxySelfcheck(struct soap*, ns1__sdsqtfxySelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__sdsqtfxySelfcheck(struct soap*, const char *, int, ns1__sdsqtfxySelfcheck *const*, const char *);
SOAP_FMAC3 ns1__sdsqtfxySelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__sdsqtfxySelfcheck(struct soap*, const char*, ns1__sdsqtfxySelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__sdsqtfxySelfcheck(struct soap*, ns1__sdsqtfxySelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__sdsqtfxySelfcheck
#define soap_write_PointerTons1__sdsqtfxySelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__sdsqtfxySelfcheck(soap, data),0) || soap_put_PointerTons1__sdsqtfxySelfcheck(soap, data, "ns1:sdsqtfxySelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__sdsqtfxySelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__sdsqtfxySelfcheck(struct soap*, ns1__sdsqtfxySelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__sdsqtfxySelfcheck
#define soap_read_PointerTons1__sdsqtfxySelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__sdsqtfxySelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__qyfxSelfcheck
#define SOAP_TYPE_PointerTons1__qyfxSelfcheck (214)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__qyfxSelfcheck(struct soap*, ns1__qyfxSelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__qyfxSelfcheck(struct soap*, const char *, int, ns1__qyfxSelfcheck *const*, const char *);
SOAP_FMAC3 ns1__qyfxSelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__qyfxSelfcheck(struct soap*, const char*, ns1__qyfxSelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__qyfxSelfcheck(struct soap*, ns1__qyfxSelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__qyfxSelfcheck
#define soap_write_PointerTons1__qyfxSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__qyfxSelfcheck(soap, data),0) || soap_put_PointerTons1__qyfxSelfcheck(soap, data, "ns1:qyfxSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__qyfxSelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__qyfxSelfcheck(struct soap*, ns1__qyfxSelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__qyfxSelfcheck
#define soap_read_PointerTons1__qyfxSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__qyfxSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__lightproofSmokeData
#define SOAP_TYPE_PointerTons1__lightproofSmokeData (211)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__lightproofSmokeData(struct soap*, ns1__lightproofSmokeData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__lightproofSmokeData(struct soap*, const char *, int, ns1__lightproofSmokeData *const*, const char *);
SOAP_FMAC3 ns1__lightproofSmokeData ** SOAP_FMAC4 soap_in_PointerTons1__lightproofSmokeData(struct soap*, const char*, ns1__lightproofSmokeData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__lightproofSmokeData(struct soap*, ns1__lightproofSmokeData *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__lightproofSmokeData
#define soap_write_PointerTons1__lightproofSmokeData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__lightproofSmokeData(soap, data),0) || soap_put_PointerTons1__lightproofSmokeData(soap, data, "ns1:lightproofSmokeData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lightproofSmokeData ** SOAP_FMAC4 soap_get_PointerTons1__lightproofSmokeData(struct soap*, ns1__lightproofSmokeData **, const char*, const char*);

#ifndef soap_read_PointerTons1__lightproofSmokeData
#define soap_read_PointerTons1__lightproofSmokeData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__lightproofSmokeData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__lightproofSmokeData_USCOREFC
#define SOAP_TYPE_PointerTons1__lightproofSmokeData_USCOREFC (207)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__lightproofSmokeData_USCOREFC(struct soap*, ns1__lightproofSmokeData_USCOREFC *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__lightproofSmokeData_USCOREFC(struct soap*, const char *, int, ns1__lightproofSmokeData_USCOREFC *const*, const char *);
SOAP_FMAC3 ns1__lightproofSmokeData_USCOREFC ** SOAP_FMAC4 soap_in_PointerTons1__lightproofSmokeData_USCOREFC(struct soap*, const char*, ns1__lightproofSmokeData_USCOREFC **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__lightproofSmokeData_USCOREFC(struct soap*, ns1__lightproofSmokeData_USCOREFC *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__lightproofSmokeData_USCOREFC
#define soap_write_PointerTons1__lightproofSmokeData_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__lightproofSmokeData_USCOREFC(soap, data),0) || soap_put_PointerTons1__lightproofSmokeData_USCOREFC(soap, data, "ns1:lightproofSmokeData_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lightproofSmokeData_USCOREFC ** SOAP_FMAC4 soap_get_PointerTons1__lightproofSmokeData_USCOREFC(struct soap*, ns1__lightproofSmokeData_USCOREFC **, const char*, const char*);

#ifndef soap_read_PointerTons1__lightproofSmokeData_USCOREFC
#define soap_read_PointerTons1__lightproofSmokeData_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__lightproofSmokeData_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__wqfxyAdjust
#define SOAP_TYPE_PointerTons1__wqfxyAdjust (203)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__wqfxyAdjust(struct soap*, ns1__wqfxyAdjust *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__wqfxyAdjust(struct soap*, const char *, int, ns1__wqfxyAdjust *const*, const char *);
SOAP_FMAC3 ns1__wqfxyAdjust ** SOAP_FMAC4 soap_in_PointerTons1__wqfxyAdjust(struct soap*, const char*, ns1__wqfxyAdjust **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__wqfxyAdjust(struct soap*, ns1__wqfxyAdjust *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__wqfxyAdjust
#define soap_write_PointerTons1__wqfxyAdjust(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__wqfxyAdjust(soap, data),0) || soap_put_PointerTons1__wqfxyAdjust(soap, data, "ns1:wqfxyAdjust", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__wqfxyAdjust ** SOAP_FMAC4 soap_get_PointerTons1__wqfxyAdjust(struct soap*, ns1__wqfxyAdjust **, const char*, const char*);

#ifndef soap_read_PointerTons1__wqfxyAdjust
#define soap_read_PointerTons1__wqfxyAdjust(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__wqfxyAdjust(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__cgjPLHPSelfcheck
#define SOAP_TYPE_PointerTons1__cgjPLHPSelfcheck (199)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__cgjPLHPSelfcheck(struct soap*, ns1__cgjPLHPSelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__cgjPLHPSelfcheck(struct soap*, const char *, int, ns1__cgjPLHPSelfcheck *const*, const char *);
SOAP_FMAC3 ns1__cgjPLHPSelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__cgjPLHPSelfcheck(struct soap*, const char*, ns1__cgjPLHPSelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__cgjPLHPSelfcheck(struct soap*, ns1__cgjPLHPSelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__cgjPLHPSelfcheck
#define soap_write_PointerTons1__cgjPLHPSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__cgjPLHPSelfcheck(soap, data),0) || soap_put_PointerTons1__cgjPLHPSelfcheck(soap, data, "ns1:cgjPLHPSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjPLHPSelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__cgjPLHPSelfcheck(struct soap*, ns1__cgjPLHPSelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__cgjPLHPSelfcheck
#define soap_read_PointerTons1__cgjPLHPSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__cgjPLHPSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__doubleIdleLog
#define SOAP_TYPE_PointerTons1__doubleIdleLog (196)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__doubleIdleLog(struct soap*, ns1__doubleIdleLog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__doubleIdleLog(struct soap*, const char *, int, ns1__doubleIdleLog *const*, const char *);
SOAP_FMAC3 ns1__doubleIdleLog ** SOAP_FMAC4 soap_in_PointerTons1__doubleIdleLog(struct soap*, const char*, ns1__doubleIdleLog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__doubleIdleLog(struct soap*, ns1__doubleIdleLog *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__doubleIdleLog
#define soap_write_PointerTons1__doubleIdleLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__doubleIdleLog(soap, data),0) || soap_put_PointerTons1__doubleIdleLog(soap, data, "ns1:doubleIdleLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__doubleIdleLog ** SOAP_FMAC4 soap_get_PointerTons1__doubleIdleLog(struct soap*, ns1__doubleIdleLog **, const char*, const char*);

#ifndef soap_read_PointerTons1__doubleIdleLog
#define soap_read_PointerTons1__doubleIdleLog(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__doubleIdleLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__doubleIdleData
#define SOAP_TYPE_PointerTons1__doubleIdleData (193)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__doubleIdleData(struct soap*, ns1__doubleIdleData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__doubleIdleData(struct soap*, const char *, int, ns1__doubleIdleData *const*, const char *);
SOAP_FMAC3 ns1__doubleIdleData ** SOAP_FMAC4 soap_in_PointerTons1__doubleIdleData(struct soap*, const char*, ns1__doubleIdleData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__doubleIdleData(struct soap*, ns1__doubleIdleData *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__doubleIdleData
#define soap_write_PointerTons1__doubleIdleData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__doubleIdleData(soap, data),0) || soap_put_PointerTons1__doubleIdleData(soap, data, "ns1:doubleIdleData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__doubleIdleData ** SOAP_FMAC4 soap_get_PointerTons1__doubleIdleData(struct soap*, ns1__doubleIdleData **, const char*, const char*);

#ifndef soap_read_PointerTons1__doubleIdleData
#define soap_read_PointerTons1__doubleIdleData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__doubleIdleData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__getSatate
#define SOAP_TYPE_PointerTons1__getSatate (189)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getSatate(struct soap*, ns1__getSatate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getSatate(struct soap*, const char *, int, ns1__getSatate *const*, const char *);
SOAP_FMAC3 ns1__getSatate ** SOAP_FMAC4 soap_in_PointerTons1__getSatate(struct soap*, const char*, ns1__getSatate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getSatate(struct soap*, ns1__getSatate *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__getSatate
#define soap_write_PointerTons1__getSatate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__getSatate(soap, data),0) || soap_put_PointerTons1__getSatate(soap, data, "ns1:getSatate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__getSatate ** SOAP_FMAC4 soap_get_PointerTons1__getSatate(struct soap*, ns1__getSatate **, const char*, const char*);

#ifndef soap_read_PointerTons1__getSatate
#define soap_read_PointerTons1__getSatate(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__getSatate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__motoDbIdleData
#define SOAP_TYPE_PointerTons1__motoDbIdleData (185)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__motoDbIdleData(struct soap*, ns1__motoDbIdleData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__motoDbIdleData(struct soap*, const char *, int, ns1__motoDbIdleData *const*, const char *);
SOAP_FMAC3 ns1__motoDbIdleData ** SOAP_FMAC4 soap_in_PointerTons1__motoDbIdleData(struct soap*, const char*, ns1__motoDbIdleData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__motoDbIdleData(struct soap*, ns1__motoDbIdleData *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__motoDbIdleData
#define soap_write_PointerTons1__motoDbIdleData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__motoDbIdleData(soap, data),0) || soap_put_PointerTons1__motoDbIdleData(soap, data, "ns1:motoDbIdleData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__motoDbIdleData ** SOAP_FMAC4 soap_get_PointerTons1__motoDbIdleData(struct soap*, ns1__motoDbIdleData **, const char*, const char*);

#ifndef soap_read_PointerTons1__motoDbIdleData
#define soap_read_PointerTons1__motoDbIdleData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__motoDbIdleData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__vmasData
#define SOAP_TYPE_PointerTons1__vmasData (181)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__vmasData(struct soap*, ns1__vmasData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__vmasData(struct soap*, const char *, int, ns1__vmasData *const*, const char *);
SOAP_FMAC3 ns1__vmasData ** SOAP_FMAC4 soap_in_PointerTons1__vmasData(struct soap*, const char*, ns1__vmasData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__vmasData(struct soap*, ns1__vmasData *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__vmasData
#define soap_write_PointerTons1__vmasData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__vmasData(soap, data),0) || soap_put_PointerTons1__vmasData(soap, data, "ns1:vmasData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__vmasData ** SOAP_FMAC4 soap_get_PointerTons1__vmasData(struct soap*, ns1__vmasData **, const char*, const char*);

#ifndef soap_read_PointerTons1__vmasData
#define soap_read_PointerTons1__vmasData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__vmasData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__loadDownData
#define SOAP_TYPE_PointerTons1__loadDownData (177)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__loadDownData(struct soap*, ns1__loadDownData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__loadDownData(struct soap*, const char *, int, ns1__loadDownData *const*, const char *);
SOAP_FMAC3 ns1__loadDownData ** SOAP_FMAC4 soap_in_PointerTons1__loadDownData(struct soap*, const char*, ns1__loadDownData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__loadDownData(struct soap*, ns1__loadDownData *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__loadDownData
#define soap_write_PointerTons1__loadDownData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__loadDownData(soap, data),0) || soap_put_PointerTons1__loadDownData(soap, data, "ns1:loadDownData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__loadDownData ** SOAP_FMAC4 soap_get_PointerTons1__loadDownData(struct soap*, ns1__loadDownData **, const char*, const char*);

#ifndef soap_read_PointerTons1__loadDownData
#define soap_read_PointerTons1__loadDownData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__loadDownData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__lightproofSmokeDataLog_USCOREFC
#define SOAP_TYPE_PointerTons1__lightproofSmokeDataLog_USCOREFC (173)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__lightproofSmokeDataLog_USCOREFC(struct soap*, ns1__lightproofSmokeDataLog_USCOREFC *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__lightproofSmokeDataLog_USCOREFC(struct soap*, const char *, int, ns1__lightproofSmokeDataLog_USCOREFC *const*, const char *);
SOAP_FMAC3 ns1__lightproofSmokeDataLog_USCOREFC ** SOAP_FMAC4 soap_in_PointerTons1__lightproofSmokeDataLog_USCOREFC(struct soap*, const char*, ns1__lightproofSmokeDataLog_USCOREFC **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__lightproofSmokeDataLog_USCOREFC(struct soap*, ns1__lightproofSmokeDataLog_USCOREFC *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__lightproofSmokeDataLog_USCOREFC
#define soap_write_PointerTons1__lightproofSmokeDataLog_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__lightproofSmokeDataLog_USCOREFC(soap, data),0) || soap_put_PointerTons1__lightproofSmokeDataLog_USCOREFC(soap, data, "ns1:lightproofSmokeDataLog_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lightproofSmokeDataLog_USCOREFC ** SOAP_FMAC4 soap_get_PointerTons1__lightproofSmokeDataLog_USCOREFC(struct soap*, ns1__lightproofSmokeDataLog_USCOREFC **, const char*, const char*);

#ifndef soap_read_PointerTons1__lightproofSmokeDataLog_USCOREFC
#define soap_read_PointerTons1__lightproofSmokeDataLog_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__lightproofSmokeDataLog_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__pqfxySelfcheck
#define SOAP_TYPE_PointerTons1__pqfxySelfcheck (169)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__pqfxySelfcheck(struct soap*, ns1__pqfxySelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__pqfxySelfcheck(struct soap*, const char *, int, ns1__pqfxySelfcheck *const*, const char *);
SOAP_FMAC3 ns1__pqfxySelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__pqfxySelfcheck(struct soap*, const char*, ns1__pqfxySelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__pqfxySelfcheck(struct soap*, ns1__pqfxySelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__pqfxySelfcheck
#define soap_write_PointerTons1__pqfxySelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__pqfxySelfcheck(soap, data),0) || soap_put_PointerTons1__pqfxySelfcheck(soap, data, "ns1:pqfxySelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__pqfxySelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__pqfxySelfcheck(struct soap*, ns1__pqfxySelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__pqfxySelfcheck
#define soap_read_PointerTons1__pqfxySelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__pqfxySelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__hjcsgyqSelfcheck
#define SOAP_TYPE_PointerTons1__hjcsgyqSelfcheck (165)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__hjcsgyqSelfcheck(struct soap*, ns1__hjcsgyqSelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__hjcsgyqSelfcheck(struct soap*, const char *, int, ns1__hjcsgyqSelfcheck *const*, const char *);
SOAP_FMAC3 ns1__hjcsgyqSelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__hjcsgyqSelfcheck(struct soap*, const char*, ns1__hjcsgyqSelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__hjcsgyqSelfcheck(struct soap*, ns1__hjcsgyqSelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__hjcsgyqSelfcheck
#define soap_write_PointerTons1__hjcsgyqSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__hjcsgyqSelfcheck(soap, data),0) || soap_put_PointerTons1__hjcsgyqSelfcheck(soap, data, "ns1:hjcsgyqSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__hjcsgyqSelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__hjcsgyqSelfcheck(struct soap*, ns1__hjcsgyqSelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__hjcsgyqSelfcheck
#define soap_read_PointerTons1__hjcsgyqSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__hjcsgyqSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__cycdyhwAdjust
#define SOAP_TYPE_PointerTons1__cycdyhwAdjust (161)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__cycdyhwAdjust(struct soap*, ns1__cycdyhwAdjust *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__cycdyhwAdjust(struct soap*, const char *, int, ns1__cycdyhwAdjust *const*, const char *);
SOAP_FMAC3 ns1__cycdyhwAdjust ** SOAP_FMAC4 soap_in_PointerTons1__cycdyhwAdjust(struct soap*, const char*, ns1__cycdyhwAdjust **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__cycdyhwAdjust(struct soap*, ns1__cycdyhwAdjust *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__cycdyhwAdjust
#define soap_write_PointerTons1__cycdyhwAdjust(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__cycdyhwAdjust(soap, data),0) || soap_put_PointerTons1__cycdyhwAdjust(soap, data, "ns1:cycdyhwAdjust", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cycdyhwAdjust ** SOAP_FMAC4 soap_get_PointerTons1__cycdyhwAdjust(struct soap*, ns1__cycdyhwAdjust **, const char*, const char*);

#ifndef soap_read_PointerTons1__cycdyhwAdjust
#define soap_read_PointerTons1__cycdyhwAdjust(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__cycdyhwAdjust(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__software2centerNew_USCOREFC
#define SOAP_TYPE_PointerTons1__software2centerNew_USCOREFC (157)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__software2centerNew_USCOREFC(struct soap*, ns1__software2centerNew_USCOREFC *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__software2centerNew_USCOREFC(struct soap*, const char *, int, ns1__software2centerNew_USCOREFC *const*, const char *);
SOAP_FMAC3 ns1__software2centerNew_USCOREFC ** SOAP_FMAC4 soap_in_PointerTons1__software2centerNew_USCOREFC(struct soap*, const char*, ns1__software2centerNew_USCOREFC **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__software2centerNew_USCOREFC(struct soap*, ns1__software2centerNew_USCOREFC *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__software2centerNew_USCOREFC
#define soap_write_PointerTons1__software2centerNew_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__software2centerNew_USCOREFC(soap, data),0) || soap_put_PointerTons1__software2centerNew_USCOREFC(soap, data, "ns1:software2centerNew_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__software2centerNew_USCOREFC ** SOAP_FMAC4 soap_get_PointerTons1__software2centerNew_USCOREFC(struct soap*, ns1__software2centerNew_USCOREFC **, const char*, const char*);

#ifndef soap_read_PointerTons1__software2centerNew_USCOREFC
#define soap_read_PointerTons1__software2centerNew_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__software2centerNew_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__getCarInfo_USCOREFC
#define SOAP_TYPE_PointerTons1__getCarInfo_USCOREFC (154)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getCarInfo_USCOREFC(struct soap*, ns1__getCarInfo_USCOREFC *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getCarInfo_USCOREFC(struct soap*, const char *, int, ns1__getCarInfo_USCOREFC *const*, const char *);
SOAP_FMAC3 ns1__getCarInfo_USCOREFC ** SOAP_FMAC4 soap_in_PointerTons1__getCarInfo_USCOREFC(struct soap*, const char*, ns1__getCarInfo_USCOREFC **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getCarInfo_USCOREFC(struct soap*, ns1__getCarInfo_USCOREFC *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__getCarInfo_USCOREFC
#define soap_write_PointerTons1__getCarInfo_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__getCarInfo_USCOREFC(soap, data),0) || soap_put_PointerTons1__getCarInfo_USCOREFC(soap, data, "ns1:getCarInfo_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__getCarInfo_USCOREFC ** SOAP_FMAC4 soap_get_PointerTons1__getCarInfo_USCOREFC(struct soap*, ns1__getCarInfo_USCOREFC **, const char*, const char*);

#ifndef soap_read_PointerTons1__getCarInfo_USCOREFC
#define soap_read_PointerTons1__getCarInfo_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__getCarInfo_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__obdResultLog
#define SOAP_TYPE_PointerTons1__obdResultLog (150)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__obdResultLog(struct soap*, ns1__obdResultLog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__obdResultLog(struct soap*, const char *, int, ns1__obdResultLog *const*, const char *);
SOAP_FMAC3 ns1__obdResultLog ** SOAP_FMAC4 soap_in_PointerTons1__obdResultLog(struct soap*, const char*, ns1__obdResultLog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__obdResultLog(struct soap*, ns1__obdResultLog *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__obdResultLog
#define soap_write_PointerTons1__obdResultLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__obdResultLog(soap, data),0) || soap_put_PointerTons1__obdResultLog(soap, data, "ns1:obdResultLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__obdResultLog ** SOAP_FMAC4 soap_get_PointerTons1__obdResultLog(struct soap*, ns1__obdResultLog **, const char*, const char*);

#ifndef soap_read_PointerTons1__obdResultLog
#define soap_read_PointerTons1__obdResultLog(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__obdResultLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__dyhwAdjust
#define SOAP_TYPE_PointerTons1__dyhwAdjust (146)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__dyhwAdjust(struct soap*, ns1__dyhwAdjust *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__dyhwAdjust(struct soap*, const char *, int, ns1__dyhwAdjust *const*, const char *);
SOAP_FMAC3 ns1__dyhwAdjust ** SOAP_FMAC4 soap_in_PointerTons1__dyhwAdjust(struct soap*, const char*, ns1__dyhwAdjust **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__dyhwAdjust(struct soap*, ns1__dyhwAdjust *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__dyhwAdjust
#define soap_write_PointerTons1__dyhwAdjust(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__dyhwAdjust(soap, data),0) || soap_put_PointerTons1__dyhwAdjust(soap, data, "ns1:dyhwAdjust", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__dyhwAdjust ** SOAP_FMAC4 soap_get_PointerTons1__dyhwAdjust(struct soap*, ns1__dyhwAdjust **, const char*, const char*);

#ifndef soap_read_PointerTons1__dyhwAdjust
#define soap_read_PointerTons1__dyhwAdjust(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__dyhwAdjust(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__loadDownLog
#define SOAP_TYPE_PointerTons1__loadDownLog (142)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__loadDownLog(struct soap*, ns1__loadDownLog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__loadDownLog(struct soap*, const char *, int, ns1__loadDownLog *const*, const char *);
SOAP_FMAC3 ns1__loadDownLog ** SOAP_FMAC4 soap_in_PointerTons1__loadDownLog(struct soap*, const char*, ns1__loadDownLog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__loadDownLog(struct soap*, ns1__loadDownLog *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__loadDownLog
#define soap_write_PointerTons1__loadDownLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__loadDownLog(soap, data),0) || soap_put_PointerTons1__loadDownLog(soap, data, "ns1:loadDownLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__loadDownLog ** SOAP_FMAC4 soap_get_PointerTons1__loadDownLog(struct soap*, ns1__loadDownLog **, const char*, const char*);

#ifndef soap_read_PointerTons1__loadDownLog
#define soap_read_PointerTons1__loadDownLog(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__loadDownLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__dyhwSelfcheck
#define SOAP_TYPE_PointerTons1__dyhwSelfcheck (138)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__dyhwSelfcheck(struct soap*, ns1__dyhwSelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__dyhwSelfcheck(struct soap*, const char *, int, ns1__dyhwSelfcheck *const*, const char *);
SOAP_FMAC3 ns1__dyhwSelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__dyhwSelfcheck(struct soap*, const char*, ns1__dyhwSelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__dyhwSelfcheck(struct soap*, ns1__dyhwSelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__dyhwSelfcheck
#define soap_write_PointerTons1__dyhwSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__dyhwSelfcheck(soap, data),0) || soap_put_PointerTons1__dyhwSelfcheck(soap, data, "ns1:dyhwSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__dyhwSelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__dyhwSelfcheck(struct soap*, ns1__dyhwSelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__dyhwSelfcheck
#define soap_read_PointerTons1__dyhwSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__dyhwSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__ydjSelfcheck
#define SOAP_TYPE_PointerTons1__ydjSelfcheck (134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ydjSelfcheck(struct soap*, ns1__ydjSelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ydjSelfcheck(struct soap*, const char *, int, ns1__ydjSelfcheck *const*, const char *);
SOAP_FMAC3 ns1__ydjSelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__ydjSelfcheck(struct soap*, const char*, ns1__ydjSelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ydjSelfcheck(struct soap*, ns1__ydjSelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__ydjSelfcheck
#define soap_write_PointerTons1__ydjSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__ydjSelfcheck(soap, data),0) || soap_put_PointerTons1__ydjSelfcheck(soap, data, "ns1:ydjSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__ydjSelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__ydjSelfcheck(struct soap*, ns1__ydjSelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__ydjSelfcheck
#define soap_read_PointerTons1__ydjSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__ydjSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__vmasLog
#define SOAP_TYPE_PointerTons1__vmasLog (130)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__vmasLog(struct soap*, ns1__vmasLog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__vmasLog(struct soap*, const char *, int, ns1__vmasLog *const*, const char *);
SOAP_FMAC3 ns1__vmasLog ** SOAP_FMAC4 soap_in_PointerTons1__vmasLog(struct soap*, const char*, ns1__vmasLog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__vmasLog(struct soap*, ns1__vmasLog *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__vmasLog
#define soap_write_PointerTons1__vmasLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__vmasLog(soap, data),0) || soap_put_PointerTons1__vmasLog(soap, data, "ns1:vmasLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__vmasLog ** SOAP_FMAC4 soap_get_PointerTons1__vmasLog(struct soap*, ns1__vmasLog **, const char*, const char*);

#ifndef soap_read_PointerTons1__vmasLog
#define soap_read_PointerTons1__vmasLog(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__vmasLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__doubleIdleLog_USCOREFC
#define SOAP_TYPE_PointerTons1__doubleIdleLog_USCOREFC (126)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__doubleIdleLog_USCOREFC(struct soap*, ns1__doubleIdleLog_USCOREFC *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__doubleIdleLog_USCOREFC(struct soap*, const char *, int, ns1__doubleIdleLog_USCOREFC *const*, const char *);
SOAP_FMAC3 ns1__doubleIdleLog_USCOREFC ** SOAP_FMAC4 soap_in_PointerTons1__doubleIdleLog_USCOREFC(struct soap*, const char*, ns1__doubleIdleLog_USCOREFC **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__doubleIdleLog_USCOREFC(struct soap*, ns1__doubleIdleLog_USCOREFC *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__doubleIdleLog_USCOREFC
#define soap_write_PointerTons1__doubleIdleLog_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__doubleIdleLog_USCOREFC(soap, data),0) || soap_put_PointerTons1__doubleIdleLog_USCOREFC(soap, data, "ns1:doubleIdleLog_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__doubleIdleLog_USCOREFC ** SOAP_FMAC4 soap_get_PointerTons1__doubleIdleLog_USCOREFC(struct soap*, ns1__doubleIdleLog_USCOREFC **, const char*, const char*);

#ifndef soap_read_PointerTons1__doubleIdleLog_USCOREFC
#define soap_read_PointerTons1__doubleIdleLog_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__doubleIdleLog_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__obdResult
#define SOAP_TYPE_PointerTons1__obdResult (122)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__obdResult(struct soap*, ns1__obdResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__obdResult(struct soap*, const char *, int, ns1__obdResult *const*, const char *);
SOAP_FMAC3 ns1__obdResult ** SOAP_FMAC4 soap_in_PointerTons1__obdResult(struct soap*, const char*, ns1__obdResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__obdResult(struct soap*, ns1__obdResult *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__obdResult
#define soap_write_PointerTons1__obdResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__obdResult(soap, data),0) || soap_put_PointerTons1__obdResult(soap, data, "ns1:obdResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__obdResult ** SOAP_FMAC4 soap_get_PointerTons1__obdResult(struct soap*, ns1__obdResult **, const char*, const char*);

#ifndef soap_read_PointerTons1__obdResult
#define soap_read_PointerTons1__obdResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__obdResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__cgjSelfcheck
#define SOAP_TYPE_PointerTons1__cgjSelfcheck (118)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__cgjSelfcheck(struct soap*, ns1__cgjSelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__cgjSelfcheck(struct soap*, const char *, int, ns1__cgjSelfcheck *const*, const char *);
SOAP_FMAC3 ns1__cgjSelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__cgjSelfcheck(struct soap*, const char*, ns1__cgjSelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__cgjSelfcheck(struct soap*, ns1__cgjSelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__cgjSelfcheck
#define soap_write_PointerTons1__cgjSelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__cgjSelfcheck(soap, data),0) || soap_put_PointerTons1__cgjSelfcheck(soap, data, "ns1:cgjSelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjSelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__cgjSelfcheck(struct soap*, ns1__cgjSelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__cgjSelfcheck
#define soap_read_PointerTons1__cgjSelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__cgjSelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__cgjLASelfcheck
#define SOAP_TYPE_PointerTons1__cgjLASelfcheck (114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__cgjLASelfcheck(struct soap*, ns1__cgjLASelfcheck *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__cgjLASelfcheck(struct soap*, const char *, int, ns1__cgjLASelfcheck *const*, const char *);
SOAP_FMAC3 ns1__cgjLASelfcheck ** SOAP_FMAC4 soap_in_PointerTons1__cgjLASelfcheck(struct soap*, const char*, ns1__cgjLASelfcheck **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__cgjLASelfcheck(struct soap*, ns1__cgjLASelfcheck *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__cgjLASelfcheck
#define soap_write_PointerTons1__cgjLASelfcheck(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__cgjLASelfcheck(soap, data),0) || soap_put_PointerTons1__cgjLASelfcheck(soap, data, "ns1:cgjLASelfcheck", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__cgjLASelfcheck ** SOAP_FMAC4 soap_get_PointerTons1__cgjLASelfcheck(struct soap*, ns1__cgjLASelfcheck **, const char*, const char*);

#ifndef soap_read_PointerTons1__cgjLASelfcheck
#define soap_read_PointerTons1__cgjLASelfcheck(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__cgjLASelfcheck(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__doubleIdleData_USCOREFC
#define SOAP_TYPE_PointerTons1__doubleIdleData_USCOREFC (110)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__doubleIdleData_USCOREFC(struct soap*, ns1__doubleIdleData_USCOREFC *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__doubleIdleData_USCOREFC(struct soap*, const char *, int, ns1__doubleIdleData_USCOREFC *const*, const char *);
SOAP_FMAC3 ns1__doubleIdleData_USCOREFC ** SOAP_FMAC4 soap_in_PointerTons1__doubleIdleData_USCOREFC(struct soap*, const char*, ns1__doubleIdleData_USCOREFC **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__doubleIdleData_USCOREFC(struct soap*, ns1__doubleIdleData_USCOREFC *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__doubleIdleData_USCOREFC
#define soap_write_PointerTons1__doubleIdleData_USCOREFC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__doubleIdleData_USCOREFC(soap, data),0) || soap_put_PointerTons1__doubleIdleData_USCOREFC(soap, data, "ns1:doubleIdleData_FC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__doubleIdleData_USCOREFC ** SOAP_FMAC4 soap_get_PointerTons1__doubleIdleData_USCOREFC(struct soap*, ns1__doubleIdleData_USCOREFC **, const char*, const char*);

#ifndef soap_read_PointerTons1__doubleIdleData_USCOREFC
#define soap_read_PointerTons1__doubleIdleData_USCOREFC(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__doubleIdleData_USCOREFC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__bgAirHC
#define SOAP_TYPE_PointerTons1__bgAirHC (106)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__bgAirHC(struct soap*, ns1__bgAirHC *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__bgAirHC(struct soap*, const char *, int, ns1__bgAirHC *const*, const char *);
SOAP_FMAC3 ns1__bgAirHC ** SOAP_FMAC4 soap_in_PointerTons1__bgAirHC(struct soap*, const char*, ns1__bgAirHC **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__bgAirHC(struct soap*, ns1__bgAirHC *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__bgAirHC
#define soap_write_PointerTons1__bgAirHC(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__bgAirHC(soap, data),0) || soap_put_PointerTons1__bgAirHC(soap, data, "ns1:bgAirHC", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__bgAirHC ** SOAP_FMAC4 soap_get_PointerTons1__bgAirHC(struct soap*, ns1__bgAirHC **, const char*, const char*);

#ifndef soap_read_PointerTons1__bgAirHC
#define soap_read_PointerTons1__bgAirHC(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__bgAirHC(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__sendMessage
#define SOAP_TYPE_PointerTons1__sendMessage (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__sendMessage(struct soap*, ns1__sendMessage *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__sendMessage(struct soap*, const char *, int, ns1__sendMessage *const*, const char *);
SOAP_FMAC3 ns1__sendMessage ** SOAP_FMAC4 soap_in_PointerTons1__sendMessage(struct soap*, const char*, ns1__sendMessage **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__sendMessage(struct soap*, ns1__sendMessage *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__sendMessage
#define soap_write_PointerTons1__sendMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__sendMessage(soap, data),0) || soap_put_PointerTons1__sendMessage(soap, data, "ns1:sendMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__sendMessage ** SOAP_FMAC4 soap_get_PointerTons1__sendMessage(struct soap*, ns1__sendMessage **, const char*, const char*);

#ifndef soap_read_PointerTons1__sendMessage
#define soap_read_PointerTons1__sendMessage(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__sendMessage(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__getCarInfo
#define SOAP_TYPE_PointerTons1__getCarInfo (98)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getCarInfo(struct soap*, ns1__getCarInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getCarInfo(struct soap*, const char *, int, ns1__getCarInfo *const*, const char *);
SOAP_FMAC3 ns1__getCarInfo ** SOAP_FMAC4 soap_in_PointerTons1__getCarInfo(struct soap*, const char*, ns1__getCarInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getCarInfo(struct soap*, ns1__getCarInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__getCarInfo
#define soap_write_PointerTons1__getCarInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__getCarInfo(soap, data),0) || soap_put_PointerTons1__getCarInfo(soap, data, "ns1:getCarInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__getCarInfo ** SOAP_FMAC4 soap_get_PointerTons1__getCarInfo(struct soap*, ns1__getCarInfo **, const char*, const char*);

#ifndef soap_read_PointerTons1__getCarInfo
#define soap_read_PointerTons1__getCarInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__getCarInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__lightproofSmokeLog
#define SOAP_TYPE_PointerTons1__lightproofSmokeLog (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__lightproofSmokeLog(struct soap*, ns1__lightproofSmokeLog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__lightproofSmokeLog(struct soap*, const char *, int, ns1__lightproofSmokeLog *const*, const char *);
SOAP_FMAC3 ns1__lightproofSmokeLog ** SOAP_FMAC4 soap_in_PointerTons1__lightproofSmokeLog(struct soap*, const char*, ns1__lightproofSmokeLog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__lightproofSmokeLog(struct soap*, ns1__lightproofSmokeLog *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__lightproofSmokeLog
#define soap_write_PointerTons1__lightproofSmokeLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__lightproofSmokeLog(soap, data),0) || soap_put_PointerTons1__lightproofSmokeLog(soap, data, "ns1:lightproofSmokeLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__lightproofSmokeLog ** SOAP_FMAC4 soap_get_PointerTons1__lightproofSmokeLog(struct soap*, ns1__lightproofSmokeLog **, const char*, const char*);

#ifndef soap_read_PointerTons1__lightproofSmokeLog
#define soap_read_PointerTons1__lightproofSmokeLog(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__lightproofSmokeLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__argChang
#define SOAP_TYPE_PointerTons1__argChang (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__argChang(struct soap*, ns1__argChang *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__argChang(struct soap*, const char *, int, ns1__argChang *const*, const char *);
SOAP_FMAC3 ns1__argChang ** SOAP_FMAC4 soap_in_PointerTons1__argChang(struct soap*, const char*, ns1__argChang **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__argChang(struct soap*, ns1__argChang *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__argChang
#define soap_write_PointerTons1__argChang(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__argChang(soap, data),0) || soap_put_PointerTons1__argChang(soap, data, "ns1:argChang", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__argChang ** SOAP_FMAC4 soap_get_PointerTons1__argChang(struct soap*, ns1__argChang **, const char*, const char*);

#ifndef soap_read_PointerTons1__argChang
#define soap_read_PointerTons1__argChang(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__argChang(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__stateInfo
#define SOAP_TYPE_PointerTons1__stateInfo (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__stateInfo(struct soap*, ns1__stateInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__stateInfo(struct soap*, const char *, int, ns1__stateInfo *const*, const char *);
SOAP_FMAC3 ns1__stateInfo ** SOAP_FMAC4 soap_in_PointerTons1__stateInfo(struct soap*, const char*, ns1__stateInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__stateInfo(struct soap*, ns1__stateInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__stateInfo
#define soap_write_PointerTons1__stateInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__stateInfo(soap, data),0) || soap_put_PointerTons1__stateInfo(soap, data, "ns1:stateInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__stateInfo ** SOAP_FMAC4 soap_get_PointerTons1__stateInfo(struct soap*, ns1__stateInfo **, const char*, const char*);

#ifndef soap_read_PointerTons1__stateInfo
#define soap_read_PointerTons1__stateInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__stateInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__carInfo
#define SOAP_TYPE_PointerTons1__carInfo (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__carInfo(struct soap*, ns1__carInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__carInfo(struct soap*, const char *, int, ns1__carInfo *const*, const char *);
SOAP_FMAC3 ns1__carInfo ** SOAP_FMAC4 soap_in_PointerTons1__carInfo(struct soap*, const char*, ns1__carInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__carInfo(struct soap*, ns1__carInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__carInfo
#define soap_write_PointerTons1__carInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons1__carInfo(soap, data),0) || soap_put_PointerTons1__carInfo(soap, data, "ns1:carInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns1__carInfo ** SOAP_FMAC4 soap_get_PointerTons1__carInfo(struct soap*, ns1__carInfo **, const char*, const char*);

#ifndef soap_read_PointerTons1__carInfo
#define soap_read_PointerTons1__carInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__carInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__wstring
#define SOAP_TYPE_PointerTostd__wstring (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__wstring(struct soap*, std::wstring *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__wstring(struct soap*, const char *, int, std::wstring *const*, const char *);
SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_in_PointerTostd__wstring(struct soap*, const char*, std::wstring **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__wstring(struct soap*, std::wstring *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__wstring
#define soap_write_PointerTostd__wstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__wstring(soap, data),0) || soap_put_PointerTostd__wstring(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_get_PointerTostd__wstring(struct soap*, std::wstring **, const char*, const char*);

#ifndef soap_read_PointerTostd__wstring
#define soap_read_PointerTostd__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__wstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
